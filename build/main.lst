ARM GAS  /tmp/cc27GeAc.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB248:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** #include "main.h"
   2:Core/Src/main.c **** #include <string.h>
   3:Core/Src/main.c **** #include <stdio.h>
   4:Core/Src/main.c **** 
   5:Core/Src/main.c **** ADC_HandleTypeDef  hadc1;
   6:Core/Src/main.c **** DMA_HandleTypeDef  hdma_adc1;
   7:Core/Src/main.c **** ADC_HandleTypeDef  hadc2;
   8:Core/Src/main.c **** DMA_HandleTypeDef  hdma_adc2;
   9:Core/Src/main.c **** 
  10:Core/Src/main.c **** DAC_HandleTypeDef  hdac;
  11:Core/Src/main.c **** DMA_HandleTypeDef  hdma_dac1;
  12:Core/Src/main.c **** TIM_HandleTypeDef  htim2;
  13:Core/Src/main.c **** UART_HandleTypeDef huart2;
  14:Core/Src/main.c **** 
  15:Core/Src/main.c **** void SystemClock_Config(void);
  16:Core/Src/main.c **** void SystemClockHSE_Config(void) ;
  17:Core/Src/main.c **** static void MX_GPIO_Init(void);
  18:Core/Src/main.c **** static void MX_DMA_Init(void);
  19:Core/Src/main.c **** static void MX_ADC1_Init(void);
  20:Core/Src/main.c **** static void MX_ADC2_Init(void);
  21:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  22:Core/Src/main.c **** static void MX_DAC_Init(void);
  23:Core/Src/main.c **** static void MX_TIM2_Init(void);
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** #define HSE_BYPASS
  26:Core/Src/main.c **** //#define OVERCLOCK    // Define this to increase CPU Clock
  27:Core/Src/main.c **** #define DEBUG        // Define this if debugging with a LED connected to DAC Out
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** #ifdef DEBUG
  30:Core/Src/main.c ****     #define RAMP_FREQUENCY 1 // Hz
  31:Core/Src/main.c **** #else
ARM GAS  /tmp/cc27GeAc.s 			page 2


  32:Core/Src/main.c ****     #define RAMP_FREQUENCY 20 // Hz
  33:Core/Src/main.c **** #endif
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** #define DAC_BUFFERED
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** typedef uint8_t bool;
  38:Core/Src/main.c **** #define false 0
  39:Core/Src/main.c **** #define true  !false
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** #define NS 4096
  42:Core/Src/main.c **** uint16_t Ramp[NS];
  43:Core/Src/main.c **** uint16_t adc1Val[2*NS];
  44:Core/Src/main.c **** uint16_t txBuff[NS];
  45:Core/Src/main.c **** uint32_t avg[NS];
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** #define AVERNUM RAMP_FREQUENCY
  48:Core/Src/main.c **** uint16_t nAvg;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** #define ADC_RAMP_BUFFER_LENGTH NS
  51:Core/Src/main.c **** uint16_t adc2Val[2*ADC_RAMP_BUFFER_LENGTH];
  52:Core/Src/main.c **** uint16_t rampMin = 0;
  53:Core/Src/main.c **** uint16_t rampMax = 4095;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** __IO bool adc1HalfReady=false;
  56:Core/Src/main.c **** __IO bool adc1FullReady=false;
  57:Core/Src/main.c **** __IO bool adc2HalfReady=false;
  58:Core/Src/main.c **** __IO bool adc2FullReady=false;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** char outBuff[80];
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** void
  64:Core/Src/main.c **** buildRamp(int16_t np, uint16_t min, uint16_t max, uint16_t* pRamp) {
  65:Core/Src/main.c ****     float factor = (float)(max-min)/(float)np;
  66:Core/Src/main.c ****     for(int16_t i=0; i<np; i++) {
  67:Core/Src/main.c ****         pRamp[i] = (uint16_t)(min+factor*i);
  68:Core/Src/main.c ****     }
  69:Core/Src/main.c **** }
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** // ADC1 In0  ==> PA0
  73:Core/Src/main.c **** // DAC  Out  ==> PA4
  74:Core/Src/main.c **** // ADC2_In14 ==> PC4
  75:Core/Src/main.c **** // ADC2_In15 ==> PC5
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** int 
  79:Core/Src/main.c **** main(void) {
  80:Core/Src/main.c ****     #ifdef DEBUG
  81:Core/Src/main.c ****         buildRamp(NS, rampMin, rampMax, Ramp);
  82:Core/Src/main.c ****     #else
  83:Core/Src/main.c ****         buildRamp(NS, rampMin, rampMax, Ramp);
  84:Core/Src/main.c ****     #endif
  85:Core/Src/main.c ****     adc1HalfReady=false;
  86:Core/Src/main.c ****     adc1FullReady=false;
  87:Core/Src/main.c ****     adc2HalfReady=false;
  88:Core/Src/main.c ****     adc2FullReady=false;
ARM GAS  /tmp/cc27GeAc.s 			page 3


  89:Core/Src/main.c ****     memset(avg, 0, sizeof(avg));
  90:Core/Src/main.c ****     nAvg = 0;
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****     HAL_Init();
  93:Core/Src/main.c ****     // SystemClock_Config();
  94:Core/Src/main.c ****     SystemClockHSE_Config();
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****     MX_GPIO_Init();
  97:Core/Src/main.c ****     MX_DMA_Init();
  98:Core/Src/main.c ****     MX_ADC1_Init();
  99:Core/Src/main.c ****     MX_ADC2_Init();
 100:Core/Src/main.c ****     MX_USART2_UART_Init();
 101:Core/Src/main.c ****     MX_DAC_Init();
 102:Core/Src/main.c ****     MX_TIM2_Init();
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****     if(HAL_DAC_Start_DMA(&hdac, DAC_CHANNEL_1, (uint32_t*)Ramp, NS, DAC_ALIGN_12B_R))
 105:Core/Src/main.c ****         Error_Handler(); 
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****     if(HAL_ADC_Start_DMA(&hadc1, (uint32_t*)&adc1Val, 2*NS))
 108:Core/Src/main.c ****         Error_Handler(); 
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****     if(HAL_ADC_Start_DMA(&hadc2, (uint32_t*)&adc2Val, 2*ADC_RAMP_BUFFER_LENGTH))
 111:Core/Src/main.c ****         Error_Handler(); 
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****     if(HAL_TIM_Base_Start(&htim2))
 114:Core/Src/main.c ****         Error_Handler();
 115:Core/Src/main.c ****     
 116:Core/Src/main.c ****     // start pwm generation (is This needed ?)
 117:Core/Src/main.c ****     // if(HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1))
 118:Core/Src/main.c ****     //     Error_Handler();
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****     if(HAL_ADC_Start_IT(&hadc2) != HAL_OK)
 121:Core/Src/main.c ****         Error_Handler();
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****     while (1) {
 124:Core/Src/main.c ****         if(adc1HalfReady) {
 125:Core/Src/main.c ****             adc1HalfReady = false;
 126:Core/Src/main.c ****             HAL_GPIO_TogglePin (LD2_GPIO_Port, LD2_Pin);
 127:Core/Src/main.c ****             // memcpy(txBuff, adc_val, NS*sizeof(*adc_val));
 128:Core/Src/main.c ****             // bNewData = true;
 129:Core/Src/main.c ****         }
 130:Core/Src/main.c ****         if(adc1FullReady) {
 131:Core/Src/main.c ****             adc1FullReady = false;
 132:Core/Src/main.c ****             HAL_GPIO_TogglePin (LD2_GPIO_Port, LD2_Pin);
 133:Core/Src/main.c ****             // memcpy(txBuff, &adc_val[NS], NS*sizeof(*adc_val));
 134:Core/Src/main.c ****             // bNewData = true;
 135:Core/Src/main.c ****         }
 136:Core/Src/main.c ****         if(adc2HalfReady) {
 137:Core/Src/main.c ****             adc2HalfReady = false;
 138:Core/Src/main.c ****             HAL_GPIO_TogglePin (LD2_GPIO_Port, LD2_Pin);
 139:Core/Src/main.c ****             // memcpy(txBuff, adc_val, NS*sizeof(*adc_val));
 140:Core/Src/main.c ****             // bNewData = true;
 141:Core/Src/main.c ****         }
 142:Core/Src/main.c ****         if(adc2FullReady) {
 143:Core/Src/main.c ****             adc2FullReady = false;
 144:Core/Src/main.c ****             HAL_GPIO_TogglePin (LD2_GPIO_Port, LD2_Pin);
 145:Core/Src/main.c ****             // memcpy(txBuff, &adc_val[NS], NS*sizeof(*adc_val));
ARM GAS  /tmp/cc27GeAc.s 			page 4


 146:Core/Src/main.c ****             // bNewData = true;
 147:Core/Src/main.c ****         }
 148:Core/Src/main.c **** /*        
 149:Core/Src/main.c ****         else {
 150:Core/Src/main.c ****             if(bNewData) {
 151:Core/Src/main.c ****                 bNewData = false;
 152:Core/Src/main.c ****                 for(int i=0; i<NS; i++) {
 153:Core/Src/main.c ****                     avg[i] += txBuff[i];
 154:Core/Src/main.c ****                 }
 155:Core/Src/main.c ****                 nAvg++;
 156:Core/Src/main.c ****                 if(nAvg >= AVERNUM) {
 157:Core/Src/main.c ****                     HAL_TIM_Base_Stop(&htim2);
 158:Core/Src/main.c ****                     HAL_DAC_Stop_DMA(&hdac, DAC_CHANNEL_1);
 159:Core/Src/main.c ****                     HAL_ADC_Stop_DMA(&hadc1);
 160:Core/Src/main.c ****                     for(int i=0; i<NS; i++) {
 161:Core/Src/main.c ****                         avg[i] = avg[i]/AVERNUM;
 162:Core/Src/main.c ****                         //sprintf(outBuff, "i=%d f=%ld\n\r", i, avg[i]);
 163:Core/Src/main.c ****                         //HAL_UART_Transmit(&huart2, (uint8_t*)outBuff, strlen(outBuff), 10);
 164:Core/Src/main.c ****                     }
 165:Core/Src/main.c ****                     nAvg = 0;
 166:Core/Src/main.c ****                     memset(avg, 0, sizeof(avg));
 167:Core/Src/main.c ****                     ready_1_half = false;
 168:Core/Src/main.c ****                     ready_2_half = false;
 169:Core/Src/main.c ****                     HAL_DAC_Start_DMA(&hdac, DAC_CHANNEL_1, (uint32_t*)Ramp, NS, DAC_ALIGN_12B_R);
 170:Core/Src/main.c ****                     HAL_ADC_Start_DMA(&hadc1, (uint32_t*)&adc_val, 2*NS);
 171:Core/Src/main.c ****                     HAL_TIM_Base_Start(&htim2);
 172:Core/Src/main.c ****                 }
 173:Core/Src/main.c ****             }
 174:Core/Src/main.c ****             // HAL_GPIO_TogglePin (LD2_GPIO_Port, LD2_Pin);
 175:Core/Src/main.c ****         }
 176:Core/Src/main.c ****         if(bNewRamp) {
 177:Core/Src/main.c ****             bNewRamp = false;
 178:Core/Src/main.c ****             // if(hadc2.NbrOfCurrentConversionRank == 1)
 179:Core/Src/main.c ****                 rampMin = HAL_ADC_GetValue(&hadc2);
 180:Core/Src/main.c ****             // else if(hadc2.NbrOfCurrentConversionRank == 2)
 181:Core/Src/main.c ****                 rampMax = HAL_ADC_GetValue(&hadc2);
 182:Core/Src/main.c ****             sprintf(outBuff, "Ramp Min=%d Ramp Max=%d\n\r", rampMin, rampMax);
 183:Core/Src/main.c ****             HAL_UART_Transmit(&huart2, (uint8_t*)outBuff, strlen(outBuff), 10);
 184:Core/Src/main.c ****             if(HAL_ADC_Start_IT(&hadc2) != HAL_OK)
 185:Core/Src/main.c ****                 Error_Handler();
 186:Core/Src/main.c ****         }
 187:Core/Src/main.c **** */
 188:Core/Src/main.c ****     } // while(true)
 189:Core/Src/main.c **** }
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** 
 192:Core/Src/main.c **** /**
 193:Core/Src/main.c ****   * @brief  System Clock Configuration
 194:Core/Src/main.c ****   *         The system Clock is configured as follow : 
 195:Core/Src/main.c ****   *            System Clock source            = PLL (HSE_CRYSTAL or HSE_BYPASS) 
 196:Core/Src/main.c ****   *            SYSCLK(Hz)                     = 180000000
 197:Core/Src/main.c ****   *            HCLK(Hz)                       = 180000000
 198:Core/Src/main.c ****   *            AHB Prescaler                  = 1
 199:Core/Src/main.c ****   *            APB1 Prescaler                 = 4
 200:Core/Src/main.c ****   *            APB2 Prescaler                 = 2
 201:Core/Src/main.c ****   *            HSE Frequency(Hz)              = 8000000
 202:Core/Src/main.c ****   *            PLL_M                          = 8
ARM GAS  /tmp/cc27GeAc.s 			page 5


 203:Core/Src/main.c ****   *            PLL_N                          = 360
 204:Core/Src/main.c ****   *            PLL_P                          = 2
 205:Core/Src/main.c ****   *            PLL_Q                          = 7
 206:Core/Src/main.c ****   *            VDD(V)                         = 3.3
 207:Core/Src/main.c ****   *            Main regulator output voltage  = Scale1 mode
 208:Core/Src/main.c ****   *            Flash Latency(WS)              = 5
 209:Core/Src/main.c ****   * @param  None
 210:Core/Src/main.c ****   * @retval None
 211:Core/Src/main.c ****   */
 212:Core/Src/main.c **** void
 213:Core/Src/main.c **** SystemClockHSE_Config(void) {
 214:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 215:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 216:Core/Src/main.c ****   HAL_StatusTypeDef ret = HAL_OK;
 217:Core/Src/main.c ****     
 218:Core/Src/main.c ****   /* Enable Power Control clock */
 219:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 220:Core/Src/main.c ****   
 221:Core/Src/main.c ****   /* The voltage scaling allows optimizing the power consumption when the device is 
 222:Core/Src/main.c ****      clocked below the maximum system frequency, to update the voltage scaling value 
 223:Core/Src/main.c ****      regarding system frequency refer to product datasheet.  */
 224:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****   /* -1- Select HSI as system clock source to allow modification of the PLL configuration */
 227:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType    = RCC_CLOCKTYPE_SYSCLK;
 228:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 229:Core/Src/main.c ****   if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK) {
 230:Core/Src/main.c ****     Error_Handler();
 231:Core/Src/main.c ****   }
 232:Core/Src/main.c ****   
 233:Core/Src/main.c ****   /* -2- Enable HSE Oscillator, select it as PLL source and finally activate the PLL */
 234:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 235:Core/Src/main.c ****   
 236:Core/Src/main.c **** #ifdef HSE_CRYSTAL  
 237:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 238:Core/Src/main.c **** #elif defined (HSE_BYPASS)
 239:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 240:Core/Src/main.c **** #endif /* HSE_CRYSTAL */
 241:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState  = RCC_PLL_ON;
 242:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 243:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM      = 8;
 244:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN      = 360;
 245:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP      = RCC_PLLP_DIV2; 
 246:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ      = 7;
 247:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR      = 6;
 248:Core/Src/main.c ****   if(HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 249:Core/Src/main.c ****     /* Initialization Error */
 250:Core/Src/main.c ****     Error_Handler();
 251:Core/Src/main.c ****   }
 252:Core/Src/main.c ****   
 253:Core/Src/main.c ****    /* Activate the OverDrive to reach the 180 MHz Frequency */  
 254:Core/Src/main.c ****   ret = HAL_PWREx_EnableOverDrive();
 255:Core/Src/main.c ****   if(ret != HAL_OK) {
 256:Core/Src/main.c ****     while(1) { ; }
 257:Core/Src/main.c ****   }
 258:Core/Src/main.c ****   /* Select PLL as system clock source and configure the HCLK, PCLK1 and PCLK2 
 259:Core/Src/main.c ****      clocks dividers */
ARM GAS  /tmp/cc27GeAc.s 			page 6


 260:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType      = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | 
 261:Core/Src/main.c ****                                       RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2);
 262:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource   = RCC_SYSCLKSOURCE_PLLCLK;
 263:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider  = RCC_SYSCLK_DIV1;
 264:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;  
 265:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;  
 266:Core/Src/main.c ****   if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK) {
 267:Core/Src/main.c ****     Error_Handler();
 268:Core/Src/main.c ****   }
 269:Core/Src/main.c ****   
 270:Core/Src/main.c ****   /* -4- Optional: Disable HSI Oscillator (if the HSI is no more needed by the application) */
 271:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 272:Core/Src/main.c ****   RCC_OscInitStruct.HSIState       = RCC_HSI_OFF;
 273:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState   = RCC_PLL_NONE;
 274:Core/Src/main.c ****   if(HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 275:Core/Src/main.c ****     Error_Handler();
 276:Core/Src/main.c ****   }
 277:Core/Src/main.c **** }
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** 
 280:Core/Src/main.c **** 
 281:Core/Src/main.c **** #ifdef OVERCLOCK
 282:Core/Src/main.c **** void
 283:Core/Src/main.c **** SystemClock_Config(void) {
 284:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 285:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   // Configure the main internal regulator output voltage
 288:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 289:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 290:Core/Src/main.c ****   // Initializes the RCC Oscillators according to the specified parameters
 291:Core/Src/main.c ****   // in the RCC_OscInitTypeDef structure.
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType      = RCC_OSCILLATORTYPE_HSI;
 294:Core/Src/main.c ****   RCC_OscInitStruct.HSIState            = RCC_HSI_ON;
 295:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 296:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState        = RCC_PLL_ON;
 297:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource       = RCC_PLLSOURCE_HSI;
 298:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM            = 16;
 299:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN            = 360;
 300:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP            = RCC_PLLP_DIV2;
 301:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ            = 7;
 302:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR            = 6;
 303:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 304:Core/Src/main.c ****     Error_Handler();
 305:Core/Src/main.c ****   }
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   // Activate the Over-Drive mode
 308:Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK) {
 309:Core/Src/main.c ****     Error_Handler();
 310:Core/Src/main.c ****   }
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   // Initializes the CPU, AHB and APB buses clocks
 313:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType      = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK|
 314:Core/Src/main.c ****                                      RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 315:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource   = RCC_SYSCLKSOURCE_PLLCLK;
 316:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider  = RCC_SYSCLK_DIV1;
ARM GAS  /tmp/cc27GeAc.s 			page 7


 317:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 318:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK) {
 321:Core/Src/main.c ****     Error_Handler();
 322:Core/Src/main.c ****   }
 323:Core/Src/main.c **** }
 324:Core/Src/main.c **** 
 325:Core/Src/main.c **** #else // Not OVERCLOCK
 326:Core/Src/main.c **** 
 327:Core/Src/main.c **** void 
 328:Core/Src/main.c **** SystemClock_Config(void) {
 329:Core/Src/main.c ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 330:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****     __HAL_RCC_PWR_CLK_ENABLE();
 333:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****     RCC_OscInitStruct.OscillatorType      = RCC_OSCILLATORTYPE_HSI;
 336:Core/Src/main.c ****     RCC_OscInitStruct.HSIState            = RCC_HSI_ON;
 337:Core/Src/main.c ****     RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 338:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState        = RCC_PLL_ON;
 339:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource       = RCC_PLLSOURCE_HSI;
 340:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM            = 16;
 341:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN            = 336;
 342:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP            = RCC_PLLP_DIV4;
 343:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ            = 2;
 344:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLR            = 2;
 345:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 346:Core/Src/main.c ****         Error_Handler();
 347:Core/Src/main.c ****     }
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****     RCC_ClkInitStruct.ClockType      = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK|
 350:Core/Src/main.c ****                                        RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 351:Core/Src/main.c ****     RCC_ClkInitStruct.SYSCLKSource   = RCC_SYSCLKSOURCE_PLLCLK;
 352:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider  = RCC_SYSCLK_DIV1;
 353:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 354:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****     if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK) {
 357:Core/Src/main.c ****         Error_Handler();
 358:Core/Src/main.c ****     }
 359:Core/Src/main.c **** }
 360:Core/Src/main.c **** #endif // OVERCLOCK
 361:Core/Src/main.c **** 
 362:Core/Src/main.c **** 
 363:Core/Src/main.c **** static void
 364:Core/Src/main.c **** MX_ADC1_Init(void) {
 365:Core/Src/main.c ****     ADC_ChannelConfTypeDef sConfig = {0};
 366:Core/Src/main.c **** 
 367:Core/Src/main.c ****     hadc1.Instance = ADC1;
 368:Core/Src/main.c ****     hadc1.Init.ClockPrescaler        = ADC_CLOCK_SYNC_PCLK_DIV4; // The clock is common for all the
 369:Core/Src/main.c ****     hadc1.Init.Resolution            = ADC_RESOLUTION_12B;
 370:Core/Src/main.c ****     hadc1.Init.ScanConvMode          = DISABLE;
 371:Core/Src/main.c ****     hadc1.Init.ContinuousConvMode    = DISABLE;
 372:Core/Src/main.c ****     hadc1.Init.DiscontinuousConvMode = DISABLE;
 373:Core/Src/main.c ****     hadc1.Init.ExternalTrigConvEdge  = ADC_EXTERNALTRIGCONVEDGE_RISING;
ARM GAS  /tmp/cc27GeAc.s 			page 8


 374:Core/Src/main.c ****     hadc1.Init.ExternalTrigConv      = ADC_EXTERNALTRIGCONV_T2_TRGO;
 375:Core/Src/main.c ****     hadc1.Init.DataAlign             = ADC_DATAALIGN_RIGHT;
 376:Core/Src/main.c ****     hadc1.Init.NbrOfConversion       = 1;
 377:Core/Src/main.c ****     hadc1.Init.DMAContinuousRequests = ENABLE;
 378:Core/Src/main.c ****     hadc1.Init.EOCSelection          = ADC_EOC_SINGLE_CONV;
 379:Core/Src/main.c ****     if (HAL_ADC_Init(&hadc1) != HAL_OK) {
 380:Core/Src/main.c ****         Error_Handler();
 381:Core/Src/main.c ****     }
 382:Core/Src/main.c ****     // The total conversion time is calculated as follows:
 383:Core/Src/main.c ****     // Tconv = ADC_SAMPLETIME + 12 cycles
 384:Core/Src/main.c ****     sConfig.Channel      = ADC_CHANNEL_0;
 385:Core/Src/main.c ****     sConfig.Rank         = 1;
 386:Core/Src/main.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_28CYCLES;//ADC_SAMPLETIME_3CYCLES;
 387:Core/Src/main.c ****     if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK) {
 388:Core/Src/main.c ****         Error_Handler();
 389:Core/Src/main.c ****     }
 390:Core/Src/main.c **** }
 391:Core/Src/main.c **** 
 392:Core/Src/main.c **** 
 393:Core/Src/main.c **** /**
 394:Core/Src/main.c ****   * @brief ADC2 Initialization Function
 395:Core/Src/main.c ****   * @param None
 396:Core/Src/main.c ****   * @retval None
 397:Core/Src/main.c ****   */
 398:Core/Src/main.c **** static void 
 399:Core/Src/main.c **** MX_ADC2_Init(void) {
 400:Core/Src/main.c **** 
 401:Core/Src/main.c ****     /* USER CODE BEGIN ADC2_Init 0 */
 402:Core/Src/main.c ****     /* USER CODE END ADC2_Init 0 */
 403:Core/Src/main.c **** 
 404:Core/Src/main.c ****     ADC_ChannelConfTypeDef sConfig = {0};
 405:Core/Src/main.c **** 
 406:Core/Src/main.c ****     /* USER CODE BEGIN ADC2_Init 1 */
 407:Core/Src/main.c ****     /* USER CODE END ADC2_Init 1 */
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****     /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of c
 410:Core/Src/main.c ****      */
 411:Core/Src/main.c ****     hadc2.Instance = ADC2;
 412:Core/Src/main.c ****     hadc2.Init.ClockPrescaler        = ADC_CLOCK_SYNC_PCLK_DIV4; // The clock is common for all the
 413:Core/Src/main.c ****     hadc2.Init.Resolution            = ADC_RESOLUTION_12B;
 414:Core/Src/main.c ****     hadc2.Init.ScanConvMode          = ENABLE; // In scan mode, automatic conversion is performed o
 415:Core/Src/main.c ****     hadc2.Init.ContinuousConvMode    = DISABLE;
 416:Core/Src/main.c ****     hadc2.Init.DiscontinuousConvMode = DISABLE;
 417:Core/Src/main.c ****     hadc2.Init.ExternalTrigConvEdge  = ADC_EXTERNALTRIGCONVEDGE_RISING;
 418:Core/Src/main.c ****     hadc2.Init.ExternalTrigConv      = ADC_EXTERNALTRIGCONV_T2_TRGO;
 419:Core/Src/main.c ****     hadc2.Init.DataAlign             = ADC_DATAALIGN_RIGHT;
 420:Core/Src/main.c ****     hadc2.Init.NbrOfConversion       = 2;
 421:Core/Src/main.c ****     hadc2.Init.DMAContinuousRequests = ENABLE;
 422:Core/Src/main.c ****     hadc2.Init.EOCSelection          = ADC_EOC_SEQ_CONV;
 423:Core/Src/main.c ****     if (HAL_ADC_Init(&hadc2) != HAL_OK) {
 424:Core/Src/main.c ****         Error_Handler();
 425:Core/Src/main.c ****     }
 426:Core/Src/main.c **** 
 427:Core/Src/main.c ****     /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and 
 428:Core/Src/main.c ****      */
 429:Core/Src/main.c ****     sConfig.Channel      = ADC_CHANNEL_14;
 430:Core/Src/main.c ****     sConfig.Rank         = 1;
ARM GAS  /tmp/cc27GeAc.s 			page 9


 431:Core/Src/main.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 432:Core/Src/main.c ****     if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK) {
 433:Core/Src/main.c ****         Error_Handler();
 434:Core/Src/main.c ****     }
 435:Core/Src/main.c ****     sConfig.Channel      = ADC_CHANNEL_15;
 436:Core/Src/main.c ****     sConfig.Rank         = 2;
 437:Core/Src/main.c ****     if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK) {
 438:Core/Src/main.c ****         Error_Handler();
 439:Core/Src/main.c ****     }
 440:Core/Src/main.c **** }
 441:Core/Src/main.c **** 
 442:Core/Src/main.c **** 
 443:Core/Src/main.c **** static void
 444:Core/Src/main.c **** MX_DAC_Init(void) {
 445:Core/Src/main.c ****     DAC_ChannelConfTypeDef sConfig = {0};
 446:Core/Src/main.c ****     hdac.Instance = DAC;
 447:Core/Src/main.c ****     if (HAL_DAC_Init(&hdac) != HAL_OK) {
 448:Core/Src/main.c ****         Error_Handler();
 449:Core/Src/main.c ****     }
 450:Core/Src/main.c ****     sConfig.DAC_Trigger          = DAC_TRIGGER_T2_TRGO;
 451:Core/Src/main.c ****     #ifdef DAC_BUFFERED
 452:Core/Src/main.c ****         sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 453:Core/Src/main.c ****     #else
 454:Core/Src/main.c ****         sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_DISABLE;
 455:Core/Src/main.c ****     #endif
 456:Core/Src/main.c ****     if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_1) != HAL_OK) {
 457:Core/Src/main.c ****         Error_Handler();
 458:Core/Src/main.c ****     }
 459:Core/Src/main.c **** }
 460:Core/Src/main.c **** 
 461:Core/Src/main.c **** 
 462:Core/Src/main.c **** static void
 463:Core/Src/main.c **** MX_TIM2_Init(void) {
 464:Core/Src/main.c ****     uint32_t periodValue = (uint32_t)((SystemCoreClock)/(RAMP_FREQUENCY*NS));
 465:Core/Src/main.c ****     if(periodValue < 2) {
 466:Core/Src/main.c ****         Error_Handler();
 467:Core/Src/main.c ****     }
 468:Core/Src/main.c ****     periodValue -= 1;
 469:Core/Src/main.c ****     uint32_t prescalerValue = 0;
 470:Core/Src/main.c **** 
 471:Core/Src/main.c ****     TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 472:Core/Src/main.c ****     TIM_MasterConfigTypeDef sMasterConfig = {0};
 473:Core/Src/main.c ****     TIM_OC_InitTypeDef sConfigOC = {0};
 474:Core/Src/main.c **** 
 475:Core/Src/main.c ****     htim2.Instance = TIM2;
 476:Core/Src/main.c ****     htim2.Init.Prescaler         = prescalerValue;
 477:Core/Src/main.c ****     htim2.Init.CounterMode       = TIM_COUNTERMODE_UP;
 478:Core/Src/main.c ****     htim2.Init.Period            = periodValue;
 479:Core/Src/main.c ****     htim2.Init.ClockDivision     = TIM_CLOCKDIVISION_DIV1;
 480:Core/Src/main.c ****     htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 481:Core/Src/main.c ****     if (HAL_TIM_Base_Init(&htim2) != HAL_OK) {
 482:Core/Src/main.c ****         Error_Handler();
 483:Core/Src/main.c ****     }
 484:Core/Src/main.c ****     sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 485:Core/Src/main.c ****     if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK) {
 486:Core/Src/main.c ****         Error_Handler();
 487:Core/Src/main.c ****     }
ARM GAS  /tmp/cc27GeAc.s 			page 10


 488:Core/Src/main.c ****     // Serve ?
 489:Core/Src/main.c ****     // if (HAL_TIM_PWM_Init(&htim2) != HAL_OK) {
 490:Core/Src/main.c ****     //     Error_Handler();
 491:Core/Src/main.c ****     // }
 492:Core/Src/main.c ****     sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 493:Core/Src/main.c ****     sMasterConfig.MasterSlaveMode     = TIM_MASTERSLAVEMODE_DISABLE;
 494:Core/Src/main.c ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK) {
 495:Core/Src/main.c ****         Error_Handler();
 496:Core/Src/main.c ****     }
 497:Core/Src/main.c ****     sConfigOC.OCMode     = TIM_OCMODE_PWM1;
 498:Core/Src/main.c ****     sConfigOC.Pulse      = 0;
 499:Core/Src/main.c ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 500:Core/Src/main.c ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 501:Core/Src/main.c ****     if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
 502:Core/Src/main.c ****         Error_Handler();
 503:Core/Src/main.c ****     }
 504:Core/Src/main.c **** }
 505:Core/Src/main.c **** 
 506:Core/Src/main.c **** 
 507:Core/Src/main.c **** static void 
 508:Core/Src/main.c **** MX_USART2_UART_Init(void) {
 509:Core/Src/main.c ****     huart2.Instance = USART2;
 510:Core/Src/main.c ****     huart2.Init.BaudRate     = 115200;
 511:Core/Src/main.c ****     huart2.Init.WordLength   = UART_WORDLENGTH_8B;
 512:Core/Src/main.c ****     huart2.Init.StopBits     = UART_STOPBITS_1;
 513:Core/Src/main.c ****     huart2.Init.Parity       = UART_PARITY_NONE;
 514:Core/Src/main.c ****     huart2.Init.Mode         = UART_MODE_TX_RX;
 515:Core/Src/main.c ****     huart2.Init.HwFlowCtl    = UART_HWCONTROL_NONE;
 516:Core/Src/main.c ****     huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 517:Core/Src/main.c ****     if (HAL_UART_Init(&huart2) != HAL_OK) {
 518:Core/Src/main.c ****         Error_Handler();
 519:Core/Src/main.c ****     }
 520:Core/Src/main.c **** }
 521:Core/Src/main.c **** 
 522:Core/Src/main.c **** 
 523:Core/Src/main.c **** static void 
 524:Core/Src/main.c **** MX_DMA_Init(void) {
 525:Core/Src/main.c ****     __HAL_RCC_DMA1_CLK_ENABLE(); // Used by DAC
 526:Core/Src/main.c ****     __HAL_RCC_DMA2_CLK_ENABLE(); // Used by ADC1 & ADC2
 527:Core/Src/main.c **** 
 528:Core/Src/main.c ****     /* DMA1_Stream5_IRQn interrupt configuration (DAC) */
 529:Core/Src/main.c ****     HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 530:Core/Src/main.c ****     HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 531:Core/Src/main.c **** 
 532:Core/Src/main.c ****     /* DMA2_Stream0_IRQn interrupt configuration (ADC1) */
 533:Core/Src/main.c ****     HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 534:Core/Src/main.c ****     HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 535:Core/Src/main.c **** 
 536:Core/Src/main.c ****     /* DMA2_Stream2_IRQn interrupt configuration (ADC2) */
 537:Core/Src/main.c ****     HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 0, 0);
 538:Core/Src/main.c ****     HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 539:Core/Src/main.c **** }
 540:Core/Src/main.c **** 
 541:Core/Src/main.c **** 
 542:Core/Src/main.c **** static void
 543:Core/Src/main.c **** MX_GPIO_Init(void) {
  28              		.loc 1 543 20 view -0
ARM GAS  /tmp/cc27GeAc.s 			page 11


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 8BB0     		sub	sp, sp, #44
  38              		.cfi_def_cfa_offset 56
 544:Core/Src/main.c ****     GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 544 5 view .LVU1
  40              		.loc 1 544 22 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0594     		str	r4, [sp, #20]
  43 0008 0694     		str	r4, [sp, #24]
  44 000a 0794     		str	r4, [sp, #28]
  45 000c 0894     		str	r4, [sp, #32]
  46 000e 0994     		str	r4, [sp, #36]
 545:Core/Src/main.c **** 
 546:Core/Src/main.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
  47              		.loc 1 546 5 is_stmt 1 view .LVU3
  48              	.LBB4:
  49              		.loc 1 546 5 view .LVU4
  50 0010 0194     		str	r4, [sp, #4]
  51              		.loc 1 546 5 view .LVU5
  52 0012 224B     		ldr	r3, .L3
  53 0014 1A6B     		ldr	r2, [r3, #48]
  54 0016 42F00402 		orr	r2, r2, #4
  55 001a 1A63     		str	r2, [r3, #48]
  56              		.loc 1 546 5 view .LVU6
  57 001c 1A6B     		ldr	r2, [r3, #48]
  58 001e 02F00402 		and	r2, r2, #4
  59 0022 0192     		str	r2, [sp, #4]
  60              		.loc 1 546 5 view .LVU7
  61 0024 019A     		ldr	r2, [sp, #4]
  62              	.LBE4:
  63              		.loc 1 546 5 view .LVU8
 547:Core/Src/main.c ****     __HAL_RCC_GPIOH_CLK_ENABLE();
  64              		.loc 1 547 5 view .LVU9
  65              	.LBB5:
  66              		.loc 1 547 5 view .LVU10
  67 0026 0294     		str	r4, [sp, #8]
  68              		.loc 1 547 5 view .LVU11
  69 0028 1A6B     		ldr	r2, [r3, #48]
  70 002a 42F08002 		orr	r2, r2, #128
  71 002e 1A63     		str	r2, [r3, #48]
  72              		.loc 1 547 5 view .LVU12
  73 0030 1A6B     		ldr	r2, [r3, #48]
  74 0032 02F08002 		and	r2, r2, #128
  75 0036 0292     		str	r2, [sp, #8]
  76              		.loc 1 547 5 view .LVU13
  77 0038 029A     		ldr	r2, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 547 5 view .LVU14
 548:Core/Src/main.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  80              		.loc 1 548 5 view .LVU15
ARM GAS  /tmp/cc27GeAc.s 			page 12


  81              	.LBB6:
  82              		.loc 1 548 5 view .LVU16
  83 003a 0394     		str	r4, [sp, #12]
  84              		.loc 1 548 5 view .LVU17
  85 003c 1A6B     		ldr	r2, [r3, #48]
  86 003e 42F00102 		orr	r2, r2, #1
  87 0042 1A63     		str	r2, [r3, #48]
  88              		.loc 1 548 5 view .LVU18
  89 0044 1A6B     		ldr	r2, [r3, #48]
  90 0046 02F00102 		and	r2, r2, #1
  91 004a 0392     		str	r2, [sp, #12]
  92              		.loc 1 548 5 view .LVU19
  93 004c 039A     		ldr	r2, [sp, #12]
  94              	.LBE6:
  95              		.loc 1 548 5 view .LVU20
 549:Core/Src/main.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
  96              		.loc 1 549 5 view .LVU21
  97              	.LBB7:
  98              		.loc 1 549 5 view .LVU22
  99 004e 0494     		str	r4, [sp, #16]
 100              		.loc 1 549 5 view .LVU23
 101 0050 1A6B     		ldr	r2, [r3, #48]
 102 0052 42F00202 		orr	r2, r2, #2
 103 0056 1A63     		str	r2, [r3, #48]
 104              		.loc 1 549 5 view .LVU24
 105 0058 1B6B     		ldr	r3, [r3, #48]
 106 005a 03F00203 		and	r3, r3, #2
 107 005e 0493     		str	r3, [sp, #16]
 108              		.loc 1 549 5 view .LVU25
 109 0060 049B     		ldr	r3, [sp, #16]
 110              	.LBE7:
 111              		.loc 1 549 5 view .LVU26
 550:Core/Src/main.c **** 
 551:Core/Src/main.c ****     HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 112              		.loc 1 551 5 view .LVU27
 113 0062 0F4D     		ldr	r5, .L3+4
 114 0064 2246     		mov	r2, r4
 115 0066 2021     		movs	r1, #32
 116 0068 2846     		mov	r0, r5
 117 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 118              	.LVL0:
 552:Core/Src/main.c **** 
 553:Core/Src/main.c ****     GPIO_InitStruct.Pin  = B1_Pin;
 119              		.loc 1 553 5 view .LVU28
 120              		.loc 1 553 26 is_stmt 0 view .LVU29
 121 006e 4FF40053 		mov	r3, #8192
 122 0072 0593     		str	r3, [sp, #20]
 554:Core/Src/main.c ****     GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 123              		.loc 1 554 5 is_stmt 1 view .LVU30
 124              		.loc 1 554 26 is_stmt 0 view .LVU31
 125 0074 4FF40413 		mov	r3, #2162688
 126 0078 0693     		str	r3, [sp, #24]
 555:Core/Src/main.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 127              		.loc 1 555 5 is_stmt 1 view .LVU32
 128              		.loc 1 555 26 is_stmt 0 view .LVU33
 129 007a 0794     		str	r4, [sp, #28]
 556:Core/Src/main.c ****     HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
ARM GAS  /tmp/cc27GeAc.s 			page 13


 130              		.loc 1 556 5 is_stmt 1 view .LVU34
 131 007c 05A9     		add	r1, sp, #20
 132 007e 0948     		ldr	r0, .L3+8
 133 0080 FFF7FEFF 		bl	HAL_GPIO_Init
 134              	.LVL1:
 557:Core/Src/main.c **** 
 558:Core/Src/main.c ****     GPIO_InitStruct.Pin   = LD2_Pin;
 135              		.loc 1 558 5 view .LVU35
 136              		.loc 1 558 27 is_stmt 0 view .LVU36
 137 0084 2023     		movs	r3, #32
 138 0086 0593     		str	r3, [sp, #20]
 559:Core/Src/main.c ****     GPIO_InitStruct.Mode  = GPIO_MODE_OUTPUT_PP;
 139              		.loc 1 559 5 is_stmt 1 view .LVU37
 140              		.loc 1 559 27 is_stmt 0 view .LVU38
 141 0088 0123     		movs	r3, #1
 142 008a 0693     		str	r3, [sp, #24]
 560:Core/Src/main.c ****     GPIO_InitStruct.Pull  = GPIO_NOPULL;
 143              		.loc 1 560 5 is_stmt 1 view .LVU39
 144              		.loc 1 560 27 is_stmt 0 view .LVU40
 145 008c 0794     		str	r4, [sp, #28]
 561:Core/Src/main.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 146              		.loc 1 561 5 is_stmt 1 view .LVU41
 147              		.loc 1 561 27 is_stmt 0 view .LVU42
 148 008e 0894     		str	r4, [sp, #32]
 562:Core/Src/main.c ****     HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 149              		.loc 1 562 5 is_stmt 1 view .LVU43
 150 0090 05A9     		add	r1, sp, #20
 151 0092 2846     		mov	r0, r5
 152 0094 FFF7FEFF 		bl	HAL_GPIO_Init
 153              	.LVL2:
 563:Core/Src/main.c **** }
 154              		.loc 1 563 1 is_stmt 0 view .LVU44
 155 0098 0BB0     		add	sp, sp, #44
 156              		.cfi_def_cfa_offset 12
 157              		@ sp needed
 158 009a 30BD     		pop	{r4, r5, pc}
 159              	.L4:
 160              		.align	2
 161              	.L3:
 162 009c 00380240 		.word	1073887232
 163 00a0 00000240 		.word	1073872896
 164 00a4 00080240 		.word	1073874944
 165              		.cfi_endproc
 166              	.LFE248:
 168              		.section	.text.MX_DMA_Init,"ax",%progbits
 169              		.align	1
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv4-sp-d16
 175              	MX_DMA_Init:
 176              	.LFB247:
 524:Core/Src/main.c ****     __HAL_RCC_DMA1_CLK_ENABLE(); // Used by DAC
 177              		.loc 1 524 19 is_stmt 1 view -0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 8
 180              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc27GeAc.s 			page 14


 181 0000 10B5     		push	{r4, lr}
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 4, -8
 184              		.cfi_offset 14, -4
 185 0002 82B0     		sub	sp, sp, #8
 186              		.cfi_def_cfa_offset 16
 525:Core/Src/main.c ****     __HAL_RCC_DMA2_CLK_ENABLE(); // Used by ADC1 & ADC2
 187              		.loc 1 525 5 view .LVU46
 188              	.LBB8:
 525:Core/Src/main.c ****     __HAL_RCC_DMA2_CLK_ENABLE(); // Used by ADC1 & ADC2
 189              		.loc 1 525 5 view .LVU47
 190 0004 0024     		movs	r4, #0
 191 0006 0094     		str	r4, [sp]
 525:Core/Src/main.c ****     __HAL_RCC_DMA2_CLK_ENABLE(); // Used by ADC1 & ADC2
 192              		.loc 1 525 5 view .LVU48
 193 0008 164B     		ldr	r3, .L7
 194 000a 1A6B     		ldr	r2, [r3, #48]
 195 000c 42F40012 		orr	r2, r2, #2097152
 196 0010 1A63     		str	r2, [r3, #48]
 525:Core/Src/main.c ****     __HAL_RCC_DMA2_CLK_ENABLE(); // Used by ADC1 & ADC2
 197              		.loc 1 525 5 view .LVU49
 198 0012 1A6B     		ldr	r2, [r3, #48]
 199 0014 02F40012 		and	r2, r2, #2097152
 200 0018 0092     		str	r2, [sp]
 525:Core/Src/main.c ****     __HAL_RCC_DMA2_CLK_ENABLE(); // Used by ADC1 & ADC2
 201              		.loc 1 525 5 view .LVU50
 202 001a 009A     		ldr	r2, [sp]
 203              	.LBE8:
 525:Core/Src/main.c ****     __HAL_RCC_DMA2_CLK_ENABLE(); // Used by ADC1 & ADC2
 204              		.loc 1 525 5 view .LVU51
 526:Core/Src/main.c **** 
 205              		.loc 1 526 5 view .LVU52
 206              	.LBB9:
 526:Core/Src/main.c **** 
 207              		.loc 1 526 5 view .LVU53
 208 001c 0194     		str	r4, [sp, #4]
 526:Core/Src/main.c **** 
 209              		.loc 1 526 5 view .LVU54
 210 001e 1A6B     		ldr	r2, [r3, #48]
 211 0020 42F48002 		orr	r2, r2, #4194304
 212 0024 1A63     		str	r2, [r3, #48]
 526:Core/Src/main.c **** 
 213              		.loc 1 526 5 view .LVU55
 214 0026 1B6B     		ldr	r3, [r3, #48]
 215 0028 03F48003 		and	r3, r3, #4194304
 216 002c 0193     		str	r3, [sp, #4]
 526:Core/Src/main.c **** 
 217              		.loc 1 526 5 view .LVU56
 218 002e 019B     		ldr	r3, [sp, #4]
 219              	.LBE9:
 526:Core/Src/main.c **** 
 220              		.loc 1 526 5 view .LVU57
 529:Core/Src/main.c ****     HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 221              		.loc 1 529 5 view .LVU58
 222 0030 2246     		mov	r2, r4
 223 0032 2146     		mov	r1, r4
 224 0034 1020     		movs	r0, #16
ARM GAS  /tmp/cc27GeAc.s 			page 15


 225 0036 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 226              	.LVL3:
 530:Core/Src/main.c **** 
 227              		.loc 1 530 5 view .LVU59
 228 003a 1020     		movs	r0, #16
 229 003c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 230              	.LVL4:
 533:Core/Src/main.c ****     HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 231              		.loc 1 533 5 view .LVU60
 232 0040 2246     		mov	r2, r4
 233 0042 2146     		mov	r1, r4
 234 0044 3820     		movs	r0, #56
 235 0046 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 236              	.LVL5:
 534:Core/Src/main.c **** 
 237              		.loc 1 534 5 view .LVU61
 238 004a 3820     		movs	r0, #56
 239 004c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 240              	.LVL6:
 537:Core/Src/main.c ****     HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 241              		.loc 1 537 5 view .LVU62
 242 0050 2246     		mov	r2, r4
 243 0052 2146     		mov	r1, r4
 244 0054 3A20     		movs	r0, #58
 245 0056 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 246              	.LVL7:
 538:Core/Src/main.c **** }
 247              		.loc 1 538 5 view .LVU63
 248 005a 3A20     		movs	r0, #58
 249 005c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 250              	.LVL8:
 539:Core/Src/main.c **** 
 251              		.loc 1 539 1 is_stmt 0 view .LVU64
 252 0060 02B0     		add	sp, sp, #8
 253              		.cfi_def_cfa_offset 8
 254              		@ sp needed
 255 0062 10BD     		pop	{r4, pc}
 256              	.L8:
 257              		.align	2
 258              	.L7:
 259 0064 00380240 		.word	1073887232
 260              		.cfi_endproc
 261              	.LFE247:
 263              		.section	.text.buildRamp,"ax",%progbits
 264              		.align	1
 265              		.global	buildRamp
 266              		.syntax unified
 267              		.thumb
 268              		.thumb_func
 269              		.fpu fpv4-sp-d16
 271              	buildRamp:
 272              	.LVL9:
 273              	.LFB238:
  64:Core/Src/main.c ****     float factor = (float)(max-min)/(float)np;
 274              		.loc 1 64 68 is_stmt 1 view -0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc27GeAc.s 			page 16


 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		@ link register save eliminated.
  64:Core/Src/main.c ****     float factor = (float)(max-min)/(float)np;
 279              		.loc 1 64 68 is_stmt 0 view .LVU66
 280 0000 06EE901A 		vmov	s13, r1	@ int
  65:Core/Src/main.c ****     for(int16_t i=0; i<np; i++) {
 281              		.loc 1 65 5 is_stmt 1 view .LVU67
  65:Core/Src/main.c ****     for(int16_t i=0; i<np; i++) {
 282              		.loc 1 65 31 is_stmt 0 view .LVU68
 283 0004 521A     		subs	r2, r2, r1
 284              	.LVL10:
  65:Core/Src/main.c ****     for(int16_t i=0; i<np; i++) {
 285              		.loc 1 65 20 view .LVU69
 286 0006 07EE902A 		vmov	s15, r2	@ int
 287 000a F8EEE77A 		vcvt.f32.s32	s15, s15
  65:Core/Src/main.c ****     for(int16_t i=0; i<np; i++) {
 288              		.loc 1 65 37 view .LVU70
 289 000e 07EE100A 		vmov	s14, r0	@ int
 290 0012 B8EEC77A 		vcvt.f32.s32	s14, s14
  65:Core/Src/main.c ****     for(int16_t i=0; i<np; i++) {
 291              		.loc 1 65 11 view .LVU71
 292 0016 87EE876A 		vdiv.f32	s12, s15, s14
 293              	.LVL11:
  66:Core/Src/main.c ****         pRamp[i] = (uint16_t)(min+factor*i);
 294              		.loc 1 66 5 is_stmt 1 view .LVU72
 295              	.LBB10:
  66:Core/Src/main.c ****         pRamp[i] = (uint16_t)(min+factor*i);
 296              		.loc 1 66 9 view .LVU73
  66:Core/Src/main.c ****         pRamp[i] = (uint16_t)(min+factor*i);
 297              		.loc 1 66 17 is_stmt 0 view .LVU74
 298 001a 0022     		movs	r2, #0
  66:Core/Src/main.c ****         pRamp[i] = (uint16_t)(min+factor*i);
 299              		.loc 1 66 5 view .LVU75
 300 001c 11E0     		b	.L10
 301              	.LVL12:
 302              	.L11:
  67:Core/Src/main.c ****     }
 303              		.loc 1 67 9 is_stmt 1 discriminator 3 view .LVU76
  67:Core/Src/main.c ****     }
 304              		.loc 1 67 41 is_stmt 0 discriminator 3 view .LVU77
 305 001e 07EE902A 		vmov	s15, r2	@ int
 306 0022 F8EEE77A 		vcvt.f32.s32	s15, s15
 307 0026 27EE867A 		vmul.f32	s14, s15, s12
  67:Core/Src/main.c ****     }
 308              		.loc 1 67 34 discriminator 3 view .LVU78
 309 002a F8EEE67A 		vcvt.f32.s32	s15, s13
 310 002e 77EE877A 		vadd.f32	s15, s15, s14
  67:Core/Src/main.c ****     }
 311              		.loc 1 67 20 discriminator 3 view .LVU79
 312 0032 FCEEE77A 		vcvt.u32.f32	s15, s15
  67:Core/Src/main.c ****     }
 313              		.loc 1 67 18 discriminator 3 view .LVU80
 314 0036 17EE901A 		vmov	r1, s15	@ int
 315 003a 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
  66:Core/Src/main.c ****         pRamp[i] = (uint16_t)(min+factor*i);
 316              		.loc 1 66 28 is_stmt 1 discriminator 3 view .LVU81
  66:Core/Src/main.c ****         pRamp[i] = (uint16_t)(min+factor*i);
ARM GAS  /tmp/cc27GeAc.s 			page 17


 317              		.loc 1 66 29 is_stmt 0 discriminator 3 view .LVU82
 318 003e 0132     		adds	r2, r2, #1
 319              	.LVL13:
  66:Core/Src/main.c ****         pRamp[i] = (uint16_t)(min+factor*i);
 320              		.loc 1 66 29 discriminator 3 view .LVU83
 321 0040 12B2     		sxth	r2, r2
 322              	.LVL14:
 323              	.L10:
  66:Core/Src/main.c ****         pRamp[i] = (uint16_t)(min+factor*i);
 324              		.loc 1 66 22 is_stmt 1 discriminator 1 view .LVU84
  66:Core/Src/main.c ****         pRamp[i] = (uint16_t)(min+factor*i);
 325              		.loc 1 66 5 is_stmt 0 discriminator 1 view .LVU85
 326 0042 8242     		cmp	r2, r0
 327 0044 EBDB     		blt	.L11
 328              	.LBE10:
  69:Core/Src/main.c **** 
 329              		.loc 1 69 1 view .LVU86
 330 0046 7047     		bx	lr
 331              		.cfi_endproc
 332              	.LFE238:
 334              		.section	.text.Error_Handler,"ax",%progbits
 335              		.align	1
 336              		.global	Error_Handler
 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 340              		.fpu fpv4-sp-d16
 342              	Error_Handler:
 343              	.LFB249:
 564:Core/Src/main.c **** 
 565:Core/Src/main.c **** 
 566:Core/Src/main.c **** void 
 567:Core/Src/main.c **** Error_Handler(void) {
 344              		.loc 1 567 21 is_stmt 1 view -0
 345              		.cfi_startproc
 346              		@ Volatile: function does not return.
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 568:Core/Src/main.c ****     __disable_irq();
 350              		.loc 1 568 5 view .LVU88
 351              	.LBB11:
 352              	.LBI11:
 353              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
ARM GAS  /tmp/cc27GeAc.s 			page 18


  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
ARM GAS  /tmp/cc27GeAc.s 			page 19


  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  /tmp/cc27GeAc.s 			page 20


 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 354              		.loc 2 140 27 view .LVU89
 355              	.LBB12:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 356              		.loc 2 142 3 view .LVU90
 357              		.syntax unified
 358              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 359 0000 72B6     		cpsid i
 360              	@ 0 "" 2
 361              		.thumb
 362              		.syntax unified
 363              	.L13:
 364              	.LBE12:
 365              	.LBE11:
 569:Core/Src/main.c ****     while (1) {
 366              		.loc 1 569 5 discriminator 1 view .LVU91
 570:Core/Src/main.c ****     }
 367              		.loc 1 570 5 discriminator 1 view .LVU92
 569:Core/Src/main.c ****     while (1) {
 368              		.loc 1 569 11 discriminator 1 view .LVU93
 369 0002 FEE7     		b	.L13
 370              		.cfi_endproc
 371              	.LFE249:
 373              		.section	.text.MX_ADC1_Init,"ax",%progbits
 374              		.align	1
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu fpv4-sp-d16
 380              	MX_ADC1_Init:
 381              	.LFB242:
 364:Core/Src/main.c ****     ADC_ChannelConfTypeDef sConfig = {0};
 382              		.loc 1 364 20 view -0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 16
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386 0000 00B5     		push	{lr}
 387              		.cfi_def_cfa_offset 4
 388              		.cfi_offset 14, -4
 389 0002 85B0     		sub	sp, sp, #20
 390              		.cfi_def_cfa_offset 24
 365:Core/Src/main.c **** 
 391              		.loc 1 365 5 view .LVU95
 365:Core/Src/main.c **** 
ARM GAS  /tmp/cc27GeAc.s 			page 21


 392              		.loc 1 365 28 is_stmt 0 view .LVU96
 393 0004 0023     		movs	r3, #0
 394 0006 0093     		str	r3, [sp]
 395 0008 0193     		str	r3, [sp, #4]
 396 000a 0293     		str	r3, [sp, #8]
 397 000c 0393     		str	r3, [sp, #12]
 367:Core/Src/main.c ****     hadc1.Init.ClockPrescaler        = ADC_CLOCK_SYNC_PCLK_DIV4; // The clock is common for all the
 398              		.loc 1 367 5 is_stmt 1 view .LVU97
 367:Core/Src/main.c ****     hadc1.Init.ClockPrescaler        = ADC_CLOCK_SYNC_PCLK_DIV4; // The clock is common for all the
 399              		.loc 1 367 20 is_stmt 0 view .LVU98
 400 000e 1648     		ldr	r0, .L20
 401 0010 164A     		ldr	r2, .L20+4
 402 0012 0260     		str	r2, [r0]
 368:Core/Src/main.c ****     hadc1.Init.Resolution            = ADC_RESOLUTION_12B;
 403              		.loc 1 368 5 is_stmt 1 view .LVU99
 368:Core/Src/main.c ****     hadc1.Init.Resolution            = ADC_RESOLUTION_12B;
 404              		.loc 1 368 38 is_stmt 0 view .LVU100
 405 0014 4FF48032 		mov	r2, #65536
 406 0018 4260     		str	r2, [r0, #4]
 369:Core/Src/main.c ****     hadc1.Init.ScanConvMode          = DISABLE;
 407              		.loc 1 369 5 is_stmt 1 view .LVU101
 369:Core/Src/main.c ****     hadc1.Init.ScanConvMode          = DISABLE;
 408              		.loc 1 369 38 is_stmt 0 view .LVU102
 409 001a 8360     		str	r3, [r0, #8]
 370:Core/Src/main.c ****     hadc1.Init.ContinuousConvMode    = DISABLE;
 410              		.loc 1 370 5 is_stmt 1 view .LVU103
 370:Core/Src/main.c ****     hadc1.Init.ContinuousConvMode    = DISABLE;
 411              		.loc 1 370 38 is_stmt 0 view .LVU104
 412 001c 0361     		str	r3, [r0, #16]
 371:Core/Src/main.c ****     hadc1.Init.DiscontinuousConvMode = DISABLE;
 413              		.loc 1 371 5 is_stmt 1 view .LVU105
 371:Core/Src/main.c ****     hadc1.Init.DiscontinuousConvMode = DISABLE;
 414              		.loc 1 371 38 is_stmt 0 view .LVU106
 415 001e 0376     		strb	r3, [r0, #24]
 372:Core/Src/main.c ****     hadc1.Init.ExternalTrigConvEdge  = ADC_EXTERNALTRIGCONVEDGE_RISING;
 416              		.loc 1 372 5 is_stmt 1 view .LVU107
 372:Core/Src/main.c ****     hadc1.Init.ExternalTrigConvEdge  = ADC_EXTERNALTRIGCONVEDGE_RISING;
 417              		.loc 1 372 38 is_stmt 0 view .LVU108
 418 0020 80F82030 		strb	r3, [r0, #32]
 373:Core/Src/main.c ****     hadc1.Init.ExternalTrigConv      = ADC_EXTERNALTRIGCONV_T2_TRGO;
 419              		.loc 1 373 5 is_stmt 1 view .LVU109
 373:Core/Src/main.c ****     hadc1.Init.ExternalTrigConv      = ADC_EXTERNALTRIGCONV_T2_TRGO;
 420              		.loc 1 373 38 is_stmt 0 view .LVU110
 421 0024 4FF08052 		mov	r2, #268435456
 422 0028 C262     		str	r2, [r0, #44]
 374:Core/Src/main.c ****     hadc1.Init.DataAlign             = ADC_DATAALIGN_RIGHT;
 423              		.loc 1 374 5 is_stmt 1 view .LVU111
 374:Core/Src/main.c ****     hadc1.Init.DataAlign             = ADC_DATAALIGN_RIGHT;
 424              		.loc 1 374 38 is_stmt 0 view .LVU112
 425 002a 4FF0C062 		mov	r2, #100663296
 426 002e 8262     		str	r2, [r0, #40]
 375:Core/Src/main.c ****     hadc1.Init.NbrOfConversion       = 1;
 427              		.loc 1 375 5 is_stmt 1 view .LVU113
 375:Core/Src/main.c ****     hadc1.Init.NbrOfConversion       = 1;
 428              		.loc 1 375 38 is_stmt 0 view .LVU114
 429 0030 C360     		str	r3, [r0, #12]
 376:Core/Src/main.c ****     hadc1.Init.DMAContinuousRequests = ENABLE;
ARM GAS  /tmp/cc27GeAc.s 			page 22


 430              		.loc 1 376 5 is_stmt 1 view .LVU115
 376:Core/Src/main.c ****     hadc1.Init.DMAContinuousRequests = ENABLE;
 431              		.loc 1 376 38 is_stmt 0 view .LVU116
 432 0032 0123     		movs	r3, #1
 433 0034 C361     		str	r3, [r0, #28]
 377:Core/Src/main.c ****     hadc1.Init.EOCSelection          = ADC_EOC_SINGLE_CONV;
 434              		.loc 1 377 5 is_stmt 1 view .LVU117
 377:Core/Src/main.c ****     hadc1.Init.EOCSelection          = ADC_EOC_SINGLE_CONV;
 435              		.loc 1 377 38 is_stmt 0 view .LVU118
 436 0036 80F83030 		strb	r3, [r0, #48]
 378:Core/Src/main.c ****     if (HAL_ADC_Init(&hadc1) != HAL_OK) {
 437              		.loc 1 378 5 is_stmt 1 view .LVU119
 378:Core/Src/main.c ****     if (HAL_ADC_Init(&hadc1) != HAL_OK) {
 438              		.loc 1 378 38 is_stmt 0 view .LVU120
 439 003a 4361     		str	r3, [r0, #20]
 379:Core/Src/main.c ****         Error_Handler();
 440              		.loc 1 379 5 is_stmt 1 view .LVU121
 379:Core/Src/main.c ****         Error_Handler();
 441              		.loc 1 379 9 is_stmt 0 view .LVU122
 442 003c FFF7FEFF 		bl	HAL_ADC_Init
 443              	.LVL15:
 379:Core/Src/main.c ****         Error_Handler();
 444              		.loc 1 379 8 view .LVU123
 445 0040 68B9     		cbnz	r0, .L18
 384:Core/Src/main.c ****     sConfig.Rank         = 1;
 446              		.loc 1 384 5 is_stmt 1 view .LVU124
 384:Core/Src/main.c ****     sConfig.Rank         = 1;
 447              		.loc 1 384 26 is_stmt 0 view .LVU125
 448 0042 0023     		movs	r3, #0
 449 0044 0093     		str	r3, [sp]
 385:Core/Src/main.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_28CYCLES;//ADC_SAMPLETIME_3CYCLES;
 450              		.loc 1 385 5 is_stmt 1 view .LVU126
 385:Core/Src/main.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_28CYCLES;//ADC_SAMPLETIME_3CYCLES;
 451              		.loc 1 385 26 is_stmt 0 view .LVU127
 452 0046 0123     		movs	r3, #1
 453 0048 0193     		str	r3, [sp, #4]
 386:Core/Src/main.c ****     if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK) {
 454              		.loc 1 386 5 is_stmt 1 view .LVU128
 386:Core/Src/main.c ****     if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK) {
 455              		.loc 1 386 26 is_stmt 0 view .LVU129
 456 004a 0223     		movs	r3, #2
 457 004c 0293     		str	r3, [sp, #8]
 387:Core/Src/main.c ****         Error_Handler();
 458              		.loc 1 387 5 is_stmt 1 view .LVU130
 387:Core/Src/main.c ****         Error_Handler();
 459              		.loc 1 387 9 is_stmt 0 view .LVU131
 460 004e 6946     		mov	r1, sp
 461 0050 0548     		ldr	r0, .L20
 462 0052 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 463              	.LVL16:
 387:Core/Src/main.c ****         Error_Handler();
 464              		.loc 1 387 8 view .LVU132
 465 0056 20B9     		cbnz	r0, .L19
 390:Core/Src/main.c **** 
 466              		.loc 1 390 1 view .LVU133
 467 0058 05B0     		add	sp, sp, #20
 468              		.cfi_remember_state
ARM GAS  /tmp/cc27GeAc.s 			page 23


 469              		.cfi_def_cfa_offset 4
 470              		@ sp needed
 471 005a 5DF804FB 		ldr	pc, [sp], #4
 472              	.L18:
 473              		.cfi_restore_state
 380:Core/Src/main.c ****     }
 474              		.loc 1 380 9 is_stmt 1 view .LVU134
 475 005e FFF7FEFF 		bl	Error_Handler
 476              	.LVL17:
 477              	.L19:
 388:Core/Src/main.c ****     }
 478              		.loc 1 388 9 view .LVU135
 479 0062 FFF7FEFF 		bl	Error_Handler
 480              	.LVL18:
 481              	.L21:
 482 0066 00BF     		.align	2
 483              	.L20:
 484 0068 00000000 		.word	.LANCHOR0
 485 006c 00200140 		.word	1073815552
 486              		.cfi_endproc
 487              	.LFE242:
 489              		.section	.text.MX_ADC2_Init,"ax",%progbits
 490              		.align	1
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 494              		.fpu fpv4-sp-d16
 496              	MX_ADC2_Init:
 497              	.LFB243:
 399:Core/Src/main.c **** 
 498              		.loc 1 399 20 view -0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 16
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502 0000 00B5     		push	{lr}
 503              		.cfi_def_cfa_offset 4
 504              		.cfi_offset 14, -4
 505 0002 85B0     		sub	sp, sp, #20
 506              		.cfi_def_cfa_offset 24
 404:Core/Src/main.c **** 
 507              		.loc 1 404 5 view .LVU137
 404:Core/Src/main.c **** 
 508              		.loc 1 404 28 is_stmt 0 view .LVU138
 509 0004 0023     		movs	r3, #0
 510 0006 0093     		str	r3, [sp]
 511 0008 0193     		str	r3, [sp, #4]
 512 000a 0293     		str	r3, [sp, #8]
 513 000c 0393     		str	r3, [sp, #12]
 411:Core/Src/main.c ****     hadc2.Init.ClockPrescaler        = ADC_CLOCK_SYNC_PCLK_DIV4; // The clock is common for all the
 514              		.loc 1 411 5 is_stmt 1 view .LVU139
 411:Core/Src/main.c ****     hadc2.Init.ClockPrescaler        = ADC_CLOCK_SYNC_PCLK_DIV4; // The clock is common for all the
 515              		.loc 1 411 20 is_stmt 0 view .LVU140
 516 000e 1C48     		ldr	r0, .L30
 517 0010 1C4A     		ldr	r2, .L30+4
 518 0012 0260     		str	r2, [r0]
 412:Core/Src/main.c ****     hadc2.Init.Resolution            = ADC_RESOLUTION_12B;
 519              		.loc 1 412 5 is_stmt 1 view .LVU141
ARM GAS  /tmp/cc27GeAc.s 			page 24


 412:Core/Src/main.c ****     hadc2.Init.Resolution            = ADC_RESOLUTION_12B;
 520              		.loc 1 412 38 is_stmt 0 view .LVU142
 521 0014 4FF48032 		mov	r2, #65536
 522 0018 4260     		str	r2, [r0, #4]
 413:Core/Src/main.c ****     hadc2.Init.ScanConvMode          = ENABLE; // In scan mode, automatic conversion is performed o
 523              		.loc 1 413 5 is_stmt 1 view .LVU143
 413:Core/Src/main.c ****     hadc2.Init.ScanConvMode          = ENABLE; // In scan mode, automatic conversion is performed o
 524              		.loc 1 413 38 is_stmt 0 view .LVU144
 525 001a 8360     		str	r3, [r0, #8]
 414:Core/Src/main.c ****     hadc2.Init.ContinuousConvMode    = DISABLE;
 526              		.loc 1 414 5 is_stmt 1 view .LVU145
 414:Core/Src/main.c ****     hadc2.Init.ContinuousConvMode    = DISABLE;
 527              		.loc 1 414 38 is_stmt 0 view .LVU146
 528 001c 0122     		movs	r2, #1
 529 001e 0261     		str	r2, [r0, #16]
 415:Core/Src/main.c ****     hadc2.Init.DiscontinuousConvMode = DISABLE;
 530              		.loc 1 415 5 is_stmt 1 view .LVU147
 415:Core/Src/main.c ****     hadc2.Init.DiscontinuousConvMode = DISABLE;
 531              		.loc 1 415 38 is_stmt 0 view .LVU148
 532 0020 0376     		strb	r3, [r0, #24]
 416:Core/Src/main.c ****     hadc2.Init.ExternalTrigConvEdge  = ADC_EXTERNALTRIGCONVEDGE_RISING;
 533              		.loc 1 416 5 is_stmt 1 view .LVU149
 416:Core/Src/main.c ****     hadc2.Init.ExternalTrigConvEdge  = ADC_EXTERNALTRIGCONVEDGE_RISING;
 534              		.loc 1 416 38 is_stmt 0 view .LVU150
 535 0022 80F82030 		strb	r3, [r0, #32]
 417:Core/Src/main.c ****     hadc2.Init.ExternalTrigConv      = ADC_EXTERNALTRIGCONV_T2_TRGO;
 536              		.loc 1 417 5 is_stmt 1 view .LVU151
 417:Core/Src/main.c ****     hadc2.Init.ExternalTrigConv      = ADC_EXTERNALTRIGCONV_T2_TRGO;
 537              		.loc 1 417 38 is_stmt 0 view .LVU152
 538 0026 4FF08051 		mov	r1, #268435456
 539 002a C162     		str	r1, [r0, #44]
 418:Core/Src/main.c ****     hadc2.Init.DataAlign             = ADC_DATAALIGN_RIGHT;
 540              		.loc 1 418 5 is_stmt 1 view .LVU153
 418:Core/Src/main.c ****     hadc2.Init.DataAlign             = ADC_DATAALIGN_RIGHT;
 541              		.loc 1 418 38 is_stmt 0 view .LVU154
 542 002c 4FF0C061 		mov	r1, #100663296
 543 0030 8162     		str	r1, [r0, #40]
 419:Core/Src/main.c ****     hadc2.Init.NbrOfConversion       = 2;
 544              		.loc 1 419 5 is_stmt 1 view .LVU155
 419:Core/Src/main.c ****     hadc2.Init.NbrOfConversion       = 2;
 545              		.loc 1 419 38 is_stmt 0 view .LVU156
 546 0032 C360     		str	r3, [r0, #12]
 420:Core/Src/main.c ****     hadc2.Init.DMAContinuousRequests = ENABLE;
 547              		.loc 1 420 5 is_stmt 1 view .LVU157
 420:Core/Src/main.c ****     hadc2.Init.DMAContinuousRequests = ENABLE;
 548              		.loc 1 420 38 is_stmt 0 view .LVU158
 549 0034 0221     		movs	r1, #2
 550 0036 C161     		str	r1, [r0, #28]
 421:Core/Src/main.c ****     hadc2.Init.EOCSelection          = ADC_EOC_SEQ_CONV;
 551              		.loc 1 421 5 is_stmt 1 view .LVU159
 421:Core/Src/main.c ****     hadc2.Init.EOCSelection          = ADC_EOC_SEQ_CONV;
 552              		.loc 1 421 38 is_stmt 0 view .LVU160
 553 0038 80F83020 		strb	r2, [r0, #48]
 422:Core/Src/main.c ****     if (HAL_ADC_Init(&hadc2) != HAL_OK) {
 554              		.loc 1 422 5 is_stmt 1 view .LVU161
 422:Core/Src/main.c ****     if (HAL_ADC_Init(&hadc2) != HAL_OK) {
 555              		.loc 1 422 38 is_stmt 0 view .LVU162
ARM GAS  /tmp/cc27GeAc.s 			page 25


 556 003c 4361     		str	r3, [r0, #20]
 423:Core/Src/main.c ****         Error_Handler();
 557              		.loc 1 423 5 is_stmt 1 view .LVU163
 423:Core/Src/main.c ****         Error_Handler();
 558              		.loc 1 423 9 is_stmt 0 view .LVU164
 559 003e FFF7FEFF 		bl	HAL_ADC_Init
 560              	.LVL19:
 423:Core/Src/main.c ****         Error_Handler();
 561              		.loc 1 423 8 view .LVU165
 562 0042 B0B9     		cbnz	r0, .L27
 429:Core/Src/main.c ****     sConfig.Rank         = 1;
 563              		.loc 1 429 5 is_stmt 1 view .LVU166
 429:Core/Src/main.c ****     sConfig.Rank         = 1;
 564              		.loc 1 429 26 is_stmt 0 view .LVU167
 565 0044 0E23     		movs	r3, #14
 566 0046 0093     		str	r3, [sp]
 430:Core/Src/main.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 567              		.loc 1 430 5 is_stmt 1 view .LVU168
 430:Core/Src/main.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 568              		.loc 1 430 26 is_stmt 0 view .LVU169
 569 0048 0123     		movs	r3, #1
 570 004a 0193     		str	r3, [sp, #4]
 431:Core/Src/main.c ****     if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK) {
 571              		.loc 1 431 5 is_stmt 1 view .LVU170
 431:Core/Src/main.c ****     if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK) {
 572              		.loc 1 431 26 is_stmt 0 view .LVU171
 573 004c 0723     		movs	r3, #7
 574 004e 0293     		str	r3, [sp, #8]
 432:Core/Src/main.c ****         Error_Handler();
 575              		.loc 1 432 5 is_stmt 1 view .LVU172
 432:Core/Src/main.c ****         Error_Handler();
 576              		.loc 1 432 9 is_stmt 0 view .LVU173
 577 0050 6946     		mov	r1, sp
 578 0052 0B48     		ldr	r0, .L30
 579 0054 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 580              	.LVL20:
 432:Core/Src/main.c ****         Error_Handler();
 581              		.loc 1 432 8 view .LVU174
 582 0058 68B9     		cbnz	r0, .L28
 435:Core/Src/main.c ****     sConfig.Rank         = 2;
 583              		.loc 1 435 5 is_stmt 1 view .LVU175
 435:Core/Src/main.c ****     sConfig.Rank         = 2;
 584              		.loc 1 435 26 is_stmt 0 view .LVU176
 585 005a 0F23     		movs	r3, #15
 586 005c 0093     		str	r3, [sp]
 436:Core/Src/main.c ****     if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK) {
 587              		.loc 1 436 5 is_stmt 1 view .LVU177
 436:Core/Src/main.c ****     if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK) {
 588              		.loc 1 436 26 is_stmt 0 view .LVU178
 589 005e 0223     		movs	r3, #2
 590 0060 0193     		str	r3, [sp, #4]
 437:Core/Src/main.c ****         Error_Handler();
 591              		.loc 1 437 5 is_stmt 1 view .LVU179
 437:Core/Src/main.c ****         Error_Handler();
 592              		.loc 1 437 9 is_stmt 0 view .LVU180
 593 0062 6946     		mov	r1, sp
 594 0064 0648     		ldr	r0, .L30
ARM GAS  /tmp/cc27GeAc.s 			page 26


 595 0066 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 596              	.LVL21:
 437:Core/Src/main.c ****         Error_Handler();
 597              		.loc 1 437 8 view .LVU181
 598 006a 30B9     		cbnz	r0, .L29
 440:Core/Src/main.c **** 
 599              		.loc 1 440 1 view .LVU182
 600 006c 05B0     		add	sp, sp, #20
 601              		.cfi_remember_state
 602              		.cfi_def_cfa_offset 4
 603              		@ sp needed
 604 006e 5DF804FB 		ldr	pc, [sp], #4
 605              	.L27:
 606              		.cfi_restore_state
 424:Core/Src/main.c ****     }
 607              		.loc 1 424 9 is_stmt 1 view .LVU183
 608 0072 FFF7FEFF 		bl	Error_Handler
 609              	.LVL22:
 610              	.L28:
 433:Core/Src/main.c ****     }
 611              		.loc 1 433 9 view .LVU184
 612 0076 FFF7FEFF 		bl	Error_Handler
 613              	.LVL23:
 614              	.L29:
 438:Core/Src/main.c ****     }
 615              		.loc 1 438 9 view .LVU185
 616 007a FFF7FEFF 		bl	Error_Handler
 617              	.LVL24:
 618              	.L31:
 619 007e 00BF     		.align	2
 620              	.L30:
 621 0080 00000000 		.word	.LANCHOR1
 622 0084 00210140 		.word	1073815808
 623              		.cfi_endproc
 624              	.LFE243:
 626              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 627              		.align	1
 628              		.syntax unified
 629              		.thumb
 630              		.thumb_func
 631              		.fpu fpv4-sp-d16
 633              	MX_USART2_UART_Init:
 634              	.LFB246:
 508:Core/Src/main.c ****     huart2.Instance = USART2;
 635              		.loc 1 508 27 view -0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 0, uses_anonymous_args = 0
 639 0000 08B5     		push	{r3, lr}
 640              		.cfi_def_cfa_offset 8
 641              		.cfi_offset 3, -8
 642              		.cfi_offset 14, -4
 509:Core/Src/main.c ****     huart2.Init.BaudRate     = 115200;
 643              		.loc 1 509 5 view .LVU187
 509:Core/Src/main.c ****     huart2.Init.BaudRate     = 115200;
 644              		.loc 1 509 21 is_stmt 0 view .LVU188
 645 0002 0A48     		ldr	r0, .L36
ARM GAS  /tmp/cc27GeAc.s 			page 27


 646 0004 0A4B     		ldr	r3, .L36+4
 647 0006 0360     		str	r3, [r0]
 510:Core/Src/main.c ****     huart2.Init.WordLength   = UART_WORDLENGTH_8B;
 648              		.loc 1 510 5 is_stmt 1 view .LVU189
 510:Core/Src/main.c ****     huart2.Init.WordLength   = UART_WORDLENGTH_8B;
 649              		.loc 1 510 30 is_stmt 0 view .LVU190
 650 0008 4FF4E133 		mov	r3, #115200
 651 000c 4360     		str	r3, [r0, #4]
 511:Core/Src/main.c ****     huart2.Init.StopBits     = UART_STOPBITS_1;
 652              		.loc 1 511 5 is_stmt 1 view .LVU191
 511:Core/Src/main.c ****     huart2.Init.StopBits     = UART_STOPBITS_1;
 653              		.loc 1 511 30 is_stmt 0 view .LVU192
 654 000e 0023     		movs	r3, #0
 655 0010 8360     		str	r3, [r0, #8]
 512:Core/Src/main.c ****     huart2.Init.Parity       = UART_PARITY_NONE;
 656              		.loc 1 512 5 is_stmt 1 view .LVU193
 512:Core/Src/main.c ****     huart2.Init.Parity       = UART_PARITY_NONE;
 657              		.loc 1 512 30 is_stmt 0 view .LVU194
 658 0012 C360     		str	r3, [r0, #12]
 513:Core/Src/main.c ****     huart2.Init.Mode         = UART_MODE_TX_RX;
 659              		.loc 1 513 5 is_stmt 1 view .LVU195
 513:Core/Src/main.c ****     huart2.Init.Mode         = UART_MODE_TX_RX;
 660              		.loc 1 513 30 is_stmt 0 view .LVU196
 661 0014 0361     		str	r3, [r0, #16]
 514:Core/Src/main.c ****     huart2.Init.HwFlowCtl    = UART_HWCONTROL_NONE;
 662              		.loc 1 514 5 is_stmt 1 view .LVU197
 514:Core/Src/main.c ****     huart2.Init.HwFlowCtl    = UART_HWCONTROL_NONE;
 663              		.loc 1 514 30 is_stmt 0 view .LVU198
 664 0016 0C22     		movs	r2, #12
 665 0018 4261     		str	r2, [r0, #20]
 515:Core/Src/main.c ****     huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 666              		.loc 1 515 5 is_stmt 1 view .LVU199
 515:Core/Src/main.c ****     huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 667              		.loc 1 515 30 is_stmt 0 view .LVU200
 668 001a 8361     		str	r3, [r0, #24]
 516:Core/Src/main.c ****     if (HAL_UART_Init(&huart2) != HAL_OK) {
 669              		.loc 1 516 5 is_stmt 1 view .LVU201
 516:Core/Src/main.c ****     if (HAL_UART_Init(&huart2) != HAL_OK) {
 670              		.loc 1 516 30 is_stmt 0 view .LVU202
 671 001c C361     		str	r3, [r0, #28]
 517:Core/Src/main.c ****         Error_Handler();
 672              		.loc 1 517 5 is_stmt 1 view .LVU203
 517:Core/Src/main.c ****         Error_Handler();
 673              		.loc 1 517 9 is_stmt 0 view .LVU204
 674 001e FFF7FEFF 		bl	HAL_UART_Init
 675              	.LVL25:
 517:Core/Src/main.c ****         Error_Handler();
 676              		.loc 1 517 8 view .LVU205
 677 0022 00B9     		cbnz	r0, .L35
 520:Core/Src/main.c **** 
 678              		.loc 1 520 1 view .LVU206
 679 0024 08BD     		pop	{r3, pc}
 680              	.L35:
 518:Core/Src/main.c ****     }
 681              		.loc 1 518 9 is_stmt 1 view .LVU207
 682 0026 FFF7FEFF 		bl	Error_Handler
 683              	.LVL26:
ARM GAS  /tmp/cc27GeAc.s 			page 28


 684              	.L37:
 685 002a 00BF     		.align	2
 686              	.L36:
 687 002c 00000000 		.word	.LANCHOR2
 688 0030 00440040 		.word	1073759232
 689              		.cfi_endproc
 690              	.LFE246:
 692              		.section	.text.MX_DAC_Init,"ax",%progbits
 693              		.align	1
 694              		.syntax unified
 695              		.thumb
 696              		.thumb_func
 697              		.fpu fpv4-sp-d16
 699              	MX_DAC_Init:
 700              	.LFB244:
 444:Core/Src/main.c ****     DAC_ChannelConfTypeDef sConfig = {0};
 701              		.loc 1 444 19 view -0
 702              		.cfi_startproc
 703              		@ args = 0, pretend = 0, frame = 8
 704              		@ frame_needed = 0, uses_anonymous_args = 0
 705 0000 00B5     		push	{lr}
 706              		.cfi_def_cfa_offset 4
 707              		.cfi_offset 14, -4
 708 0002 83B0     		sub	sp, sp, #12
 709              		.cfi_def_cfa_offset 16
 445:Core/Src/main.c ****     hdac.Instance = DAC;
 710              		.loc 1 445 5 view .LVU209
 445:Core/Src/main.c ****     hdac.Instance = DAC;
 711              		.loc 1 445 28 is_stmt 0 view .LVU210
 712 0004 0023     		movs	r3, #0
 713 0006 0093     		str	r3, [sp]
 714 0008 0193     		str	r3, [sp, #4]
 446:Core/Src/main.c ****     if (HAL_DAC_Init(&hdac) != HAL_OK) {
 715              		.loc 1 446 5 is_stmt 1 view .LVU211
 446:Core/Src/main.c ****     if (HAL_DAC_Init(&hdac) != HAL_OK) {
 716              		.loc 1 446 19 is_stmt 0 view .LVU212
 717 000a 0B48     		ldr	r0, .L44
 718 000c 0B4B     		ldr	r3, .L44+4
 719 000e 0360     		str	r3, [r0]
 447:Core/Src/main.c ****         Error_Handler();
 720              		.loc 1 447 5 is_stmt 1 view .LVU213
 447:Core/Src/main.c ****         Error_Handler();
 721              		.loc 1 447 9 is_stmt 0 view .LVU214
 722 0010 FFF7FEFF 		bl	HAL_DAC_Init
 723              	.LVL27:
 447:Core/Src/main.c ****         Error_Handler();
 724              		.loc 1 447 8 view .LVU215
 725 0014 58B9     		cbnz	r0, .L42
 450:Core/Src/main.c ****     #ifdef DAC_BUFFERED
 726              		.loc 1 450 5 is_stmt 1 view .LVU216
 450:Core/Src/main.c ****     #ifdef DAC_BUFFERED
 727              		.loc 1 450 34 is_stmt 0 view .LVU217
 728 0016 2423     		movs	r3, #36
 729 0018 0093     		str	r3, [sp]
 452:Core/Src/main.c ****     #else
 730              		.loc 1 452 9 is_stmt 1 view .LVU218
 452:Core/Src/main.c ****     #else
ARM GAS  /tmp/cc27GeAc.s 			page 29


 731              		.loc 1 452 34 is_stmt 0 view .LVU219
 732 001a 0022     		movs	r2, #0
 733 001c 0192     		str	r2, [sp, #4]
 456:Core/Src/main.c ****         Error_Handler();
 734              		.loc 1 456 5 is_stmt 1 view .LVU220
 456:Core/Src/main.c ****         Error_Handler();
 735              		.loc 1 456 9 is_stmt 0 view .LVU221
 736 001e 6946     		mov	r1, sp
 737 0020 0548     		ldr	r0, .L44
 738 0022 FFF7FEFF 		bl	HAL_DAC_ConfigChannel
 739              	.LVL28:
 456:Core/Src/main.c ****         Error_Handler();
 740              		.loc 1 456 8 view .LVU222
 741 0026 20B9     		cbnz	r0, .L43
 459:Core/Src/main.c **** 
 742              		.loc 1 459 1 view .LVU223
 743 0028 03B0     		add	sp, sp, #12
 744              		.cfi_remember_state
 745              		.cfi_def_cfa_offset 4
 746              		@ sp needed
 747 002a 5DF804FB 		ldr	pc, [sp], #4
 748              	.L42:
 749              		.cfi_restore_state
 448:Core/Src/main.c ****     }
 750              		.loc 1 448 9 is_stmt 1 view .LVU224
 751 002e FFF7FEFF 		bl	Error_Handler
 752              	.LVL29:
 753              	.L43:
 457:Core/Src/main.c ****     }
 754              		.loc 1 457 9 view .LVU225
 755 0032 FFF7FEFF 		bl	Error_Handler
 756              	.LVL30:
 757              	.L45:
 758 0036 00BF     		.align	2
 759              	.L44:
 760 0038 00000000 		.word	.LANCHOR3
 761 003c 00740040 		.word	1073771520
 762              		.cfi_endproc
 763              	.LFE244:
 765              		.section	.text.MX_TIM2_Init,"ax",%progbits
 766              		.align	1
 767              		.syntax unified
 768              		.thumb
 769              		.thumb_func
 770              		.fpu fpv4-sp-d16
 772              	MX_TIM2_Init:
 773              	.LFB245:
 463:Core/Src/main.c ****     uint32_t periodValue = (uint32_t)((SystemCoreClock)/(RAMP_FREQUENCY*NS));
 774              		.loc 1 463 20 view -0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 56
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 778 0000 00B5     		push	{lr}
 779              		.cfi_def_cfa_offset 4
 780              		.cfi_offset 14, -4
 781 0002 8FB0     		sub	sp, sp, #60
 782              		.cfi_def_cfa_offset 64
ARM GAS  /tmp/cc27GeAc.s 			page 30


 464:Core/Src/main.c ****     if(periodValue < 2) {
 783              		.loc 1 464 5 view .LVU227
 464:Core/Src/main.c ****     if(periodValue < 2) {
 784              		.loc 1 464 28 is_stmt 0 view .LVU228
 785 0004 244B     		ldr	r3, .L58
 786 0006 1A68     		ldr	r2, [r3]
 787              	.LVL31:
 465:Core/Src/main.c ****         Error_Handler();
 788              		.loc 1 465 5 is_stmt 1 view .LVU229
 465:Core/Src/main.c ****         Error_Handler();
 789              		.loc 1 465 7 is_stmt 0 view .LVU230
 790 0008 B2F5005F 		cmp	r2, #8192
 791 000c 3AD3     		bcc	.L53
 792 000e 130B     		lsrs	r3, r2, #12
 793              	.LVL32:
 468:Core/Src/main.c ****     uint32_t prescalerValue = 0;
 794              		.loc 1 468 5 is_stmt 1 view .LVU231
 468:Core/Src/main.c ****     uint32_t prescalerValue = 0;
 795              		.loc 1 468 17 is_stmt 0 view .LVU232
 796 0010 5A1E     		subs	r2, r3, #1
 797              	.LVL33:
 469:Core/Src/main.c **** 
 798              		.loc 1 469 5 is_stmt 1 view .LVU233
 471:Core/Src/main.c ****     TIM_MasterConfigTypeDef sMasterConfig = {0};
 799              		.loc 1 471 5 view .LVU234
 471:Core/Src/main.c ****     TIM_MasterConfigTypeDef sMasterConfig = {0};
 800              		.loc 1 471 28 is_stmt 0 view .LVU235
 801 0012 0023     		movs	r3, #0
 802 0014 0A93     		str	r3, [sp, #40]
 803 0016 0B93     		str	r3, [sp, #44]
 804 0018 0C93     		str	r3, [sp, #48]
 805 001a 0D93     		str	r3, [sp, #52]
 472:Core/Src/main.c ****     TIM_OC_InitTypeDef sConfigOC = {0};
 806              		.loc 1 472 5 is_stmt 1 view .LVU236
 472:Core/Src/main.c ****     TIM_OC_InitTypeDef sConfigOC = {0};
 807              		.loc 1 472 29 is_stmt 0 view .LVU237
 808 001c 0893     		str	r3, [sp, #32]
 809 001e 0993     		str	r3, [sp, #36]
 473:Core/Src/main.c **** 
 810              		.loc 1 473 5 is_stmt 1 view .LVU238
 473:Core/Src/main.c **** 
 811              		.loc 1 473 24 is_stmt 0 view .LVU239
 812 0020 0193     		str	r3, [sp, #4]
 813 0022 0293     		str	r3, [sp, #8]
 814 0024 0393     		str	r3, [sp, #12]
 815 0026 0493     		str	r3, [sp, #16]
 816 0028 0593     		str	r3, [sp, #20]
 817 002a 0693     		str	r3, [sp, #24]
 818 002c 0793     		str	r3, [sp, #28]
 475:Core/Src/main.c ****     htim2.Init.Prescaler         = prescalerValue;
 819              		.loc 1 475 5 is_stmt 1 view .LVU240
 475:Core/Src/main.c ****     htim2.Init.Prescaler         = prescalerValue;
 820              		.loc 1 475 20 is_stmt 0 view .LVU241
 821 002e 1B48     		ldr	r0, .L58+4
 822 0030 4FF08041 		mov	r1, #1073741824
 823 0034 0160     		str	r1, [r0]
 476:Core/Src/main.c ****     htim2.Init.CounterMode       = TIM_COUNTERMODE_UP;
ARM GAS  /tmp/cc27GeAc.s 			page 31


 824              		.loc 1 476 5 is_stmt 1 view .LVU242
 476:Core/Src/main.c ****     htim2.Init.CounterMode       = TIM_COUNTERMODE_UP;
 825              		.loc 1 476 34 is_stmt 0 view .LVU243
 826 0036 4360     		str	r3, [r0, #4]
 477:Core/Src/main.c ****     htim2.Init.Period            = periodValue;
 827              		.loc 1 477 5 is_stmt 1 view .LVU244
 477:Core/Src/main.c ****     htim2.Init.Period            = periodValue;
 828              		.loc 1 477 34 is_stmt 0 view .LVU245
 829 0038 8360     		str	r3, [r0, #8]
 478:Core/Src/main.c ****     htim2.Init.ClockDivision     = TIM_CLOCKDIVISION_DIV1;
 830              		.loc 1 478 5 is_stmt 1 view .LVU246
 478:Core/Src/main.c ****     htim2.Init.ClockDivision     = TIM_CLOCKDIVISION_DIV1;
 831              		.loc 1 478 34 is_stmt 0 view .LVU247
 832 003a C260     		str	r2, [r0, #12]
 479:Core/Src/main.c ****     htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 833              		.loc 1 479 5 is_stmt 1 view .LVU248
 479:Core/Src/main.c ****     htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 834              		.loc 1 479 34 is_stmt 0 view .LVU249
 835 003c 0361     		str	r3, [r0, #16]
 480:Core/Src/main.c ****     if (HAL_TIM_Base_Init(&htim2) != HAL_OK) {
 836              		.loc 1 480 5 is_stmt 1 view .LVU250
 480:Core/Src/main.c ****     if (HAL_TIM_Base_Init(&htim2) != HAL_OK) {
 837              		.loc 1 480 34 is_stmt 0 view .LVU251
 838 003e 8361     		str	r3, [r0, #24]
 481:Core/Src/main.c ****         Error_Handler();
 839              		.loc 1 481 5 is_stmt 1 view .LVU252
 481:Core/Src/main.c ****         Error_Handler();
 840              		.loc 1 481 9 is_stmt 0 view .LVU253
 841 0040 FFF7FEFF 		bl	HAL_TIM_Base_Init
 842              	.LVL34:
 481:Core/Src/main.c ****         Error_Handler();
 843              		.loc 1 481 8 view .LVU254
 844 0044 00BB     		cbnz	r0, .L54
 484:Core/Src/main.c ****     if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK) {
 845              		.loc 1 484 5 is_stmt 1 view .LVU255
 484:Core/Src/main.c ****     if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK) {
 846              		.loc 1 484 36 is_stmt 0 view .LVU256
 847 0046 4FF48053 		mov	r3, #4096
 848 004a 0A93     		str	r3, [sp, #40]
 485:Core/Src/main.c ****         Error_Handler();
 849              		.loc 1 485 5 is_stmt 1 view .LVU257
 485:Core/Src/main.c ****         Error_Handler();
 850              		.loc 1 485 9 is_stmt 0 view .LVU258
 851 004c 0AA9     		add	r1, sp, #40
 852 004e 1348     		ldr	r0, .L58+4
 853 0050 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 854              	.LVL35:
 485:Core/Src/main.c ****         Error_Handler();
 855              		.loc 1 485 8 view .LVU259
 856 0054 D0B9     		cbnz	r0, .L55
 492:Core/Src/main.c ****     sMasterConfig.MasterSlaveMode     = TIM_MASTERSLAVEMODE_DISABLE;
 857              		.loc 1 492 5 is_stmt 1 view .LVU260
 492:Core/Src/main.c ****     sMasterConfig.MasterSlaveMode     = TIM_MASTERSLAVEMODE_DISABLE;
 858              		.loc 1 492 39 is_stmt 0 view .LVU261
 859 0056 2023     		movs	r3, #32
 860 0058 0893     		str	r3, [sp, #32]
 493:Core/Src/main.c ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK) {
ARM GAS  /tmp/cc27GeAc.s 			page 32


 861              		.loc 1 493 5 is_stmt 1 view .LVU262
 493:Core/Src/main.c ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK) {
 862              		.loc 1 493 39 is_stmt 0 view .LVU263
 863 005a 0023     		movs	r3, #0
 864 005c 0993     		str	r3, [sp, #36]
 494:Core/Src/main.c ****         Error_Handler();
 865              		.loc 1 494 5 is_stmt 1 view .LVU264
 494:Core/Src/main.c ****         Error_Handler();
 866              		.loc 1 494 9 is_stmt 0 view .LVU265
 867 005e 08A9     		add	r1, sp, #32
 868 0060 0E48     		ldr	r0, .L58+4
 869 0062 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 870              	.LVL36:
 494:Core/Src/main.c ****         Error_Handler();
 871              		.loc 1 494 8 view .LVU266
 872 0066 98B9     		cbnz	r0, .L56
 497:Core/Src/main.c ****     sConfigOC.Pulse      = 0;
 873              		.loc 1 497 5 is_stmt 1 view .LVU267
 497:Core/Src/main.c ****     sConfigOC.Pulse      = 0;
 874              		.loc 1 497 26 is_stmt 0 view .LVU268
 875 0068 6023     		movs	r3, #96
 876 006a 0193     		str	r3, [sp, #4]
 498:Core/Src/main.c ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 877              		.loc 1 498 5 is_stmt 1 view .LVU269
 498:Core/Src/main.c ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 878              		.loc 1 498 26 is_stmt 0 view .LVU270
 879 006c 0022     		movs	r2, #0
 880 006e 0292     		str	r2, [sp, #8]
 499:Core/Src/main.c ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 881              		.loc 1 499 5 is_stmt 1 view .LVU271
 499:Core/Src/main.c ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 882              		.loc 1 499 26 is_stmt 0 view .LVU272
 883 0070 0392     		str	r2, [sp, #12]
 500:Core/Src/main.c ****     if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
 884              		.loc 1 500 5 is_stmt 1 view .LVU273
 500:Core/Src/main.c ****     if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
 885              		.loc 1 500 26 is_stmt 0 view .LVU274
 886 0072 0592     		str	r2, [sp, #20]
 501:Core/Src/main.c ****         Error_Handler();
 887              		.loc 1 501 5 is_stmt 1 view .LVU275
 501:Core/Src/main.c ****         Error_Handler();
 888              		.loc 1 501 9 is_stmt 0 view .LVU276
 889 0074 01A9     		add	r1, sp, #4
 890 0076 0948     		ldr	r0, .L58+4
 891 0078 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 892              	.LVL37:
 501:Core/Src/main.c ****         Error_Handler();
 893              		.loc 1 501 8 view .LVU277
 894 007c 50B9     		cbnz	r0, .L57
 504:Core/Src/main.c **** 
 895              		.loc 1 504 1 view .LVU278
 896 007e 0FB0     		add	sp, sp, #60
 897              		.cfi_remember_state
 898              		.cfi_def_cfa_offset 4
 899              		@ sp needed
 900 0080 5DF804FB 		ldr	pc, [sp], #4
 901              	.LVL38:
ARM GAS  /tmp/cc27GeAc.s 			page 33


 902              	.L53:
 903              		.cfi_restore_state
 466:Core/Src/main.c ****     }
 904              		.loc 1 466 9 is_stmt 1 view .LVU279
 905 0084 FFF7FEFF 		bl	Error_Handler
 906              	.LVL39:
 907              	.L54:
 482:Core/Src/main.c ****     }
 908              		.loc 1 482 9 view .LVU280
 909 0088 FFF7FEFF 		bl	Error_Handler
 910              	.LVL40:
 911              	.L55:
 486:Core/Src/main.c ****     }
 912              		.loc 1 486 9 view .LVU281
 913 008c FFF7FEFF 		bl	Error_Handler
 914              	.LVL41:
 915              	.L56:
 495:Core/Src/main.c ****     }
 916              		.loc 1 495 9 view .LVU282
 917 0090 FFF7FEFF 		bl	Error_Handler
 918              	.LVL42:
 919              	.L57:
 502:Core/Src/main.c ****     }
 920              		.loc 1 502 9 view .LVU283
 921 0094 FFF7FEFF 		bl	Error_Handler
 922              	.LVL43:
 923              	.L59:
 924              		.align	2
 925              	.L58:
 926 0098 00000000 		.word	SystemCoreClock
 927 009c 00000000 		.word	.LANCHOR4
 928              		.cfi_endproc
 929              	.LFE245:
 931              		.section	.text.SystemClockHSE_Config,"ax",%progbits
 932              		.align	1
 933              		.global	SystemClockHSE_Config
 934              		.syntax unified
 935              		.thumb
 936              		.thumb_func
 937              		.fpu fpv4-sp-d16
 939              	SystemClockHSE_Config:
 940              	.LFB240:
 213:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 941              		.loc 1 213 29 view -0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 80
 944              		@ frame_needed = 0, uses_anonymous_args = 0
 945 0000 00B5     		push	{lr}
 946              		.cfi_def_cfa_offset 4
 947              		.cfi_offset 14, -4
 948 0002 95B0     		sub	sp, sp, #84
 949              		.cfi_def_cfa_offset 88
 214:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 950              		.loc 1 214 3 view .LVU285
 215:Core/Src/main.c ****   HAL_StatusTypeDef ret = HAL_OK;
 951              		.loc 1 215 3 view .LVU286
 216:Core/Src/main.c ****     
ARM GAS  /tmp/cc27GeAc.s 			page 34


 952              		.loc 1 216 3 view .LVU287
 953              	.LVL44:
 219:Core/Src/main.c ****   
 954              		.loc 1 219 3 view .LVU288
 955              	.LBB13:
 219:Core/Src/main.c ****   
 956              		.loc 1 219 3 view .LVU289
 957 0004 0023     		movs	r3, #0
 958 0006 0093     		str	r3, [sp]
 219:Core/Src/main.c ****   
 959              		.loc 1 219 3 view .LVU290
 960 0008 2D4A     		ldr	r2, .L72
 961 000a 116C     		ldr	r1, [r2, #64]
 962 000c 41F08051 		orr	r1, r1, #268435456
 963 0010 1164     		str	r1, [r2, #64]
 219:Core/Src/main.c ****   
 964              		.loc 1 219 3 view .LVU291
 965 0012 126C     		ldr	r2, [r2, #64]
 966 0014 02F08052 		and	r2, r2, #268435456
 967 0018 0092     		str	r2, [sp]
 219:Core/Src/main.c ****   
 968              		.loc 1 219 3 view .LVU292
 969 001a 009A     		ldr	r2, [sp]
 970              	.LBE13:
 219:Core/Src/main.c ****   
 971              		.loc 1 219 3 view .LVU293
 224:Core/Src/main.c **** 
 972              		.loc 1 224 3 view .LVU294
 973              	.LBB14:
 224:Core/Src/main.c **** 
 974              		.loc 1 224 3 view .LVU295
 975 001c 0193     		str	r3, [sp, #4]
 224:Core/Src/main.c **** 
 976              		.loc 1 224 3 view .LVU296
 977 001e 294A     		ldr	r2, .L72+4
 978 0020 1168     		ldr	r1, [r2]
 979 0022 41F44041 		orr	r1, r1, #49152
 980 0026 1160     		str	r1, [r2]
 224:Core/Src/main.c **** 
 981              		.loc 1 224 3 view .LVU297
 982 0028 1268     		ldr	r2, [r2]
 983 002a 02F44042 		and	r2, r2, #49152
 984 002e 0192     		str	r2, [sp, #4]
 224:Core/Src/main.c **** 
 985              		.loc 1 224 3 view .LVU298
 986 0030 019A     		ldr	r2, [sp, #4]
 987              	.LBE14:
 224:Core/Src/main.c **** 
 988              		.loc 1 224 3 view .LVU299
 227:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 989              		.loc 1 227 3 view .LVU300
 227:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 990              		.loc 1 227 34 is_stmt 0 view .LVU301
 991 0032 0122     		movs	r2, #1
 992 0034 0F92     		str	r2, [sp, #60]
 228:Core/Src/main.c ****   if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK) {
 993              		.loc 1 228 3 is_stmt 1 view .LVU302
ARM GAS  /tmp/cc27GeAc.s 			page 35


 228:Core/Src/main.c ****   if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK) {
 994              		.loc 1 228 34 is_stmt 0 view .LVU303
 995 0036 1093     		str	r3, [sp, #64]
 229:Core/Src/main.c ****     Error_Handler();
 996              		.loc 1 229 3 is_stmt 1 view .LVU304
 229:Core/Src/main.c ****     Error_Handler();
 997              		.loc 1 229 6 is_stmt 0 view .LVU305
 998 0038 0521     		movs	r1, #5
 999 003a 0FA8     		add	r0, sp, #60
 1000 003c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1001              	.LVL45:
 229:Core/Src/main.c ****     Error_Handler();
 1002              		.loc 1 229 5 view .LVU306
 1003 0040 D8B9     		cbnz	r0, .L68
 234:Core/Src/main.c ****   
 1004              		.loc 1 234 3 is_stmt 1 view .LVU307
 234:Core/Src/main.c ****   
 1005              		.loc 1 234 36 is_stmt 0 view .LVU308
 1006 0042 0123     		movs	r3, #1
 1007 0044 0293     		str	r3, [sp, #8]
 239:Core/Src/main.c **** #endif /* HSE_CRYSTAL */
 1008              		.loc 1 239 3 is_stmt 1 view .LVU309
 239:Core/Src/main.c **** #endif /* HSE_CRYSTAL */
 1009              		.loc 1 239 30 is_stmt 0 view .LVU310
 1010 0046 4FF4A023 		mov	r3, #327680
 1011 004a 0393     		str	r3, [sp, #12]
 241:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1012              		.loc 1 241 3 is_stmt 1 view .LVU311
 241:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1013              		.loc 1 241 35 is_stmt 0 view .LVU312
 1014 004c 0223     		movs	r3, #2
 1015 004e 0893     		str	r3, [sp, #32]
 242:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM      = 8;
 1016              		.loc 1 242 3 is_stmt 1 view .LVU313
 242:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM      = 8;
 1017              		.loc 1 242 35 is_stmt 0 view .LVU314
 1018 0050 4FF48002 		mov	r2, #4194304
 1019 0054 0992     		str	r2, [sp, #36]
 243:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN      = 360;
 1020              		.loc 1 243 3 is_stmt 1 view .LVU315
 243:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN      = 360;
 1021              		.loc 1 243 35 is_stmt 0 view .LVU316
 1022 0056 0822     		movs	r2, #8
 1023 0058 0A92     		str	r2, [sp, #40]
 244:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP      = RCC_PLLP_DIV2; 
 1024              		.loc 1 244 3 is_stmt 1 view .LVU317
 244:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP      = RCC_PLLP_DIV2; 
 1025              		.loc 1 244 35 is_stmt 0 view .LVU318
 1026 005a 4FF4B472 		mov	r2, #360
 1027 005e 0B92     		str	r2, [sp, #44]
 245:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ      = 7;
 1028              		.loc 1 245 3 is_stmt 1 view .LVU319
 245:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ      = 7;
 1029              		.loc 1 245 35 is_stmt 0 view .LVU320
 1030 0060 0C93     		str	r3, [sp, #48]
 246:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR      = 6;
 1031              		.loc 1 246 3 is_stmt 1 view .LVU321
ARM GAS  /tmp/cc27GeAc.s 			page 36


 246:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR      = 6;
 1032              		.loc 1 246 35 is_stmt 0 view .LVU322
 1033 0062 0723     		movs	r3, #7
 1034 0064 0D93     		str	r3, [sp, #52]
 247:Core/Src/main.c ****   if(HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 1035              		.loc 1 247 3 is_stmt 1 view .LVU323
 247:Core/Src/main.c ****   if(HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 1036              		.loc 1 247 35 is_stmt 0 view .LVU324
 1037 0066 0623     		movs	r3, #6
 1038 0068 0E93     		str	r3, [sp, #56]
 248:Core/Src/main.c ****     /* Initialization Error */
 1039              		.loc 1 248 3 is_stmt 1 view .LVU325
 248:Core/Src/main.c ****     /* Initialization Error */
 1040              		.loc 1 248 6 is_stmt 0 view .LVU326
 1041 006a 02A8     		add	r0, sp, #8
 1042 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 1043              	.LVL46:
 248:Core/Src/main.c ****     /* Initialization Error */
 1044              		.loc 1 248 5 view .LVU327
 1045 0070 28B9     		cbnz	r0, .L69
 254:Core/Src/main.c ****   if(ret != HAL_OK) {
 1046              		.loc 1 254 3 is_stmt 1 view .LVU328
 254:Core/Src/main.c ****   if(ret != HAL_OK) {
 1047              		.loc 1 254 9 is_stmt 0 view .LVU329
 1048 0072 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 1049              	.LVL47:
 255:Core/Src/main.c ****     while(1) { ; }
 1050              		.loc 1 255 3 is_stmt 1 view .LVU330
 255:Core/Src/main.c ****     while(1) { ; }
 1051              		.loc 1 255 5 is_stmt 0 view .LVU331
 1052 0076 20B1     		cbz	r0, .L63
 1053              	.L64:
 256:Core/Src/main.c ****   }
 1054              		.loc 1 256 5 is_stmt 1 discriminator 1 view .LVU332
 256:Core/Src/main.c ****   }
 1055              		.loc 1 256 16 discriminator 1 view .LVU333
 256:Core/Src/main.c ****   }
 1056              		.loc 1 256 10 discriminator 1 view .LVU334
 1057 0078 FEE7     		b	.L64
 1058              	.LVL48:
 1059              	.L68:
 230:Core/Src/main.c ****   }
 1060              		.loc 1 230 5 view .LVU335
 1061 007a FFF7FEFF 		bl	Error_Handler
 1062              	.LVL49:
 1063              	.L69:
 250:Core/Src/main.c ****   }
 1064              		.loc 1 250 5 view .LVU336
 1065 007e FFF7FEFF 		bl	Error_Handler
 1066              	.LVL50:
 1067              	.L63:
 260:Core/Src/main.c ****                                       RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2);
 1068              		.loc 1 260 3 view .LVU337
 260:Core/Src/main.c ****                                       RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2);
 1069              		.loc 1 260 36 is_stmt 0 view .LVU338
 1070 0082 0F23     		movs	r3, #15
 1071 0084 0F93     		str	r3, [sp, #60]
ARM GAS  /tmp/cc27GeAc.s 			page 37


 262:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider  = RCC_SYSCLK_DIV1;
 1072              		.loc 1 262 3 is_stmt 1 view .LVU339
 262:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider  = RCC_SYSCLK_DIV1;
 1073              		.loc 1 262 36 is_stmt 0 view .LVU340
 1074 0086 0223     		movs	r3, #2
 1075 0088 1093     		str	r3, [sp, #64]
 263:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;  
 1076              		.loc 1 263 3 is_stmt 1 view .LVU341
 263:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;  
 1077              		.loc 1 263 36 is_stmt 0 view .LVU342
 1078 008a 0023     		movs	r3, #0
 1079 008c 1193     		str	r3, [sp, #68]
 264:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;  
 1080              		.loc 1 264 3 is_stmt 1 view .LVU343
 264:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;  
 1081              		.loc 1 264 36 is_stmt 0 view .LVU344
 1082 008e 4FF4A052 		mov	r2, #5120
 1083 0092 1292     		str	r2, [sp, #72]
 265:Core/Src/main.c ****   if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK) {
 1084              		.loc 1 265 3 is_stmt 1 view .LVU345
 265:Core/Src/main.c ****   if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK) {
 1085              		.loc 1 265 36 is_stmt 0 view .LVU346
 1086 0094 1393     		str	r3, [sp, #76]
 266:Core/Src/main.c ****     Error_Handler();
 1087              		.loc 1 266 3 is_stmt 1 view .LVU347
 266:Core/Src/main.c ****     Error_Handler();
 1088              		.loc 1 266 6 is_stmt 0 view .LVU348
 1089 0096 0521     		movs	r1, #5
 1090 0098 0FA8     		add	r0, sp, #60
 1091              	.LVL51:
 266:Core/Src/main.c ****     Error_Handler();
 1092              		.loc 1 266 6 view .LVU349
 1093 009a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1094              	.LVL52:
 266:Core/Src/main.c ****     Error_Handler();
 1095              		.loc 1 266 5 view .LVU350
 1096 009e 58B9     		cbnz	r0, .L70
 271:Core/Src/main.c ****   RCC_OscInitStruct.HSIState       = RCC_HSI_OFF;
 1097              		.loc 1 271 3 is_stmt 1 view .LVU351
 271:Core/Src/main.c ****   RCC_OscInitStruct.HSIState       = RCC_HSI_OFF;
 1098              		.loc 1 271 36 is_stmt 0 view .LVU352
 1099 00a0 0223     		movs	r3, #2
 1100 00a2 0293     		str	r3, [sp, #8]
 272:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState   = RCC_PLL_NONE;
 1101              		.loc 1 272 3 is_stmt 1 view .LVU353
 272:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState   = RCC_PLL_NONE;
 1102              		.loc 1 272 36 is_stmt 0 view .LVU354
 1103 00a4 0023     		movs	r3, #0
 1104 00a6 0593     		str	r3, [sp, #20]
 273:Core/Src/main.c ****   if(HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 1105              		.loc 1 273 3 is_stmt 1 view .LVU355
 273:Core/Src/main.c ****   if(HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 1106              		.loc 1 273 36 is_stmt 0 view .LVU356
 1107 00a8 0893     		str	r3, [sp, #32]
 274:Core/Src/main.c ****     Error_Handler();
 1108              		.loc 1 274 3 is_stmt 1 view .LVU357
 274:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/cc27GeAc.s 			page 38


 1109              		.loc 1 274 6 is_stmt 0 view .LVU358
 1110 00aa 02A8     		add	r0, sp, #8
 1111 00ac FFF7FEFF 		bl	HAL_RCC_OscConfig
 1112              	.LVL53:
 274:Core/Src/main.c ****     Error_Handler();
 1113              		.loc 1 274 5 view .LVU359
 1114 00b0 20B9     		cbnz	r0, .L71
 277:Core/Src/main.c **** 
 1115              		.loc 1 277 1 view .LVU360
 1116 00b2 15B0     		add	sp, sp, #84
 1117              		.cfi_remember_state
 1118              		.cfi_def_cfa_offset 4
 1119              		@ sp needed
 1120 00b4 5DF804FB 		ldr	pc, [sp], #4
 1121              	.L70:
 1122              		.cfi_restore_state
 267:Core/Src/main.c ****   }
 1123              		.loc 1 267 5 is_stmt 1 view .LVU361
 1124 00b8 FFF7FEFF 		bl	Error_Handler
 1125              	.LVL54:
 1126              	.L71:
 275:Core/Src/main.c ****   }
 1127              		.loc 1 275 5 view .LVU362
 1128 00bc FFF7FEFF 		bl	Error_Handler
 1129              	.LVL55:
 1130              	.L73:
 1131              		.align	2
 1132              	.L72:
 1133 00c0 00380240 		.word	1073887232
 1134 00c4 00700040 		.word	1073770496
 1135              		.cfi_endproc
 1136              	.LFE240:
 1138              		.section	.text.main,"ax",%progbits
 1139              		.align	1
 1140              		.global	main
 1141              		.syntax unified
 1142              		.thumb
 1143              		.thumb_func
 1144              		.fpu fpv4-sp-d16
 1146              	main:
 1147              	.LFB239:
  79:Core/Src/main.c ****     #ifdef DEBUG
 1148              		.loc 1 79 12 view -0
 1149              		.cfi_startproc
 1150              		@ Volatile: function does not return.
 1151              		@ args = 0, pretend = 0, frame = 0
 1152              		@ frame_needed = 0, uses_anonymous_args = 0
 1153 0000 00B5     		push	{lr}
 1154              		.cfi_def_cfa_offset 4
 1155              		.cfi_offset 14, -4
 1156 0002 83B0     		sub	sp, sp, #12
 1157              		.cfi_def_cfa_offset 16
  81:Core/Src/main.c ****     #else
 1158              		.loc 1 81 9 view .LVU364
 1159 0004 414D     		ldr	r5, .L89
 1160 0006 2B46     		mov	r3, r5
 1161 0008 414A     		ldr	r2, .L89+4
ARM GAS  /tmp/cc27GeAc.s 			page 39


 1162 000a 1288     		ldrh	r2, [r2]
 1163 000c 4149     		ldr	r1, .L89+8
 1164 000e 0988     		ldrh	r1, [r1]
 1165 0010 4FF48050 		mov	r0, #4096
 1166 0014 FFF7FEFF 		bl	buildRamp
 1167              	.LVL56:
  85:Core/Src/main.c ****     adc1FullReady=false;
 1168              		.loc 1 85 5 view .LVU365
  85:Core/Src/main.c ****     adc1FullReady=false;
 1169              		.loc 1 85 18 is_stmt 0 view .LVU366
 1170 0018 0024     		movs	r4, #0
 1171 001a 3F4B     		ldr	r3, .L89+12
 1172 001c 1C70     		strb	r4, [r3]
  86:Core/Src/main.c ****     adc2HalfReady=false;
 1173              		.loc 1 86 5 is_stmt 1 view .LVU367
  86:Core/Src/main.c ****     adc2HalfReady=false;
 1174              		.loc 1 86 18 is_stmt 0 view .LVU368
 1175 001e 3F4B     		ldr	r3, .L89+16
 1176 0020 1C70     		strb	r4, [r3]
  87:Core/Src/main.c ****     adc2FullReady=false;
 1177              		.loc 1 87 5 is_stmt 1 view .LVU369
  87:Core/Src/main.c ****     adc2FullReady=false;
 1178              		.loc 1 87 18 is_stmt 0 view .LVU370
 1179 0022 3F4B     		ldr	r3, .L89+20
 1180 0024 1C70     		strb	r4, [r3]
  88:Core/Src/main.c ****     memset(avg, 0, sizeof(avg));
 1181              		.loc 1 88 5 is_stmt 1 view .LVU371
  88:Core/Src/main.c ****     memset(avg, 0, sizeof(avg));
 1182              		.loc 1 88 18 is_stmt 0 view .LVU372
 1183 0026 3F4B     		ldr	r3, .L89+24
 1184 0028 1C70     		strb	r4, [r3]
  89:Core/Src/main.c ****     nAvg = 0;
 1185              		.loc 1 89 5 is_stmt 1 view .LVU373
 1186 002a 4FF48042 		mov	r2, #16384
 1187 002e 2146     		mov	r1, r4
 1188 0030 3D48     		ldr	r0, .L89+28
 1189 0032 FFF7FEFF 		bl	memset
 1190              	.LVL57:
  90:Core/Src/main.c **** 
 1191              		.loc 1 90 5 view .LVU374
  90:Core/Src/main.c **** 
 1192              		.loc 1 90 10 is_stmt 0 view .LVU375
 1193 0036 3D4B     		ldr	r3, .L89+32
 1194 0038 1C80     		strh	r4, [r3]	@ movhi
  92:Core/Src/main.c ****     // SystemClock_Config();
 1195              		.loc 1 92 5 is_stmt 1 view .LVU376
 1196 003a FFF7FEFF 		bl	HAL_Init
 1197              	.LVL58:
  94:Core/Src/main.c **** 
 1198              		.loc 1 94 5 view .LVU377
 1199 003e FFF7FEFF 		bl	SystemClockHSE_Config
 1200              	.LVL59:
  96:Core/Src/main.c ****     MX_DMA_Init();
 1201              		.loc 1 96 5 view .LVU378
 1202 0042 FFF7FEFF 		bl	MX_GPIO_Init
 1203              	.LVL60:
  97:Core/Src/main.c ****     MX_ADC1_Init();
ARM GAS  /tmp/cc27GeAc.s 			page 40


 1204              		.loc 1 97 5 view .LVU379
 1205 0046 FFF7FEFF 		bl	MX_DMA_Init
 1206              	.LVL61:
  98:Core/Src/main.c ****     MX_ADC2_Init();
 1207              		.loc 1 98 5 view .LVU380
 1208 004a FFF7FEFF 		bl	MX_ADC1_Init
 1209              	.LVL62:
  99:Core/Src/main.c ****     MX_USART2_UART_Init();
 1210              		.loc 1 99 5 view .LVU381
 1211 004e FFF7FEFF 		bl	MX_ADC2_Init
 1212              	.LVL63:
 100:Core/Src/main.c ****     MX_DAC_Init();
 1213              		.loc 1 100 5 view .LVU382
 1214 0052 FFF7FEFF 		bl	MX_USART2_UART_Init
 1215              	.LVL64:
 101:Core/Src/main.c ****     MX_TIM2_Init();
 1216              		.loc 1 101 5 view .LVU383
 1217 0056 FFF7FEFF 		bl	MX_DAC_Init
 1218              	.LVL65:
 102:Core/Src/main.c **** 
 1219              		.loc 1 102 5 view .LVU384
 1220 005a FFF7FEFF 		bl	MX_TIM2_Init
 1221              	.LVL66:
 104:Core/Src/main.c ****         Error_Handler(); 
 1222              		.loc 1 104 5 view .LVU385
 104:Core/Src/main.c ****         Error_Handler(); 
 1223              		.loc 1 104 8 is_stmt 0 view .LVU386
 1224 005e 0094     		str	r4, [sp]
 1225 0060 4FF48053 		mov	r3, #4096
 1226 0064 2A46     		mov	r2, r5
 1227 0066 2146     		mov	r1, r4
 1228 0068 3148     		ldr	r0, .L89+36
 1229 006a FFF7FEFF 		bl	HAL_DAC_Start_DMA
 1230              	.LVL67:
 104:Core/Src/main.c ****         Error_Handler(); 
 1231              		.loc 1 104 7 view .LVU387
 1232 006e 08B1     		cbz	r0, .L75
 105:Core/Src/main.c **** 
 1233              		.loc 1 105 9 is_stmt 1 view .LVU388
 1234 0070 FFF7FEFF 		bl	Error_Handler
 1235              	.LVL68:
 1236              	.L75:
 107:Core/Src/main.c ****         Error_Handler(); 
 1237              		.loc 1 107 5 view .LVU389
 107:Core/Src/main.c ****         Error_Handler(); 
 1238              		.loc 1 107 8 is_stmt 0 view .LVU390
 1239 0074 4FF40052 		mov	r2, #8192
 1240 0078 2E49     		ldr	r1, .L89+40
 1241 007a 2F48     		ldr	r0, .L89+44
 1242 007c FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1243              	.LVL69:
 107:Core/Src/main.c ****         Error_Handler(); 
 1244              		.loc 1 107 7 view .LVU391
 1245 0080 08B1     		cbz	r0, .L76
 108:Core/Src/main.c **** 
 1246              		.loc 1 108 9 is_stmt 1 view .LVU392
 1247 0082 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/cc27GeAc.s 			page 41


 1248              	.LVL70:
 1249              	.L76:
 110:Core/Src/main.c ****         Error_Handler(); 
 1250              		.loc 1 110 5 view .LVU393
 110:Core/Src/main.c ****         Error_Handler(); 
 1251              		.loc 1 110 8 is_stmt 0 view .LVU394
 1252 0086 4FF40052 		mov	r2, #8192
 1253 008a 2C49     		ldr	r1, .L89+48
 1254 008c 2C48     		ldr	r0, .L89+52
 1255 008e FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1256              	.LVL71:
 110:Core/Src/main.c ****         Error_Handler(); 
 1257              		.loc 1 110 7 view .LVU395
 1258 0092 08B1     		cbz	r0, .L77
 111:Core/Src/main.c **** 
 1259              		.loc 1 111 9 is_stmt 1 view .LVU396
 1260 0094 FFF7FEFF 		bl	Error_Handler
 1261              	.LVL72:
 1262              	.L77:
 113:Core/Src/main.c ****         Error_Handler();
 1263              		.loc 1 113 5 view .LVU397
 113:Core/Src/main.c ****         Error_Handler();
 1264              		.loc 1 113 8 is_stmt 0 view .LVU398
 1265 0098 2A48     		ldr	r0, .L89+56
 1266 009a FFF7FEFF 		bl	HAL_TIM_Base_Start
 1267              	.LVL73:
 113:Core/Src/main.c ****         Error_Handler();
 1268              		.loc 1 113 7 view .LVU399
 1269 009e 08B1     		cbz	r0, .L78
 114:Core/Src/main.c ****     
 1270              		.loc 1 114 9 is_stmt 1 view .LVU400
 1271 00a0 FFF7FEFF 		bl	Error_Handler
 1272              	.LVL74:
 1273              	.L78:
 120:Core/Src/main.c ****         Error_Handler();
 1274              		.loc 1 120 5 view .LVU401
 120:Core/Src/main.c ****         Error_Handler();
 1275              		.loc 1 120 8 is_stmt 0 view .LVU402
 1276 00a4 2648     		ldr	r0, .L89+52
 1277 00a6 FFF7FEFF 		bl	HAL_ADC_Start_IT
 1278              	.LVL75:
 120:Core/Src/main.c ****         Error_Handler();
 1279              		.loc 1 120 7 view .LVU403
 1280 00aa A0B9     		cbnz	r0, .L85
 1281              	.L83:
 123:Core/Src/main.c ****         if(adc1HalfReady) {
 1282              		.loc 1 123 5 is_stmt 1 view .LVU404
 124:Core/Src/main.c ****             adc1HalfReady = false;
 1283              		.loc 1 124 9 view .LVU405
 124:Core/Src/main.c ****             adc1HalfReady = false;
 1284              		.loc 1 124 12 is_stmt 0 view .LVU406
 1285 00ac 1A4B     		ldr	r3, .L89+12
 1286 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 124:Core/Src/main.c ****             adc1HalfReady = false;
 1287              		.loc 1 124 11 view .LVU407
 1288 00b0 9BB9     		cbnz	r3, .L86
 1289              	.L80:
ARM GAS  /tmp/cc27GeAc.s 			page 42


 130:Core/Src/main.c ****             adc1FullReady = false;
 1290              		.loc 1 130 9 is_stmt 1 view .LVU408
 130:Core/Src/main.c ****             adc1FullReady = false;
 1291              		.loc 1 130 12 is_stmt 0 view .LVU409
 1292 00b2 1A4B     		ldr	r3, .L89+16
 1293 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 130:Core/Src/main.c ****             adc1FullReady = false;
 1294              		.loc 1 130 11 view .LVU410
 1295 00b6 C3B9     		cbnz	r3, .L87
 1296              	.L81:
 136:Core/Src/main.c ****             adc2HalfReady = false;
 1297              		.loc 1 136 9 is_stmt 1 view .LVU411
 136:Core/Src/main.c ****             adc2HalfReady = false;
 1298              		.loc 1 136 12 is_stmt 0 view .LVU412
 1299 00b8 194B     		ldr	r3, .L89+20
 1300 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 136:Core/Src/main.c ****             adc2HalfReady = false;
 1301              		.loc 1 136 11 view .LVU413
 1302 00bc EBB9     		cbnz	r3, .L88
 1303              	.L82:
 142:Core/Src/main.c ****             adc2FullReady = false;
 1304              		.loc 1 142 9 is_stmt 1 view .LVU414
 142:Core/Src/main.c ****             adc2FullReady = false;
 1305              		.loc 1 142 12 is_stmt 0 view .LVU415
 1306 00be 194B     		ldr	r3, .L89+24
 1307 00c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 142:Core/Src/main.c ****             adc2FullReady = false;
 1308              		.loc 1 142 11 view .LVU416
 1309 00c2 002B     		cmp	r3, #0
 1310 00c4 F2D0     		beq	.L83
 143:Core/Src/main.c ****             HAL_GPIO_TogglePin (LD2_GPIO_Port, LD2_Pin);
 1311              		.loc 1 143 13 is_stmt 1 view .LVU417
 143:Core/Src/main.c ****             HAL_GPIO_TogglePin (LD2_GPIO_Port, LD2_Pin);
 1312              		.loc 1 143 27 is_stmt 0 view .LVU418
 1313 00c6 174B     		ldr	r3, .L89+24
 1314 00c8 0022     		movs	r2, #0
 1315 00ca 1A70     		strb	r2, [r3]
 144:Core/Src/main.c ****             // memcpy(txBuff, &adc_val[NS], NS*sizeof(*adc_val));
 1316              		.loc 1 144 13 is_stmt 1 view .LVU419
 1317 00cc 2021     		movs	r1, #32
 1318 00ce 1E48     		ldr	r0, .L89+60
 1319 00d0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1320              	.LVL76:
 1321 00d4 EAE7     		b	.L83
 1322              	.L85:
 121:Core/Src/main.c **** 
 1323              		.loc 1 121 9 view .LVU420
 1324 00d6 FFF7FEFF 		bl	Error_Handler
 1325              	.LVL77:
 1326              	.L86:
 125:Core/Src/main.c ****             HAL_GPIO_TogglePin (LD2_GPIO_Port, LD2_Pin);
 1327              		.loc 1 125 13 view .LVU421
 125:Core/Src/main.c ****             HAL_GPIO_TogglePin (LD2_GPIO_Port, LD2_Pin);
 1328              		.loc 1 125 27 is_stmt 0 view .LVU422
 1329 00da 0F4B     		ldr	r3, .L89+12
 1330 00dc 0022     		movs	r2, #0
 1331 00de 1A70     		strb	r2, [r3]
ARM GAS  /tmp/cc27GeAc.s 			page 43


 126:Core/Src/main.c ****             // memcpy(txBuff, adc_val, NS*sizeof(*adc_val));
 1332              		.loc 1 126 13 is_stmt 1 view .LVU423
 1333 00e0 2021     		movs	r1, #32
 1334 00e2 1948     		ldr	r0, .L89+60
 1335 00e4 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1336              	.LVL78:
 1337 00e8 E3E7     		b	.L80
 1338              	.L87:
 131:Core/Src/main.c ****             HAL_GPIO_TogglePin (LD2_GPIO_Port, LD2_Pin);
 1339              		.loc 1 131 13 view .LVU424
 131:Core/Src/main.c ****             HAL_GPIO_TogglePin (LD2_GPIO_Port, LD2_Pin);
 1340              		.loc 1 131 27 is_stmt 0 view .LVU425
 1341 00ea 0C4B     		ldr	r3, .L89+16
 1342 00ec 0022     		movs	r2, #0
 1343 00ee 1A70     		strb	r2, [r3]
 132:Core/Src/main.c ****             // memcpy(txBuff, &adc_val[NS], NS*sizeof(*adc_val));
 1344              		.loc 1 132 13 is_stmt 1 view .LVU426
 1345 00f0 2021     		movs	r1, #32
 1346 00f2 1548     		ldr	r0, .L89+60
 1347 00f4 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1348              	.LVL79:
 1349 00f8 DEE7     		b	.L81
 1350              	.L88:
 137:Core/Src/main.c ****             HAL_GPIO_TogglePin (LD2_GPIO_Port, LD2_Pin);
 1351              		.loc 1 137 13 view .LVU427
 137:Core/Src/main.c ****             HAL_GPIO_TogglePin (LD2_GPIO_Port, LD2_Pin);
 1352              		.loc 1 137 27 is_stmt 0 view .LVU428
 1353 00fa 094B     		ldr	r3, .L89+20
 1354 00fc 0022     		movs	r2, #0
 1355 00fe 1A70     		strb	r2, [r3]
 138:Core/Src/main.c ****             // memcpy(txBuff, adc_val, NS*sizeof(*adc_val));
 1356              		.loc 1 138 13 is_stmt 1 view .LVU429
 1357 0100 2021     		movs	r1, #32
 1358 0102 1148     		ldr	r0, .L89+60
 1359 0104 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1360              	.LVL80:
 1361 0108 D9E7     		b	.L82
 1362              	.L90:
 1363 010a 00BF     		.align	2
 1364              	.L89:
 1365 010c 00000000 		.word	Ramp
 1366 0110 00000000 		.word	.LANCHOR5
 1367 0114 00000000 		.word	.LANCHOR6
 1368 0118 00000000 		.word	.LANCHOR7
 1369 011c 00000000 		.word	.LANCHOR8
 1370 0120 00000000 		.word	.LANCHOR9
 1371 0124 00000000 		.word	.LANCHOR10
 1372 0128 00000000 		.word	avg
 1373 012c 00000000 		.word	.LANCHOR11
 1374 0130 00000000 		.word	.LANCHOR3
 1375 0134 00000000 		.word	adc1Val
 1376 0138 00000000 		.word	.LANCHOR0
 1377 013c 00000000 		.word	adc2Val
 1378 0140 00000000 		.word	.LANCHOR1
 1379 0144 00000000 		.word	.LANCHOR4
 1380 0148 00000240 		.word	1073872896
 1381              		.cfi_endproc
ARM GAS  /tmp/cc27GeAc.s 			page 44


 1382              	.LFE239:
 1384              		.section	.text.SystemClock_Config,"ax",%progbits
 1385              		.align	1
 1386              		.global	SystemClock_Config
 1387              		.syntax unified
 1388              		.thumb
 1389              		.thumb_func
 1390              		.fpu fpv4-sp-d16
 1392              	SystemClock_Config:
 1393              	.LFB241:
 328:Core/Src/main.c ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1394              		.loc 1 328 26 view -0
 1395              		.cfi_startproc
 1396              		@ args = 0, pretend = 0, frame = 80
 1397              		@ frame_needed = 0, uses_anonymous_args = 0
 1398 0000 00B5     		push	{lr}
 1399              		.cfi_def_cfa_offset 4
 1400              		.cfi_offset 14, -4
 1401 0002 95B0     		sub	sp, sp, #84
 1402              		.cfi_def_cfa_offset 88
 329:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1403              		.loc 1 329 5 view .LVU431
 329:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1404              		.loc 1 329 24 is_stmt 0 view .LVU432
 1405 0004 3422     		movs	r2, #52
 1406 0006 0021     		movs	r1, #0
 1407 0008 07A8     		add	r0, sp, #28
 1408 000a FFF7FEFF 		bl	memset
 1409              	.LVL81:
 330:Core/Src/main.c **** 
 1410              		.loc 1 330 5 is_stmt 1 view .LVU433
 330:Core/Src/main.c **** 
 1411              		.loc 1 330 24 is_stmt 0 view .LVU434
 1412 000e 0023     		movs	r3, #0
 1413 0010 0293     		str	r3, [sp, #8]
 1414 0012 0393     		str	r3, [sp, #12]
 1415 0014 0493     		str	r3, [sp, #16]
 1416 0016 0593     		str	r3, [sp, #20]
 1417 0018 0693     		str	r3, [sp, #24]
 332:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1418              		.loc 1 332 5 is_stmt 1 view .LVU435
 1419              	.LBB15:
 332:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1420              		.loc 1 332 5 view .LVU436
 1421 001a 0093     		str	r3, [sp]
 332:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1422              		.loc 1 332 5 view .LVU437
 1423 001c 1F4A     		ldr	r2, .L97
 1424 001e 116C     		ldr	r1, [r2, #64]
 1425 0020 41F08051 		orr	r1, r1, #268435456
 1426 0024 1164     		str	r1, [r2, #64]
 332:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1427              		.loc 1 332 5 view .LVU438
 1428 0026 126C     		ldr	r2, [r2, #64]
 1429 0028 02F08052 		and	r2, r2, #268435456
 1430 002c 0092     		str	r2, [sp]
 332:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
ARM GAS  /tmp/cc27GeAc.s 			page 45


 1431              		.loc 1 332 5 view .LVU439
 1432 002e 009A     		ldr	r2, [sp]
 1433              	.LBE15:
 332:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1434              		.loc 1 332 5 view .LVU440
 333:Core/Src/main.c **** 
 1435              		.loc 1 333 5 view .LVU441
 1436              	.LBB16:
 333:Core/Src/main.c **** 
 1437              		.loc 1 333 5 view .LVU442
 1438 0030 0193     		str	r3, [sp, #4]
 333:Core/Src/main.c **** 
 1439              		.loc 1 333 5 view .LVU443
 1440 0032 1B49     		ldr	r1, .L97+4
 1441 0034 0A68     		ldr	r2, [r1]
 1442 0036 22F44042 		bic	r2, r2, #49152
 1443 003a 42F48042 		orr	r2, r2, #16384
 1444 003e 0A60     		str	r2, [r1]
 333:Core/Src/main.c **** 
 1445              		.loc 1 333 5 view .LVU444
 1446 0040 0A68     		ldr	r2, [r1]
 1447 0042 02F44042 		and	r2, r2, #49152
 1448 0046 0192     		str	r2, [sp, #4]
 333:Core/Src/main.c **** 
 1449              		.loc 1 333 5 view .LVU445
 1450 0048 019A     		ldr	r2, [sp, #4]
 1451              	.LBE16:
 333:Core/Src/main.c **** 
 1452              		.loc 1 333 5 view .LVU446
 335:Core/Src/main.c ****     RCC_OscInitStruct.HSIState            = RCC_HSI_ON;
 1453              		.loc 1 335 5 view .LVU447
 335:Core/Src/main.c ****     RCC_OscInitStruct.HSIState            = RCC_HSI_ON;
 1454              		.loc 1 335 43 is_stmt 0 view .LVU448
 1455 004a 0222     		movs	r2, #2
 1456 004c 0792     		str	r2, [sp, #28]
 336:Core/Src/main.c ****     RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1457              		.loc 1 336 5 is_stmt 1 view .LVU449
 336:Core/Src/main.c ****     RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1458              		.loc 1 336 43 is_stmt 0 view .LVU450
 1459 004e 0121     		movs	r1, #1
 1460 0050 0A91     		str	r1, [sp, #40]
 337:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState        = RCC_PLL_ON;
 1461              		.loc 1 337 5 is_stmt 1 view .LVU451
 337:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState        = RCC_PLL_ON;
 1462              		.loc 1 337 43 is_stmt 0 view .LVU452
 1463 0052 1021     		movs	r1, #16
 1464 0054 0B91     		str	r1, [sp, #44]
 338:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource       = RCC_PLLSOURCE_HSI;
 1465              		.loc 1 338 5 is_stmt 1 view .LVU453
 338:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource       = RCC_PLLSOURCE_HSI;
 1466              		.loc 1 338 43 is_stmt 0 view .LVU454
 1467 0056 0D92     		str	r2, [sp, #52]
 339:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM            = 16;
 1468              		.loc 1 339 5 is_stmt 1 view .LVU455
 339:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM            = 16;
 1469              		.loc 1 339 43 is_stmt 0 view .LVU456
 1470 0058 0E93     		str	r3, [sp, #56]
ARM GAS  /tmp/cc27GeAc.s 			page 46


 340:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN            = 336;
 1471              		.loc 1 340 5 is_stmt 1 view .LVU457
 340:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN            = 336;
 1472              		.loc 1 340 43 is_stmt 0 view .LVU458
 1473 005a 0F91     		str	r1, [sp, #60]
 341:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP            = RCC_PLLP_DIV4;
 1474              		.loc 1 341 5 is_stmt 1 view .LVU459
 341:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP            = RCC_PLLP_DIV4;
 1475              		.loc 1 341 43 is_stmt 0 view .LVU460
 1476 005c 4FF4A873 		mov	r3, #336
 1477 0060 1093     		str	r3, [sp, #64]
 342:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ            = 2;
 1478              		.loc 1 342 5 is_stmt 1 view .LVU461
 342:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ            = 2;
 1479              		.loc 1 342 43 is_stmt 0 view .LVU462
 1480 0062 0423     		movs	r3, #4
 1481 0064 1193     		str	r3, [sp, #68]
 343:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLR            = 2;
 1482              		.loc 1 343 5 is_stmt 1 view .LVU463
 343:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLR            = 2;
 1483              		.loc 1 343 43 is_stmt 0 view .LVU464
 1484 0066 1292     		str	r2, [sp, #72]
 344:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 1485              		.loc 1 344 5 is_stmt 1 view .LVU465
 344:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 1486              		.loc 1 344 43 is_stmt 0 view .LVU466
 1487 0068 1392     		str	r2, [sp, #76]
 345:Core/Src/main.c ****         Error_Handler();
 1488              		.loc 1 345 5 is_stmt 1 view .LVU467
 345:Core/Src/main.c ****         Error_Handler();
 1489              		.loc 1 345 9 is_stmt 0 view .LVU468
 1490 006a 07A8     		add	r0, sp, #28
 1491 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 1492              	.LVL82:
 345:Core/Src/main.c ****         Error_Handler();
 1493              		.loc 1 345 8 view .LVU469
 1494 0070 80B9     		cbnz	r0, .L95
 349:Core/Src/main.c ****                                        RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1495              		.loc 1 349 5 is_stmt 1 view .LVU470
 349:Core/Src/main.c ****                                        RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1496              		.loc 1 349 38 is_stmt 0 view .LVU471
 1497 0072 0F23     		movs	r3, #15
 1498 0074 0293     		str	r3, [sp, #8]
 351:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider  = RCC_SYSCLK_DIV1;
 1499              		.loc 1 351 5 is_stmt 1 view .LVU472
 351:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider  = RCC_SYSCLK_DIV1;
 1500              		.loc 1 351 38 is_stmt 0 view .LVU473
 1501 0076 0221     		movs	r1, #2
 1502 0078 0391     		str	r1, [sp, #12]
 352:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1503              		.loc 1 352 5 is_stmt 1 view .LVU474
 352:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1504              		.loc 1 352 38 is_stmt 0 view .LVU475
 1505 007a 0023     		movs	r3, #0
 1506 007c 0493     		str	r3, [sp, #16]
 353:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1507              		.loc 1 353 5 is_stmt 1 view .LVU476
ARM GAS  /tmp/cc27GeAc.s 			page 47


 353:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1508              		.loc 1 353 38 is_stmt 0 view .LVU477
 1509 007e 4FF48052 		mov	r2, #4096
 1510 0082 0592     		str	r2, [sp, #20]
 354:Core/Src/main.c **** 
 1511              		.loc 1 354 5 is_stmt 1 view .LVU478
 354:Core/Src/main.c **** 
 1512              		.loc 1 354 38 is_stmt 0 view .LVU479
 1513 0084 0693     		str	r3, [sp, #24]
 356:Core/Src/main.c ****         Error_Handler();
 1514              		.loc 1 356 5 is_stmt 1 view .LVU480
 356:Core/Src/main.c ****         Error_Handler();
 1515              		.loc 1 356 9 is_stmt 0 view .LVU481
 1516 0086 02A8     		add	r0, sp, #8
 1517 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1518              	.LVL83:
 356:Core/Src/main.c ****         Error_Handler();
 1519              		.loc 1 356 8 view .LVU482
 1520 008c 20B9     		cbnz	r0, .L96
 359:Core/Src/main.c **** #endif // OVERCLOCK
 1521              		.loc 1 359 1 view .LVU483
 1522 008e 15B0     		add	sp, sp, #84
 1523              		.cfi_remember_state
 1524              		.cfi_def_cfa_offset 4
 1525              		@ sp needed
 1526 0090 5DF804FB 		ldr	pc, [sp], #4
 1527              	.L95:
 1528              		.cfi_restore_state
 346:Core/Src/main.c ****     }
 1529              		.loc 1 346 9 is_stmt 1 view .LVU484
 1530 0094 FFF7FEFF 		bl	Error_Handler
 1531              	.LVL84:
 1532              	.L96:
 357:Core/Src/main.c ****     }
 1533              		.loc 1 357 9 view .LVU485
 1534 0098 FFF7FEFF 		bl	Error_Handler
 1535              	.LVL85:
 1536              	.L98:
 1537              		.align	2
 1538              	.L97:
 1539 009c 00380240 		.word	1073887232
 1540 00a0 00700040 		.word	1073770496
 1541              		.cfi_endproc
 1542              	.LFE241:
 1544              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1545              		.align	1
 1546              		.global	HAL_ADC_ConvHalfCpltCallback
 1547              		.syntax unified
 1548              		.thumb
 1549              		.thumb_func
 1550              		.fpu fpv4-sp-d16
 1552              	HAL_ADC_ConvHalfCpltCallback:
 1553              	.LVL86:
 1554              	.LFB250:
 571:Core/Src/main.c **** }
 572:Core/Src/main.c **** 
 573:Core/Src/main.c **** 
ARM GAS  /tmp/cc27GeAc.s 			page 48


 574:Core/Src/main.c **** #ifdef  USE_FULL_ASSERT
 575:Core/Src/main.c **** void
 576:Core/Src/main.c **** assert_failed(uint8_t *file, uint32_t line) {
 577:Core/Src/main.c **** }
 578:Core/Src/main.c **** #endif /* USE_FULL_ASSERT */
 579:Core/Src/main.c **** 
 580:Core/Src/main.c **** 
 581:Core/Src/main.c **** /// ADC Conversion_Half_Complete callback
 582:Core/Src/main.c **** void
 583:Core/Src/main.c **** HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hAdc) {
 1555              		.loc 1 583 55 view -0
 1556              		.cfi_startproc
 1557              		@ args = 0, pretend = 0, frame = 0
 1558              		@ frame_needed = 0, uses_anonymous_args = 0
 1559              		@ link register save eliminated.
 584:Core/Src/main.c ****     if(hAdc == &hadc1) {
 1560              		.loc 1 584 5 view .LVU487
 1561              		.loc 1 584 7 is_stmt 0 view .LVU488
 1562 0000 074B     		ldr	r3, .L104
 1563 0002 9842     		cmp	r0, r3
 1564 0004 03D0     		beq	.L102
 585:Core/Src/main.c ****         adc1HalfReady = true;
 586:Core/Src/main.c ****     }
 587:Core/Src/main.c ****     else if(hAdc == &hadc2) {
 1565              		.loc 1 587 10 is_stmt 1 view .LVU489
 1566              		.loc 1 587 12 is_stmt 0 view .LVU490
 1567 0006 074B     		ldr	r3, .L104+4
 1568 0008 9842     		cmp	r0, r3
 1569 000a 04D0     		beq	.L103
 1570              	.L99:
 588:Core/Src/main.c ****         adc2HalfReady = true;
 589:Core/Src/main.c ****     }
 590:Core/Src/main.c **** }
 1571              		.loc 1 590 1 view .LVU491
 1572 000c 7047     		bx	lr
 1573              	.L102:
 585:Core/Src/main.c ****         adc1HalfReady = true;
 1574              		.loc 1 585 9 is_stmt 1 view .LVU492
 585:Core/Src/main.c ****         adc1HalfReady = true;
 1575              		.loc 1 585 23 is_stmt 0 view .LVU493
 1576 000e 064B     		ldr	r3, .L104+8
 1577 0010 0122     		movs	r2, #1
 1578 0012 1A70     		strb	r2, [r3]
 1579 0014 7047     		bx	lr
 1580              	.L103:
 588:Core/Src/main.c ****         adc2HalfReady = true;
 1581              		.loc 1 588 9 is_stmt 1 view .LVU494
 588:Core/Src/main.c ****         adc2HalfReady = true;
 1582              		.loc 1 588 23 is_stmt 0 view .LVU495
 1583 0016 054B     		ldr	r3, .L104+12
 1584 0018 0122     		movs	r2, #1
 1585 001a 1A70     		strb	r2, [r3]
 1586              		.loc 1 590 1 view .LVU496
 1587 001c F6E7     		b	.L99
 1588              	.L105:
 1589 001e 00BF     		.align	2
 1590              	.L104:
ARM GAS  /tmp/cc27GeAc.s 			page 49


 1591 0020 00000000 		.word	.LANCHOR0
 1592 0024 00000000 		.word	.LANCHOR1
 1593 0028 00000000 		.word	.LANCHOR7
 1594 002c 00000000 		.word	.LANCHOR9
 1595              		.cfi_endproc
 1596              	.LFE250:
 1598              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 1599              		.align	1
 1600              		.global	HAL_ADC_ConvCpltCallback
 1601              		.syntax unified
 1602              		.thumb
 1603              		.thumb_func
 1604              		.fpu fpv4-sp-d16
 1606              	HAL_ADC_ConvCpltCallback:
 1607              	.LVL87:
 1608              	.LFB251:
 591:Core/Src/main.c **** 
 592:Core/Src/main.c **** 
 593:Core/Src/main.c **** /// ADC Conversion_Complete callback
 594:Core/Src/main.c **** void
 595:Core/Src/main.c **** HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hAdc) {
 1609              		.loc 1 595 51 is_stmt 1 view -0
 1610              		.cfi_startproc
 1611              		@ args = 0, pretend = 0, frame = 0
 1612              		@ frame_needed = 0, uses_anonymous_args = 0
 1613              		@ link register save eliminated.
 596:Core/Src/main.c ****     if(hAdc == &hadc1) {
 1614              		.loc 1 596 5 view .LVU498
 1615              		.loc 1 596 7 is_stmt 0 view .LVU499
 1616 0000 074B     		ldr	r3, .L111
 1617 0002 9842     		cmp	r0, r3
 1618 0004 03D0     		beq	.L109
 597:Core/Src/main.c ****         adc1FullReady = true;
 598:Core/Src/main.c ****     }
 599:Core/Src/main.c ****     else if(hAdc == &hadc2) {
 1619              		.loc 1 599 10 is_stmt 1 view .LVU500
 1620              		.loc 1 599 12 is_stmt 0 view .LVU501
 1621 0006 074B     		ldr	r3, .L111+4
 1622 0008 9842     		cmp	r0, r3
 1623 000a 04D0     		beq	.L110
 1624              	.L106:
 600:Core/Src/main.c ****         adc2FullReady = true;
 601:Core/Src/main.c ****     }
 602:Core/Src/main.c **** }
 1625              		.loc 1 602 1 view .LVU502
 1626 000c 7047     		bx	lr
 1627              	.L109:
 597:Core/Src/main.c ****         adc1FullReady = true;
 1628              		.loc 1 597 9 is_stmt 1 view .LVU503
 597:Core/Src/main.c ****         adc1FullReady = true;
 1629              		.loc 1 597 23 is_stmt 0 view .LVU504
 1630 000e 064B     		ldr	r3, .L111+8
 1631 0010 0122     		movs	r2, #1
 1632 0012 1A70     		strb	r2, [r3]
 1633 0014 7047     		bx	lr
 1634              	.L110:
 600:Core/Src/main.c ****         adc2FullReady = true;
ARM GAS  /tmp/cc27GeAc.s 			page 50


 1635              		.loc 1 600 9 is_stmt 1 view .LVU505
 600:Core/Src/main.c ****         adc2FullReady = true;
 1636              		.loc 1 600 23 is_stmt 0 view .LVU506
 1637 0016 054B     		ldr	r3, .L111+12
 1638 0018 0122     		movs	r2, #1
 1639 001a 1A70     		strb	r2, [r3]
 1640              		.loc 1 602 1 view .LVU507
 1641 001c F6E7     		b	.L106
 1642              	.L112:
 1643 001e 00BF     		.align	2
 1644              	.L111:
 1645 0020 00000000 		.word	.LANCHOR0
 1646 0024 00000000 		.word	.LANCHOR1
 1647 0028 00000000 		.word	.LANCHOR8
 1648 002c 00000000 		.word	.LANCHOR10
 1649              		.cfi_endproc
 1650              	.LFE251:
 1652              		.global	outBuff
 1653              		.global	adc2FullReady
 1654              		.global	adc2HalfReady
 1655              		.global	adc1FullReady
 1656              		.global	adc1HalfReady
 1657              		.global	rampMax
 1658              		.global	rampMin
 1659              		.global	adc2Val
 1660              		.global	nAvg
 1661              		.global	avg
 1662              		.global	txBuff
 1663              		.global	adc1Val
 1664              		.global	Ramp
 1665              		.global	huart2
 1666              		.global	htim2
 1667              		.global	hdma_dac1
 1668              		.global	hdac
 1669              		.global	hdma_adc2
 1670              		.global	hadc2
 1671              		.global	hdma_adc1
 1672              		.global	hadc1
 1673              		.section	.bss.Ramp,"aw",%nobits
 1674              		.align	2
 1677              	Ramp:
 1678 0000 00000000 		.space	8192
 1678      00000000 
 1678      00000000 
 1678      00000000 
 1678      00000000 
 1679              		.section	.bss.adc1FullReady,"aw",%nobits
 1680              		.set	.LANCHOR8,. + 0
 1683              	adc1FullReady:
 1684 0000 00       		.space	1
 1685              		.section	.bss.adc1HalfReady,"aw",%nobits
 1686              		.set	.LANCHOR7,. + 0
 1689              	adc1HalfReady:
 1690 0000 00       		.space	1
 1691              		.section	.bss.adc1Val,"aw",%nobits
 1692              		.align	2
 1695              	adc1Val:
ARM GAS  /tmp/cc27GeAc.s 			page 51


 1696 0000 00000000 		.space	16384
 1696      00000000 
 1696      00000000 
 1696      00000000 
 1696      00000000 
 1697              		.section	.bss.adc2FullReady,"aw",%nobits
 1698              		.set	.LANCHOR10,. + 0
 1701              	adc2FullReady:
 1702 0000 00       		.space	1
 1703              		.section	.bss.adc2HalfReady,"aw",%nobits
 1704              		.set	.LANCHOR9,. + 0
 1707              	adc2HalfReady:
 1708 0000 00       		.space	1
 1709              		.section	.bss.adc2Val,"aw",%nobits
 1710              		.align	2
 1713              	adc2Val:
 1714 0000 00000000 		.space	16384
 1714      00000000 
 1714      00000000 
 1714      00000000 
 1714      00000000 
 1715              		.section	.bss.avg,"aw",%nobits
 1716              		.align	2
 1719              	avg:
 1720 0000 00000000 		.space	16384
 1720      00000000 
 1720      00000000 
 1720      00000000 
 1720      00000000 
 1721              		.section	.bss.hadc1,"aw",%nobits
 1722              		.align	2
 1723              		.set	.LANCHOR0,. + 0
 1726              	hadc1:
 1727 0000 00000000 		.space	72
 1727      00000000 
 1727      00000000 
 1727      00000000 
 1727      00000000 
 1728              		.section	.bss.hadc2,"aw",%nobits
 1729              		.align	2
 1730              		.set	.LANCHOR1,. + 0
 1733              	hadc2:
 1734 0000 00000000 		.space	72
 1734      00000000 
 1734      00000000 
 1734      00000000 
 1734      00000000 
 1735              		.section	.bss.hdac,"aw",%nobits
 1736              		.align	2
 1737              		.set	.LANCHOR3,. + 0
 1740              	hdac:
 1741 0000 00000000 		.space	20
 1741      00000000 
 1741      00000000 
 1741      00000000 
 1741      00000000 
 1742              		.section	.bss.hdma_adc1,"aw",%nobits
ARM GAS  /tmp/cc27GeAc.s 			page 52


 1743              		.align	2
 1746              	hdma_adc1:
 1747 0000 00000000 		.space	96
 1747      00000000 
 1747      00000000 
 1747      00000000 
 1747      00000000 
 1748              		.section	.bss.hdma_adc2,"aw",%nobits
 1749              		.align	2
 1752              	hdma_adc2:
 1753 0000 00000000 		.space	96
 1753      00000000 
 1753      00000000 
 1753      00000000 
 1753      00000000 
 1754              		.section	.bss.hdma_dac1,"aw",%nobits
 1755              		.align	2
 1758              	hdma_dac1:
 1759 0000 00000000 		.space	96
 1759      00000000 
 1759      00000000 
 1759      00000000 
 1759      00000000 
 1760              		.section	.bss.htim2,"aw",%nobits
 1761              		.align	2
 1762              		.set	.LANCHOR4,. + 0
 1765              	htim2:
 1766 0000 00000000 		.space	72
 1766      00000000 
 1766      00000000 
 1766      00000000 
 1766      00000000 
 1767              		.section	.bss.huart2,"aw",%nobits
 1768              		.align	2
 1769              		.set	.LANCHOR2,. + 0
 1772              	huart2:
 1773 0000 00000000 		.space	68
 1773      00000000 
 1773      00000000 
 1773      00000000 
 1773      00000000 
 1774              		.section	.bss.nAvg,"aw",%nobits
 1775              		.align	1
 1776              		.set	.LANCHOR11,. + 0
 1779              	nAvg:
 1780 0000 0000     		.space	2
 1781              		.section	.bss.outBuff,"aw",%nobits
 1782              		.align	2
 1785              	outBuff:
 1786 0000 00000000 		.space	80
 1786      00000000 
 1786      00000000 
 1786      00000000 
 1786      00000000 
 1787              		.section	.bss.rampMin,"aw",%nobits
 1788              		.align	1
 1789              		.set	.LANCHOR6,. + 0
ARM GAS  /tmp/cc27GeAc.s 			page 53


 1792              	rampMin:
 1793 0000 0000     		.space	2
 1794              		.section	.bss.txBuff,"aw",%nobits
 1795              		.align	2
 1798              	txBuff:
 1799 0000 00000000 		.space	8192
 1799      00000000 
 1799      00000000 
 1799      00000000 
 1799      00000000 
 1800              		.section	.data.rampMax,"aw"
 1801              		.align	1
 1802              		.set	.LANCHOR5,. + 0
 1805              	rampMax:
 1806 0000 FF0F     		.short	4095
 1807              		.text
 1808              	.Letext0:
 1809              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 1810              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1811              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1812              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1813              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1814              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1815              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1816              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1817              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1818              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dac.h"
 1819              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1820              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1821              		.file 15 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1822              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1823              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1824              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr_ex.h"
 1825              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1826              		.file 20 "<built-in>"
ARM GAS  /tmp/cc27GeAc.s 			page 54


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc27GeAc.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc27GeAc.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc27GeAc.s:162    .text.MX_GPIO_Init:000000000000009c $d
     /tmp/cc27GeAc.s:169    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/cc27GeAc.s:175    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/cc27GeAc.s:259    .text.MX_DMA_Init:0000000000000064 $d
     /tmp/cc27GeAc.s:264    .text.buildRamp:0000000000000000 $t
     /tmp/cc27GeAc.s:271    .text.buildRamp:0000000000000000 buildRamp
     /tmp/cc27GeAc.s:335    .text.Error_Handler:0000000000000000 $t
     /tmp/cc27GeAc.s:342    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc27GeAc.s:374    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/cc27GeAc.s:380    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/cc27GeAc.s:484    .text.MX_ADC1_Init:0000000000000068 $d
     /tmp/cc27GeAc.s:490    .text.MX_ADC2_Init:0000000000000000 $t
     /tmp/cc27GeAc.s:496    .text.MX_ADC2_Init:0000000000000000 MX_ADC2_Init
     /tmp/cc27GeAc.s:621    .text.MX_ADC2_Init:0000000000000080 $d
     /tmp/cc27GeAc.s:627    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/cc27GeAc.s:633    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/cc27GeAc.s:687    .text.MX_USART2_UART_Init:000000000000002c $d
     /tmp/cc27GeAc.s:693    .text.MX_DAC_Init:0000000000000000 $t
     /tmp/cc27GeAc.s:699    .text.MX_DAC_Init:0000000000000000 MX_DAC_Init
     /tmp/cc27GeAc.s:760    .text.MX_DAC_Init:0000000000000038 $d
     /tmp/cc27GeAc.s:766    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/cc27GeAc.s:772    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/cc27GeAc.s:926    .text.MX_TIM2_Init:0000000000000098 $d
     /tmp/cc27GeAc.s:932    .text.SystemClockHSE_Config:0000000000000000 $t
     /tmp/cc27GeAc.s:939    .text.SystemClockHSE_Config:0000000000000000 SystemClockHSE_Config
     /tmp/cc27GeAc.s:1133   .text.SystemClockHSE_Config:00000000000000c0 $d
     /tmp/cc27GeAc.s:1139   .text.main:0000000000000000 $t
     /tmp/cc27GeAc.s:1146   .text.main:0000000000000000 main
     /tmp/cc27GeAc.s:1365   .text.main:000000000000010c $d
     /tmp/cc27GeAc.s:1677   .bss.Ramp:0000000000000000 Ramp
     /tmp/cc27GeAc.s:1719   .bss.avg:0000000000000000 avg
     /tmp/cc27GeAc.s:1695   .bss.adc1Val:0000000000000000 adc1Val
     /tmp/cc27GeAc.s:1713   .bss.adc2Val:0000000000000000 adc2Val
     /tmp/cc27GeAc.s:1385   .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc27GeAc.s:1392   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc27GeAc.s:1539   .text.SystemClock_Config:000000000000009c $d
     /tmp/cc27GeAc.s:1545   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/cc27GeAc.s:1552   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/cc27GeAc.s:1591   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000020 $d
     /tmp/cc27GeAc.s:1599   .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/cc27GeAc.s:1606   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/cc27GeAc.s:1645   .text.HAL_ADC_ConvCpltCallback:0000000000000020 $d
     /tmp/cc27GeAc.s:1785   .bss.outBuff:0000000000000000 outBuff
     /tmp/cc27GeAc.s:1701   .bss.adc2FullReady:0000000000000000 adc2FullReady
     /tmp/cc27GeAc.s:1707   .bss.adc2HalfReady:0000000000000000 adc2HalfReady
     /tmp/cc27GeAc.s:1683   .bss.adc1FullReady:0000000000000000 adc1FullReady
     /tmp/cc27GeAc.s:1689   .bss.adc1HalfReady:0000000000000000 adc1HalfReady
     /tmp/cc27GeAc.s:1805   .data.rampMax:0000000000000000 rampMax
     /tmp/cc27GeAc.s:1792   .bss.rampMin:0000000000000000 rampMin
     /tmp/cc27GeAc.s:1779   .bss.nAvg:0000000000000000 nAvg
     /tmp/cc27GeAc.s:1798   .bss.txBuff:0000000000000000 txBuff
     /tmp/cc27GeAc.s:1772   .bss.huart2:0000000000000000 huart2
     /tmp/cc27GeAc.s:1765   .bss.htim2:0000000000000000 htim2
ARM GAS  /tmp/cc27GeAc.s 			page 55


     /tmp/cc27GeAc.s:1758   .bss.hdma_dac1:0000000000000000 hdma_dac1
     /tmp/cc27GeAc.s:1740   .bss.hdac:0000000000000000 hdac
     /tmp/cc27GeAc.s:1752   .bss.hdma_adc2:0000000000000000 hdma_adc2
     /tmp/cc27GeAc.s:1733   .bss.hadc2:0000000000000000 hadc2
     /tmp/cc27GeAc.s:1746   .bss.hdma_adc1:0000000000000000 hdma_adc1
     /tmp/cc27GeAc.s:1726   .bss.hadc1:0000000000000000 hadc1
     /tmp/cc27GeAc.s:1674   .bss.Ramp:0000000000000000 $d
     /tmp/cc27GeAc.s:1684   .bss.adc1FullReady:0000000000000000 $d
     /tmp/cc27GeAc.s:1690   .bss.adc1HalfReady:0000000000000000 $d
     /tmp/cc27GeAc.s:1692   .bss.adc1Val:0000000000000000 $d
     /tmp/cc27GeAc.s:1702   .bss.adc2FullReady:0000000000000000 $d
     /tmp/cc27GeAc.s:1708   .bss.adc2HalfReady:0000000000000000 $d
     /tmp/cc27GeAc.s:1710   .bss.adc2Val:0000000000000000 $d
     /tmp/cc27GeAc.s:1716   .bss.avg:0000000000000000 $d
     /tmp/cc27GeAc.s:1722   .bss.hadc1:0000000000000000 $d
     /tmp/cc27GeAc.s:1729   .bss.hadc2:0000000000000000 $d
     /tmp/cc27GeAc.s:1736   .bss.hdac:0000000000000000 $d
     /tmp/cc27GeAc.s:1743   .bss.hdma_adc1:0000000000000000 $d
     /tmp/cc27GeAc.s:1749   .bss.hdma_adc2:0000000000000000 $d
     /tmp/cc27GeAc.s:1755   .bss.hdma_dac1:0000000000000000 $d
     /tmp/cc27GeAc.s:1761   .bss.htim2:0000000000000000 $d
     /tmp/cc27GeAc.s:1768   .bss.huart2:0000000000000000 $d
     /tmp/cc27GeAc.s:1775   .bss.nAvg:0000000000000000 $d
     /tmp/cc27GeAc.s:1782   .bss.outBuff:0000000000000000 $d
     /tmp/cc27GeAc.s:1788   .bss.rampMin:0000000000000000 $d
     /tmp/cc27GeAc.s:1795   .bss.txBuff:0000000000000000 $d
     /tmp/cc27GeAc.s:1801   .data.rampMax:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_UART_Init
HAL_DAC_Init
HAL_DAC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
SystemCoreClock
HAL_RCC_ClockConfig
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
memset
HAL_Init
HAL_DAC_Start_DMA
HAL_ADC_Start_DMA
HAL_TIM_Base_Start
HAL_ADC_Start_IT
HAL_GPIO_TogglePin
