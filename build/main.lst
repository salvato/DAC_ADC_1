ARM GAS  /tmp/cc3ZTMoH.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB246:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** #include "main.h"
   2:Core/Src/main.c **** #include <string.h>
   3:Core/Src/main.c **** #include <stdio.h>
   4:Core/Src/main.c **** 
   5:Core/Src/main.c **** ADC_HandleTypeDef  hadc1;
   6:Core/Src/main.c **** DMA_HandleTypeDef  hdma_adc1;
   7:Core/Src/main.c **** DAC_HandleTypeDef  hdac;
   8:Core/Src/main.c **** DMA_HandleTypeDef  hdma_dac1;
   9:Core/Src/main.c **** TIM_HandleTypeDef  htim2;
  10:Core/Src/main.c **** UART_HandleTypeDef huart2;
  11:Core/Src/main.c **** 
  12:Core/Src/main.c **** void SystemClock_Config(void);
  13:Core/Src/main.c **** static void MX_GPIO_Init(void);
  14:Core/Src/main.c **** static void MX_DMA_Init(void);
  15:Core/Src/main.c **** static void MX_ADC1_Init(void);
  16:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  17:Core/Src/main.c **** static void MX_DAC_Init(void);
  18:Core/Src/main.c **** static void MX_TIM2_Init(void);
  19:Core/Src/main.c **** 
  20:Core/Src/main.c **** 
  21:Core/Src/main.c **** //#define DEBUG        // Define this if debugging with a LED connected to DAC Out
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** #ifdef DEBUG
  24:Core/Src/main.c ****   #define RAMP_FREQUENCY 1 // Hz
  25:Core/Src/main.c **** #else
  26:Core/Src/main.c ****   #define RAMP_FREQUENCY 20 // Hz
  27:Core/Src/main.c **** #endif
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** #define DAC_BUFFERED
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** typedef uint8_t bool;
ARM GAS  /tmp/cc3ZTMoH.s 			page 2


  32:Core/Src/main.c **** #define false 0
  33:Core/Src/main.c **** #define true  !false
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** #define NS 4096
  36:Core/Src/main.c **** uint16_t Wave_LUT[NS];
  37:Core/Src/main.c **** uint16_t adc_val[2*NS];
  38:Core/Src/main.c **** uint16_t txBuff[NS];
  39:Core/Src/main.c **** uint16_t rampMin = 0;
  40:Core/Src/main.c **** uint16_t rampMax = 4095;
  41:Core/Src/main.c **** __IO bool ready_1_half=false;
  42:Core/Src/main.c **** __IO bool ready_2_half=false;
  43:Core/Src/main.c **** char buf[80];
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** void
  47:Core/Src/main.c **** buildRamp(int16_t np, uint16_t min, uint16_t max, uint16_t* pRamp) {
  48:Core/Src/main.c ****     float factor = (float)(max-min)/(float)np;
  49:Core/Src/main.c ****     for(int16_t i=0; i<np; i++) {
  50:Core/Src/main.c ****         pRamp[i] = (uint16_t)(min+factor*i);
  51:Core/Src/main.c ****     }
  52:Core/Src/main.c **** }
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** // ADC1 In0 ==> PA0
  56:Core/Src/main.c **** // DAC  Out ==> PA4
  57:Core/Src/main.c **** int 
  58:Core/Src/main.c **** main(void) {
  59:Core/Src/main.c ****     #ifdef DEBUG
  60:Core/Src/main.c ****         buildRamp(NS, rampMin, rampMax, Wave_LUT);
  61:Core/Src/main.c ****     #else
  62:Core/Src/main.c ****         buildRamp(NS, rampMin, rampMax, Wave_LUT);
  63:Core/Src/main.c ****     #endif
  64:Core/Src/main.c ****     ready_1_half = false;
  65:Core/Src/main.c ****     ready_2_half = false;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c ****     HAL_Init();
  68:Core/Src/main.c ****     SystemClock_Config();
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****     MX_GPIO_Init();
  71:Core/Src/main.c ****     MX_DMA_Init();
  72:Core/Src/main.c ****     MX_ADC1_Init();
  73:Core/Src/main.c ****     MX_USART2_UART_Init();
  74:Core/Src/main.c ****     MX_DAC_Init();
  75:Core/Src/main.c ****     MX_TIM2_Init();
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****     // uint8_t tx_buffer[5] = "hello\r\n";
  78:Core/Src/main.c ****     // HAL_UART_Transmit(&huart2, tx_buffer, sizeof(tx_buffer), 10);
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****     if(HAL_DAC_Start_DMA(&hdac,
  81:Core/Src/main.c ****                          DAC_CHANNEL_1, 
  82:Core/Src/main.c ****                          (uint32_t*)Wave_LUT, 
  83:Core/Src/main.c ****                          NS, 
  84:Core/Src/main.c ****                          DAC_ALIGN_12B_R))
  85:Core/Src/main.c ****         Error_Handler(); 
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****     if(HAL_ADC_Start_DMA(&hadc1,
  88:Core/Src/main.c ****                          (uint32_t*)&adc_val,
ARM GAS  /tmp/cc3ZTMoH.s 			page 3


  89:Core/Src/main.c ****                          2*NS))
  90:Core/Src/main.c ****         Error_Handler(); 
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****     if(HAL_TIM_Base_Start(&htim2))
  93:Core/Src/main.c ****         Error_Handler();
  94:Core/Src/main.c ****     
  95:Core/Src/main.c ****     // start pwm generation (is This needed ?)
  96:Core/Src/main.c ****     if(HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1))
  97:Core/Src/main.c ****         Error_Handler();
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****     while (1) {
 100:Core/Src/main.c ****         if(ready_1_half) {
 101:Core/Src/main.c ****             ready_1_half = false;
 102:Core/Src/main.c ****             HAL_GPIO_TogglePin (LD2_GPIO_Port, LD2_Pin);
 103:Core/Src/main.c ****             memcpy(txBuff, adc_val, NS*sizeof(*adc_val));
 104:Core/Src/main.c ****         }
 105:Core/Src/main.c ****         if(ready_2_half) {
 106:Core/Src/main.c ****             ready_2_half = false;
 107:Core/Src/main.c ****             HAL_GPIO_TogglePin (LD2_GPIO_Port, LD2_Pin);
 108:Core/Src/main.c ****             memcpy(txBuff, &adc_val[NS], NS*sizeof(*adc_val));
 109:Core/Src/main.c ****             // for(int i=0; i<NS; i++) {
 110:Core/Src/main.c ****             //     sprintf(buf, "buf[%d]=%d\n", i, txBuff[i]);
 111:Core/Src/main.c ****             //     HAL_UART_Transmit(&huart2, (uint8_t*)buf, strlen(buf), 10);
 112:Core/Src/main.c ****             // }
 113:Core/Src/main.c ****             // while(1);
 114:Core/Src/main.c ****         }
 115:Core/Src/main.c ****     }
 116:Core/Src/main.c **** }
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** /*
 119:Core/Src/main.c **** void
 120:Core/Src/main.c **** SystemClock_Config(void) {
 121:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 122:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   // Configure the main internal regulator output voltage
 125:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 127:Core/Src/main.c ****   // Initializes the RCC Oscillators according to the specified parameters
 128:Core/Src/main.c ****   // in the RCC_OscInitTypeDef structure.
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType      = RCC_OSCILLATORTYPE_HSI;
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSIState            = RCC_HSI_ON;
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState        = RCC_PLL_ON;
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource       = RCC_PLLSOURCE_HSI;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM            = 16;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN            = 360;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP            = RCC_PLLP_DIV2;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ            = 7;
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR            = 6;
 140:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 141:Core/Src/main.c ****     Error_Handler();
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   // Activate the Over-Drive mode
 145:Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK) {
ARM GAS  /tmp/cc3ZTMoH.s 			page 4


 146:Core/Src/main.c ****     Error_Handler();
 147:Core/Src/main.c ****   }
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   // Initializes the CPU, AHB and APB buses clocks
 150:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType      = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK|
 151:Core/Src/main.c ****                                      RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 152:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource   = RCC_SYSCLKSOURCE_PLLCLK;
 153:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider  = RCC_SYSCLK_DIV1;
 154:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK) {
 158:Core/Src/main.c ****     Error_Handler();
 159:Core/Src/main.c ****   }
 160:Core/Src/main.c **** }
 161:Core/Src/main.c **** */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** void 
 165:Core/Src/main.c **** SystemClock_Config(void) {
 166:Core/Src/main.c ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 167:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****     __HAL_RCC_PWR_CLK_ENABLE();
 170:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****     RCC_OscInitStruct.OscillatorType      = RCC_OSCILLATORTYPE_HSI;
 173:Core/Src/main.c ****     RCC_OscInitStruct.HSIState            = RCC_HSI_ON;
 174:Core/Src/main.c ****     RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 175:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState        = RCC_PLL_ON;
 176:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource       = RCC_PLLSOURCE_HSI;
 177:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM            = 16;
 178:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN            = 336;
 179:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP            = RCC_PLLP_DIV4;
 180:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ            = 2;
 181:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLR            = 2;
 182:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 183:Core/Src/main.c ****         Error_Handler();
 184:Core/Src/main.c ****     }
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****     RCC_ClkInitStruct.ClockType      = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK|
 187:Core/Src/main.c ****                                        RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 188:Core/Src/main.c ****     RCC_ClkInitStruct.SYSCLKSource   = RCC_SYSCLKSOURCE_PLLCLK;
 189:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider  = RCC_SYSCLK_DIV1;
 190:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 191:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****     if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK) {
 194:Core/Src/main.c ****         Error_Handler();
 195:Core/Src/main.c ****     }
 196:Core/Src/main.c **** }
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** static void
 200:Core/Src/main.c **** MX_ADC1_Init(void) {
 201:Core/Src/main.c ****     ADC_ChannelConfTypeDef sConfig = {0};
 202:Core/Src/main.c **** 
ARM GAS  /tmp/cc3ZTMoH.s 			page 5


 203:Core/Src/main.c ****     hadc1.Instance = ADC1;
 204:Core/Src/main.c ****     hadc1.Init.ClockPrescaler        = ADC_CLOCK_SYNC_PCLK_DIV4;
 205:Core/Src/main.c ****     hadc1.Init.Resolution            = ADC_RESOLUTION_12B;
 206:Core/Src/main.c ****     hadc1.Init.ScanConvMode          = DISABLE;
 207:Core/Src/main.c ****     hadc1.Init.ContinuousConvMode    = DISABLE;
 208:Core/Src/main.c ****     hadc1.Init.DiscontinuousConvMode = DISABLE;
 209:Core/Src/main.c ****     hadc1.Init.ExternalTrigConvEdge  = ADC_EXTERNALTRIGCONVEDGE_RISING;
 210:Core/Src/main.c ****     hadc1.Init.ExternalTrigConv      = ADC_EXTERNALTRIGCONV_T2_TRGO;
 211:Core/Src/main.c ****     hadc1.Init.DataAlign             = ADC_DATAALIGN_RIGHT;
 212:Core/Src/main.c ****     hadc1.Init.NbrOfConversion       = 1;
 213:Core/Src/main.c ****     hadc1.Init.DMAContinuousRequests = ENABLE;
 214:Core/Src/main.c ****     hadc1.Init.EOCSelection          = ADC_EOC_SINGLE_CONV;
 215:Core/Src/main.c ****     if (HAL_ADC_Init(&hadc1) != HAL_OK) {
 216:Core/Src/main.c ****         Error_Handler();
 217:Core/Src/main.c ****     }
 218:Core/Src/main.c ****     // The total conversion time is calculated as follows:
 219:Core/Src/main.c ****     // Tconv = ADC_SAMPLETIME + 12 cycles
 220:Core/Src/main.c ****     sConfig.Channel      = ADC_CHANNEL_0;
 221:Core/Src/main.c ****     sConfig.Rank         = 1;
 222:Core/Src/main.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 223:Core/Src/main.c ****     if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK) {
 224:Core/Src/main.c ****         Error_Handler();
 225:Core/Src/main.c ****     }
 226:Core/Src/main.c **** }
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** static void
 230:Core/Src/main.c **** MX_DAC_Init(void) {
 231:Core/Src/main.c ****     DAC_ChannelConfTypeDef sConfig = {0};
 232:Core/Src/main.c ****     hdac.Instance = DAC;
 233:Core/Src/main.c ****     if (HAL_DAC_Init(&hdac) != HAL_OK) {
 234:Core/Src/main.c ****         Error_Handler();
 235:Core/Src/main.c ****     }
 236:Core/Src/main.c ****     sConfig.DAC_Trigger          = DAC_TRIGGER_T2_TRGO;
 237:Core/Src/main.c ****     #ifdef DAC_BUFFERED
 238:Core/Src/main.c ****         sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 239:Core/Src/main.c ****     #else
 240:Core/Src/main.c ****         sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_DISABLE;
 241:Core/Src/main.c ****     #endif
 242:Core/Src/main.c ****     if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_1) != HAL_OK) {
 243:Core/Src/main.c ****         Error_Handler();
 244:Core/Src/main.c ****     }
 245:Core/Src/main.c **** }
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** 
 248:Core/Src/main.c **** static void
 249:Core/Src/main.c **** MX_TIM2_Init(void) {
 250:Core/Src/main.c ****     uint32_t periodValue = (uint32_t)((SystemCoreClock)/(RAMP_FREQUENCY*NS));
 251:Core/Src/main.c ****     if(periodValue < 2) {
 252:Core/Src/main.c ****         Error_Handler();
 253:Core/Src/main.c ****     }
 254:Core/Src/main.c ****     periodValue -= 1;
 255:Core/Src/main.c ****     uint32_t prescalerValue = 0;
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****     TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 258:Core/Src/main.c ****     TIM_MasterConfigTypeDef sMasterConfig = {0};
 259:Core/Src/main.c ****     TIM_OC_InitTypeDef sConfigOC = {0};
ARM GAS  /tmp/cc3ZTMoH.s 			page 6


 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****     htim2.Instance = TIM2;
 262:Core/Src/main.c ****     htim2.Init.Prescaler         = prescalerValue;
 263:Core/Src/main.c ****     htim2.Init.CounterMode       = TIM_COUNTERMODE_UP;
 264:Core/Src/main.c ****     htim2.Init.Period            = periodValue;
 265:Core/Src/main.c ****     htim2.Init.ClockDivision     = TIM_CLOCKDIVISION_DIV1;
 266:Core/Src/main.c ****     htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 267:Core/Src/main.c ****     if (HAL_TIM_Base_Init(&htim2) != HAL_OK) {
 268:Core/Src/main.c ****         Error_Handler();
 269:Core/Src/main.c ****     }
 270:Core/Src/main.c ****     sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 271:Core/Src/main.c ****     if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK) {
 272:Core/Src/main.c ****         Error_Handler();
 273:Core/Src/main.c ****     }
 274:Core/Src/main.c ****     // Serve ?
 275:Core/Src/main.c ****     // if (HAL_TIM_PWM_Init(&htim2) != HAL_OK) {
 276:Core/Src/main.c ****     //     Error_Handler();
 277:Core/Src/main.c ****     // }
 278:Core/Src/main.c ****     sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 279:Core/Src/main.c ****     sMasterConfig.MasterSlaveMode     = TIM_MASTERSLAVEMODE_DISABLE;
 280:Core/Src/main.c ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK) {
 281:Core/Src/main.c ****         Error_Handler();
 282:Core/Src/main.c ****     }
 283:Core/Src/main.c ****     sConfigOC.OCMode     = TIM_OCMODE_PWM1;
 284:Core/Src/main.c ****     sConfigOC.Pulse      = 0;
 285:Core/Src/main.c ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 286:Core/Src/main.c ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 287:Core/Src/main.c ****     if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
 288:Core/Src/main.c ****         Error_Handler();
 289:Core/Src/main.c ****     }
 290:Core/Src/main.c **** }
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** static void 
 294:Core/Src/main.c **** MX_USART2_UART_Init(void) {
 295:Core/Src/main.c ****     huart2.Instance = USART2;
 296:Core/Src/main.c ****     huart2.Init.BaudRate     = 115200;
 297:Core/Src/main.c ****     huart2.Init.WordLength   = UART_WORDLENGTH_8B;
 298:Core/Src/main.c ****     huart2.Init.StopBits     = UART_STOPBITS_1;
 299:Core/Src/main.c ****     huart2.Init.Parity       = UART_PARITY_NONE;
 300:Core/Src/main.c ****     huart2.Init.Mode         = UART_MODE_TX_RX;
 301:Core/Src/main.c ****     huart2.Init.HwFlowCtl    = UART_HWCONTROL_NONE;
 302:Core/Src/main.c ****     huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 303:Core/Src/main.c ****     if (HAL_UART_Init(&huart2) != HAL_OK) {
 304:Core/Src/main.c ****         Error_Handler();
 305:Core/Src/main.c ****     }
 306:Core/Src/main.c **** }
 307:Core/Src/main.c **** 
 308:Core/Src/main.c **** 
 309:Core/Src/main.c **** static void 
 310:Core/Src/main.c **** MX_DMA_Init(void) {
 311:Core/Src/main.c ****     __HAL_RCC_DMA1_CLK_ENABLE(); // Used by DAC
 312:Core/Src/main.c ****     __HAL_RCC_DMA2_CLK_ENABLE(); // Used by ADC
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****     /* DMA1_Stream5_IRQn interrupt configuration */
 315:Core/Src/main.c ****     HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 316:Core/Src/main.c ****     HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
ARM GAS  /tmp/cc3ZTMoH.s 			page 7


 317:Core/Src/main.c ****     /* DMA2_Stream0_IRQn interrupt configuration */
 318:Core/Src/main.c ****     HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 319:Core/Src/main.c ****     HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 320:Core/Src/main.c **** }
 321:Core/Src/main.c **** 
 322:Core/Src/main.c **** 
 323:Core/Src/main.c **** static void
 324:Core/Src/main.c **** MX_GPIO_Init(void) {
  28              		.loc 1 324 20 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 8BB0     		sub	sp, sp, #44
  38              		.cfi_def_cfa_offset 56
 325:Core/Src/main.c ****     GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 325 5 view .LVU1
  40              		.loc 1 325 22 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0594     		str	r4, [sp, #20]
  43 0008 0694     		str	r4, [sp, #24]
  44 000a 0794     		str	r4, [sp, #28]
  45 000c 0894     		str	r4, [sp, #32]
  46 000e 0994     		str	r4, [sp, #36]
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
  47              		.loc 1 327 5 is_stmt 1 view .LVU3
  48              	.LBB4:
  49              		.loc 1 327 5 view .LVU4
  50 0010 0194     		str	r4, [sp, #4]
  51              		.loc 1 327 5 view .LVU5
  52 0012 224B     		ldr	r3, .L3
  53 0014 1A6B     		ldr	r2, [r3, #48]
  54 0016 42F00402 		orr	r2, r2, #4
  55 001a 1A63     		str	r2, [r3, #48]
  56              		.loc 1 327 5 view .LVU6
  57 001c 1A6B     		ldr	r2, [r3, #48]
  58 001e 02F00402 		and	r2, r2, #4
  59 0022 0192     		str	r2, [sp, #4]
  60              		.loc 1 327 5 view .LVU7
  61 0024 019A     		ldr	r2, [sp, #4]
  62              	.LBE4:
  63              		.loc 1 327 5 view .LVU8
 328:Core/Src/main.c ****     __HAL_RCC_GPIOH_CLK_ENABLE();
  64              		.loc 1 328 5 view .LVU9
  65              	.LBB5:
  66              		.loc 1 328 5 view .LVU10
  67 0026 0294     		str	r4, [sp, #8]
  68              		.loc 1 328 5 view .LVU11
  69 0028 1A6B     		ldr	r2, [r3, #48]
  70 002a 42F08002 		orr	r2, r2, #128
  71 002e 1A63     		str	r2, [r3, #48]
  72              		.loc 1 328 5 view .LVU12
ARM GAS  /tmp/cc3ZTMoH.s 			page 8


  73 0030 1A6B     		ldr	r2, [r3, #48]
  74 0032 02F08002 		and	r2, r2, #128
  75 0036 0292     		str	r2, [sp, #8]
  76              		.loc 1 328 5 view .LVU13
  77 0038 029A     		ldr	r2, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 328 5 view .LVU14
 329:Core/Src/main.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  80              		.loc 1 329 5 view .LVU15
  81              	.LBB6:
  82              		.loc 1 329 5 view .LVU16
  83 003a 0394     		str	r4, [sp, #12]
  84              		.loc 1 329 5 view .LVU17
  85 003c 1A6B     		ldr	r2, [r3, #48]
  86 003e 42F00102 		orr	r2, r2, #1
  87 0042 1A63     		str	r2, [r3, #48]
  88              		.loc 1 329 5 view .LVU18
  89 0044 1A6B     		ldr	r2, [r3, #48]
  90 0046 02F00102 		and	r2, r2, #1
  91 004a 0392     		str	r2, [sp, #12]
  92              		.loc 1 329 5 view .LVU19
  93 004c 039A     		ldr	r2, [sp, #12]
  94              	.LBE6:
  95              		.loc 1 329 5 view .LVU20
 330:Core/Src/main.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
  96              		.loc 1 330 5 view .LVU21
  97              	.LBB7:
  98              		.loc 1 330 5 view .LVU22
  99 004e 0494     		str	r4, [sp, #16]
 100              		.loc 1 330 5 view .LVU23
 101 0050 1A6B     		ldr	r2, [r3, #48]
 102 0052 42F00202 		orr	r2, r2, #2
 103 0056 1A63     		str	r2, [r3, #48]
 104              		.loc 1 330 5 view .LVU24
 105 0058 1B6B     		ldr	r3, [r3, #48]
 106 005a 03F00203 		and	r3, r3, #2
 107 005e 0493     		str	r3, [sp, #16]
 108              		.loc 1 330 5 view .LVU25
 109 0060 049B     		ldr	r3, [sp, #16]
 110              	.LBE7:
 111              		.loc 1 330 5 view .LVU26
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****     HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 112              		.loc 1 332 5 view .LVU27
 113 0062 0F4D     		ldr	r5, .L3+4
 114 0064 2246     		mov	r2, r4
 115 0066 2021     		movs	r1, #32
 116 0068 2846     		mov	r0, r5
 117 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 118              	.LVL0:
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****     GPIO_InitStruct.Pin  = B1_Pin;
 119              		.loc 1 334 5 view .LVU28
 120              		.loc 1 334 26 is_stmt 0 view .LVU29
 121 006e 4FF40053 		mov	r3, #8192
 122 0072 0593     		str	r3, [sp, #20]
 335:Core/Src/main.c ****     GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
ARM GAS  /tmp/cc3ZTMoH.s 			page 9


 123              		.loc 1 335 5 is_stmt 1 view .LVU30
 124              		.loc 1 335 26 is_stmt 0 view .LVU31
 125 0074 4FF40413 		mov	r3, #2162688
 126 0078 0693     		str	r3, [sp, #24]
 336:Core/Src/main.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 127              		.loc 1 336 5 is_stmt 1 view .LVU32
 128              		.loc 1 336 26 is_stmt 0 view .LVU33
 129 007a 0794     		str	r4, [sp, #28]
 337:Core/Src/main.c ****     HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 130              		.loc 1 337 5 is_stmt 1 view .LVU34
 131 007c 05A9     		add	r1, sp, #20
 132 007e 0948     		ldr	r0, .L3+8
 133 0080 FFF7FEFF 		bl	HAL_GPIO_Init
 134              	.LVL1:
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****     GPIO_InitStruct.Pin   = LD2_Pin;
 135              		.loc 1 339 5 view .LVU35
 136              		.loc 1 339 27 is_stmt 0 view .LVU36
 137 0084 2023     		movs	r3, #32
 138 0086 0593     		str	r3, [sp, #20]
 340:Core/Src/main.c ****     GPIO_InitStruct.Mode  = GPIO_MODE_OUTPUT_PP;
 139              		.loc 1 340 5 is_stmt 1 view .LVU37
 140              		.loc 1 340 27 is_stmt 0 view .LVU38
 141 0088 0123     		movs	r3, #1
 142 008a 0693     		str	r3, [sp, #24]
 341:Core/Src/main.c ****     GPIO_InitStruct.Pull  = GPIO_NOPULL;
 143              		.loc 1 341 5 is_stmt 1 view .LVU39
 144              		.loc 1 341 27 is_stmt 0 view .LVU40
 145 008c 0794     		str	r4, [sp, #28]
 342:Core/Src/main.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 146              		.loc 1 342 5 is_stmt 1 view .LVU41
 147              		.loc 1 342 27 is_stmt 0 view .LVU42
 148 008e 0894     		str	r4, [sp, #32]
 343:Core/Src/main.c ****     HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 149              		.loc 1 343 5 is_stmt 1 view .LVU43
 150 0090 05A9     		add	r1, sp, #20
 151 0092 2846     		mov	r0, r5
 152 0094 FFF7FEFF 		bl	HAL_GPIO_Init
 153              	.LVL2:
 344:Core/Src/main.c **** }
 154              		.loc 1 344 1 is_stmt 0 view .LVU44
 155 0098 0BB0     		add	sp, sp, #44
 156              		.cfi_def_cfa_offset 12
 157              		@ sp needed
 158 009a 30BD     		pop	{r4, r5, pc}
 159              	.L4:
 160              		.align	2
 161              	.L3:
 162 009c 00380240 		.word	1073887232
 163 00a0 00000240 		.word	1073872896
 164 00a4 00080240 		.word	1073874944
 165              		.cfi_endproc
 166              	.LFE246:
 168              		.section	.text.MX_DMA_Init,"ax",%progbits
 169              		.align	1
 170              		.syntax unified
 171              		.thumb
ARM GAS  /tmp/cc3ZTMoH.s 			page 10


 172              		.thumb_func
 173              		.fpu fpv4-sp-d16
 175              	MX_DMA_Init:
 176              	.LFB245:
 310:Core/Src/main.c ****     __HAL_RCC_DMA1_CLK_ENABLE(); // Used by DAC
 177              		.loc 1 310 19 is_stmt 1 view -0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 8
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181 0000 10B5     		push	{r4, lr}
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 4, -8
 184              		.cfi_offset 14, -4
 185 0002 82B0     		sub	sp, sp, #8
 186              		.cfi_def_cfa_offset 16
 311:Core/Src/main.c ****     __HAL_RCC_DMA2_CLK_ENABLE(); // Used by ADC
 187              		.loc 1 311 5 view .LVU46
 188              	.LBB8:
 311:Core/Src/main.c ****     __HAL_RCC_DMA2_CLK_ENABLE(); // Used by ADC
 189              		.loc 1 311 5 view .LVU47
 190 0004 0024     		movs	r4, #0
 191 0006 0094     		str	r4, [sp]
 311:Core/Src/main.c ****     __HAL_RCC_DMA2_CLK_ENABLE(); // Used by ADC
 192              		.loc 1 311 5 view .LVU48
 193 0008 124B     		ldr	r3, .L7
 194 000a 1A6B     		ldr	r2, [r3, #48]
 195 000c 42F40012 		orr	r2, r2, #2097152
 196 0010 1A63     		str	r2, [r3, #48]
 311:Core/Src/main.c ****     __HAL_RCC_DMA2_CLK_ENABLE(); // Used by ADC
 197              		.loc 1 311 5 view .LVU49
 198 0012 1A6B     		ldr	r2, [r3, #48]
 199 0014 02F40012 		and	r2, r2, #2097152
 200 0018 0092     		str	r2, [sp]
 311:Core/Src/main.c ****     __HAL_RCC_DMA2_CLK_ENABLE(); // Used by ADC
 201              		.loc 1 311 5 view .LVU50
 202 001a 009A     		ldr	r2, [sp]
 203              	.LBE8:
 311:Core/Src/main.c ****     __HAL_RCC_DMA2_CLK_ENABLE(); // Used by ADC
 204              		.loc 1 311 5 view .LVU51
 312:Core/Src/main.c **** 
 205              		.loc 1 312 5 view .LVU52
 206              	.LBB9:
 312:Core/Src/main.c **** 
 207              		.loc 1 312 5 view .LVU53
 208 001c 0194     		str	r4, [sp, #4]
 312:Core/Src/main.c **** 
 209              		.loc 1 312 5 view .LVU54
 210 001e 1A6B     		ldr	r2, [r3, #48]
 211 0020 42F48002 		orr	r2, r2, #4194304
 212 0024 1A63     		str	r2, [r3, #48]
 312:Core/Src/main.c **** 
 213              		.loc 1 312 5 view .LVU55
 214 0026 1B6B     		ldr	r3, [r3, #48]
 215 0028 03F48003 		and	r3, r3, #4194304
 216 002c 0193     		str	r3, [sp, #4]
 312:Core/Src/main.c **** 
 217              		.loc 1 312 5 view .LVU56
ARM GAS  /tmp/cc3ZTMoH.s 			page 11


 218 002e 019B     		ldr	r3, [sp, #4]
 219              	.LBE9:
 312:Core/Src/main.c **** 
 220              		.loc 1 312 5 view .LVU57
 315:Core/Src/main.c ****     HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 221              		.loc 1 315 5 view .LVU58
 222 0030 2246     		mov	r2, r4
 223 0032 2146     		mov	r1, r4
 224 0034 1020     		movs	r0, #16
 225 0036 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 226              	.LVL3:
 316:Core/Src/main.c ****     /* DMA2_Stream0_IRQn interrupt configuration */
 227              		.loc 1 316 5 view .LVU59
 228 003a 1020     		movs	r0, #16
 229 003c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 230              	.LVL4:
 318:Core/Src/main.c ****     HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 231              		.loc 1 318 5 view .LVU60
 232 0040 2246     		mov	r2, r4
 233 0042 2146     		mov	r1, r4
 234 0044 3820     		movs	r0, #56
 235 0046 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 236              	.LVL5:
 319:Core/Src/main.c **** }
 237              		.loc 1 319 5 view .LVU61
 238 004a 3820     		movs	r0, #56
 239 004c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 240              	.LVL6:
 320:Core/Src/main.c **** 
 241              		.loc 1 320 1 is_stmt 0 view .LVU62
 242 0050 02B0     		add	sp, sp, #8
 243              		.cfi_def_cfa_offset 8
 244              		@ sp needed
 245 0052 10BD     		pop	{r4, pc}
 246              	.L8:
 247              		.align	2
 248              	.L7:
 249 0054 00380240 		.word	1073887232
 250              		.cfi_endproc
 251              	.LFE245:
 253              		.section	.text.buildRamp,"ax",%progbits
 254              		.align	1
 255              		.global	buildRamp
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 259              		.fpu fpv4-sp-d16
 261              	buildRamp:
 262              	.LVL7:
 263              	.LFB238:
  47:Core/Src/main.c ****     float factor = (float)(max-min)/(float)np;
 264              		.loc 1 47 68 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		@ link register save eliminated.
  47:Core/Src/main.c ****     float factor = (float)(max-min)/(float)np;
ARM GAS  /tmp/cc3ZTMoH.s 			page 12


 269              		.loc 1 47 68 is_stmt 0 view .LVU64
 270 0000 06EE901A 		vmov	s13, r1	@ int
  48:Core/Src/main.c ****     for(int16_t i=0; i<np; i++) {
 271              		.loc 1 48 5 is_stmt 1 view .LVU65
  48:Core/Src/main.c ****     for(int16_t i=0; i<np; i++) {
 272              		.loc 1 48 31 is_stmt 0 view .LVU66
 273 0004 521A     		subs	r2, r2, r1
 274              	.LVL8:
  48:Core/Src/main.c ****     for(int16_t i=0; i<np; i++) {
 275              		.loc 1 48 20 view .LVU67
 276 0006 07EE902A 		vmov	s15, r2	@ int
 277 000a F8EEE77A 		vcvt.f32.s32	s15, s15
  48:Core/Src/main.c ****     for(int16_t i=0; i<np; i++) {
 278              		.loc 1 48 37 view .LVU68
 279 000e 07EE100A 		vmov	s14, r0	@ int
 280 0012 B8EEC77A 		vcvt.f32.s32	s14, s14
  48:Core/Src/main.c ****     for(int16_t i=0; i<np; i++) {
 281              		.loc 1 48 11 view .LVU69
 282 0016 87EE876A 		vdiv.f32	s12, s15, s14
 283              	.LVL9:
  49:Core/Src/main.c ****         pRamp[i] = (uint16_t)(min+factor*i);
 284              		.loc 1 49 5 is_stmt 1 view .LVU70
 285              	.LBB10:
  49:Core/Src/main.c ****         pRamp[i] = (uint16_t)(min+factor*i);
 286              		.loc 1 49 9 view .LVU71
  49:Core/Src/main.c ****         pRamp[i] = (uint16_t)(min+factor*i);
 287              		.loc 1 49 17 is_stmt 0 view .LVU72
 288 001a 0022     		movs	r2, #0
  49:Core/Src/main.c ****         pRamp[i] = (uint16_t)(min+factor*i);
 289              		.loc 1 49 5 view .LVU73
 290 001c 11E0     		b	.L10
 291              	.LVL10:
 292              	.L11:
  50:Core/Src/main.c ****     }
 293              		.loc 1 50 9 is_stmt 1 discriminator 3 view .LVU74
  50:Core/Src/main.c ****     }
 294              		.loc 1 50 41 is_stmt 0 discriminator 3 view .LVU75
 295 001e 07EE902A 		vmov	s15, r2	@ int
 296 0022 F8EEE77A 		vcvt.f32.s32	s15, s15
 297 0026 27EE867A 		vmul.f32	s14, s15, s12
  50:Core/Src/main.c ****     }
 298              		.loc 1 50 34 discriminator 3 view .LVU76
 299 002a F8EEE67A 		vcvt.f32.s32	s15, s13
 300 002e 77EE877A 		vadd.f32	s15, s15, s14
  50:Core/Src/main.c ****     }
 301              		.loc 1 50 20 discriminator 3 view .LVU77
 302 0032 FCEEE77A 		vcvt.u32.f32	s15, s15
  50:Core/Src/main.c ****     }
 303              		.loc 1 50 18 discriminator 3 view .LVU78
 304 0036 17EE901A 		vmov	r1, s15	@ int
 305 003a 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
  49:Core/Src/main.c ****         pRamp[i] = (uint16_t)(min+factor*i);
 306              		.loc 1 49 28 is_stmt 1 discriminator 3 view .LVU79
  49:Core/Src/main.c ****         pRamp[i] = (uint16_t)(min+factor*i);
 307              		.loc 1 49 29 is_stmt 0 discriminator 3 view .LVU80
 308 003e 0132     		adds	r2, r2, #1
 309              	.LVL11:
ARM GAS  /tmp/cc3ZTMoH.s 			page 13


  49:Core/Src/main.c ****         pRamp[i] = (uint16_t)(min+factor*i);
 310              		.loc 1 49 29 discriminator 3 view .LVU81
 311 0040 12B2     		sxth	r2, r2
 312              	.LVL12:
 313              	.L10:
  49:Core/Src/main.c ****         pRamp[i] = (uint16_t)(min+factor*i);
 314              		.loc 1 49 22 is_stmt 1 discriminator 1 view .LVU82
  49:Core/Src/main.c ****         pRamp[i] = (uint16_t)(min+factor*i);
 315              		.loc 1 49 5 is_stmt 0 discriminator 1 view .LVU83
 316 0042 8242     		cmp	r2, r0
 317 0044 EBDB     		blt	.L11
 318              	.LBE10:
  52:Core/Src/main.c **** 
 319              		.loc 1 52 1 view .LVU84
 320 0046 7047     		bx	lr
 321              		.cfi_endproc
 322              	.LFE238:
 324              		.section	.text.Error_Handler,"ax",%progbits
 325              		.align	1
 326              		.global	Error_Handler
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 330              		.fpu fpv4-sp-d16
 332              	Error_Handler:
 333              	.LFB247:
 345:Core/Src/main.c **** 
 346:Core/Src/main.c **** 
 347:Core/Src/main.c **** void 
 348:Core/Src/main.c **** Error_Handler(void) {
 334              		.loc 1 348 21 is_stmt 1 view -0
 335              		.cfi_startproc
 336              		@ Volatile: function does not return.
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              		@ link register save eliminated.
 349:Core/Src/main.c ****     __disable_irq();
 340              		.loc 1 349 5 view .LVU86
 341              	.LBB11:
 342              	.LBI11:
 343              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
ARM GAS  /tmp/cc3ZTMoH.s 			page 14


  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/cc3ZTMoH.s 			page 15


  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cc3ZTMoH.s 			page 16


 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 344              		.loc 2 140 27 view .LVU87
 345              	.LBB12:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 346              		.loc 2 142 3 view .LVU88
 347              		.syntax unified
 348              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 349 0000 72B6     		cpsid i
 350              	@ 0 "" 2
 351              		.thumb
 352              		.syntax unified
 353              	.L13:
 354              	.LBE12:
 355              	.LBE11:
 350:Core/Src/main.c ****     while (1) {
 356              		.loc 1 350 5 discriminator 1 view .LVU89
 351:Core/Src/main.c ****     }
 357              		.loc 1 351 5 discriminator 1 view .LVU90
 350:Core/Src/main.c ****     while (1) {
 358              		.loc 1 350 11 discriminator 1 view .LVU91
 359 0002 FEE7     		b	.L13
 360              		.cfi_endproc
 361              	.LFE247:
 363              		.section	.text.MX_ADC1_Init,"ax",%progbits
 364              		.align	1
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 368              		.fpu fpv4-sp-d16
 370              	MX_ADC1_Init:
 371              	.LFB241:
 200:Core/Src/main.c ****     ADC_ChannelConfTypeDef sConfig = {0};
 372              		.loc 1 200 20 view -0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 16
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376 0000 00B5     		push	{lr}
 377              		.cfi_def_cfa_offset 4
 378              		.cfi_offset 14, -4
 379 0002 85B0     		sub	sp, sp, #20
 380              		.cfi_def_cfa_offset 24
 201:Core/Src/main.c **** 
 381              		.loc 1 201 5 view .LVU93
 201:Core/Src/main.c **** 
 382              		.loc 1 201 28 is_stmt 0 view .LVU94
 383 0004 0023     		movs	r3, #0
 384 0006 0093     		str	r3, [sp]
ARM GAS  /tmp/cc3ZTMoH.s 			page 17


 385 0008 0193     		str	r3, [sp, #4]
 386 000a 0293     		str	r3, [sp, #8]
 387 000c 0393     		str	r3, [sp, #12]
 203:Core/Src/main.c ****     hadc1.Init.ClockPrescaler        = ADC_CLOCK_SYNC_PCLK_DIV4;
 388              		.loc 1 203 5 is_stmt 1 view .LVU95
 203:Core/Src/main.c ****     hadc1.Init.ClockPrescaler        = ADC_CLOCK_SYNC_PCLK_DIV4;
 389              		.loc 1 203 20 is_stmt 0 view .LVU96
 390 000e 1548     		ldr	r0, .L20
 391 0010 154A     		ldr	r2, .L20+4
 392 0012 0260     		str	r2, [r0]
 204:Core/Src/main.c ****     hadc1.Init.Resolution            = ADC_RESOLUTION_12B;
 393              		.loc 1 204 5 is_stmt 1 view .LVU97
 204:Core/Src/main.c ****     hadc1.Init.Resolution            = ADC_RESOLUTION_12B;
 394              		.loc 1 204 38 is_stmt 0 view .LVU98
 395 0014 4FF48032 		mov	r2, #65536
 396 0018 4260     		str	r2, [r0, #4]
 205:Core/Src/main.c ****     hadc1.Init.ScanConvMode          = DISABLE;
 397              		.loc 1 205 5 is_stmt 1 view .LVU99
 205:Core/Src/main.c ****     hadc1.Init.ScanConvMode          = DISABLE;
 398              		.loc 1 205 38 is_stmt 0 view .LVU100
 399 001a 8360     		str	r3, [r0, #8]
 206:Core/Src/main.c ****     hadc1.Init.ContinuousConvMode    = DISABLE;
 400              		.loc 1 206 5 is_stmt 1 view .LVU101
 206:Core/Src/main.c ****     hadc1.Init.ContinuousConvMode    = DISABLE;
 401              		.loc 1 206 38 is_stmt 0 view .LVU102
 402 001c 0361     		str	r3, [r0, #16]
 207:Core/Src/main.c ****     hadc1.Init.DiscontinuousConvMode = DISABLE;
 403              		.loc 1 207 5 is_stmt 1 view .LVU103
 207:Core/Src/main.c ****     hadc1.Init.DiscontinuousConvMode = DISABLE;
 404              		.loc 1 207 38 is_stmt 0 view .LVU104
 405 001e 0376     		strb	r3, [r0, #24]
 208:Core/Src/main.c ****     hadc1.Init.ExternalTrigConvEdge  = ADC_EXTERNALTRIGCONVEDGE_RISING;
 406              		.loc 1 208 5 is_stmt 1 view .LVU105
 208:Core/Src/main.c ****     hadc1.Init.ExternalTrigConvEdge  = ADC_EXTERNALTRIGCONVEDGE_RISING;
 407              		.loc 1 208 38 is_stmt 0 view .LVU106
 408 0020 80F82030 		strb	r3, [r0, #32]
 209:Core/Src/main.c ****     hadc1.Init.ExternalTrigConv      = ADC_EXTERNALTRIGCONV_T2_TRGO;
 409              		.loc 1 209 5 is_stmt 1 view .LVU107
 209:Core/Src/main.c ****     hadc1.Init.ExternalTrigConv      = ADC_EXTERNALTRIGCONV_T2_TRGO;
 410              		.loc 1 209 38 is_stmt 0 view .LVU108
 411 0024 4FF08052 		mov	r2, #268435456
 412 0028 C262     		str	r2, [r0, #44]
 210:Core/Src/main.c ****     hadc1.Init.DataAlign             = ADC_DATAALIGN_RIGHT;
 413              		.loc 1 210 5 is_stmt 1 view .LVU109
 210:Core/Src/main.c ****     hadc1.Init.DataAlign             = ADC_DATAALIGN_RIGHT;
 414              		.loc 1 210 38 is_stmt 0 view .LVU110
 415 002a 4FF0C062 		mov	r2, #100663296
 416 002e 8262     		str	r2, [r0, #40]
 211:Core/Src/main.c ****     hadc1.Init.NbrOfConversion       = 1;
 417              		.loc 1 211 5 is_stmt 1 view .LVU111
 211:Core/Src/main.c ****     hadc1.Init.NbrOfConversion       = 1;
 418              		.loc 1 211 38 is_stmt 0 view .LVU112
 419 0030 C360     		str	r3, [r0, #12]
 212:Core/Src/main.c ****     hadc1.Init.DMAContinuousRequests = ENABLE;
 420              		.loc 1 212 5 is_stmt 1 view .LVU113
 212:Core/Src/main.c ****     hadc1.Init.DMAContinuousRequests = ENABLE;
 421              		.loc 1 212 38 is_stmt 0 view .LVU114
ARM GAS  /tmp/cc3ZTMoH.s 			page 18


 422 0032 0123     		movs	r3, #1
 423 0034 C361     		str	r3, [r0, #28]
 213:Core/Src/main.c ****     hadc1.Init.EOCSelection          = ADC_EOC_SINGLE_CONV;
 424              		.loc 1 213 5 is_stmt 1 view .LVU115
 213:Core/Src/main.c ****     hadc1.Init.EOCSelection          = ADC_EOC_SINGLE_CONV;
 425              		.loc 1 213 38 is_stmt 0 view .LVU116
 426 0036 80F83030 		strb	r3, [r0, #48]
 214:Core/Src/main.c ****     if (HAL_ADC_Init(&hadc1) != HAL_OK) {
 427              		.loc 1 214 5 is_stmt 1 view .LVU117
 214:Core/Src/main.c ****     if (HAL_ADC_Init(&hadc1) != HAL_OK) {
 428              		.loc 1 214 38 is_stmt 0 view .LVU118
 429 003a 4361     		str	r3, [r0, #20]
 215:Core/Src/main.c ****         Error_Handler();
 430              		.loc 1 215 5 is_stmt 1 view .LVU119
 215:Core/Src/main.c ****         Error_Handler();
 431              		.loc 1 215 9 is_stmt 0 view .LVU120
 432 003c FFF7FEFF 		bl	HAL_ADC_Init
 433              	.LVL13:
 215:Core/Src/main.c ****         Error_Handler();
 434              		.loc 1 215 8 view .LVU121
 435 0040 60B9     		cbnz	r0, .L18
 220:Core/Src/main.c ****     sConfig.Rank         = 1;
 436              		.loc 1 220 5 is_stmt 1 view .LVU122
 220:Core/Src/main.c ****     sConfig.Rank         = 1;
 437              		.loc 1 220 26 is_stmt 0 view .LVU123
 438 0042 0023     		movs	r3, #0
 439 0044 0093     		str	r3, [sp]
 221:Core/Src/main.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 440              		.loc 1 221 5 is_stmt 1 view .LVU124
 221:Core/Src/main.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 441              		.loc 1 221 26 is_stmt 0 view .LVU125
 442 0046 0122     		movs	r2, #1
 443 0048 0192     		str	r2, [sp, #4]
 222:Core/Src/main.c ****     if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK) {
 444              		.loc 1 222 5 is_stmt 1 view .LVU126
 222:Core/Src/main.c ****     if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK) {
 445              		.loc 1 222 26 is_stmt 0 view .LVU127
 446 004a 0293     		str	r3, [sp, #8]
 223:Core/Src/main.c ****         Error_Handler();
 447              		.loc 1 223 5 is_stmt 1 view .LVU128
 223:Core/Src/main.c ****         Error_Handler();
 448              		.loc 1 223 9 is_stmt 0 view .LVU129
 449 004c 6946     		mov	r1, sp
 450 004e 0548     		ldr	r0, .L20
 451 0050 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 452              	.LVL14:
 223:Core/Src/main.c ****         Error_Handler();
 453              		.loc 1 223 8 view .LVU130
 454 0054 20B9     		cbnz	r0, .L19
 226:Core/Src/main.c **** 
 455              		.loc 1 226 1 view .LVU131
 456 0056 05B0     		add	sp, sp, #20
 457              		.cfi_remember_state
 458              		.cfi_def_cfa_offset 4
 459              		@ sp needed
 460 0058 5DF804FB 		ldr	pc, [sp], #4
 461              	.L18:
ARM GAS  /tmp/cc3ZTMoH.s 			page 19


 462              		.cfi_restore_state
 216:Core/Src/main.c ****     }
 463              		.loc 1 216 9 is_stmt 1 view .LVU132
 464 005c FFF7FEFF 		bl	Error_Handler
 465              	.LVL15:
 466              	.L19:
 224:Core/Src/main.c ****     }
 467              		.loc 1 224 9 view .LVU133
 468 0060 FFF7FEFF 		bl	Error_Handler
 469              	.LVL16:
 470              	.L21:
 471              		.align	2
 472              	.L20:
 473 0064 00000000 		.word	.LANCHOR0
 474 0068 00200140 		.word	1073815552
 475              		.cfi_endproc
 476              	.LFE241:
 478              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 479              		.align	1
 480              		.syntax unified
 481              		.thumb
 482              		.thumb_func
 483              		.fpu fpv4-sp-d16
 485              	MX_USART2_UART_Init:
 486              	.LFB244:
 294:Core/Src/main.c ****     huart2.Instance = USART2;
 487              		.loc 1 294 27 view -0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491 0000 08B5     		push	{r3, lr}
 492              		.cfi_def_cfa_offset 8
 493              		.cfi_offset 3, -8
 494              		.cfi_offset 14, -4
 295:Core/Src/main.c ****     huart2.Init.BaudRate     = 115200;
 495              		.loc 1 295 5 view .LVU135
 295:Core/Src/main.c ****     huart2.Init.BaudRate     = 115200;
 496              		.loc 1 295 21 is_stmt 0 view .LVU136
 497 0002 0A48     		ldr	r0, .L26
 498 0004 0A4B     		ldr	r3, .L26+4
 499 0006 0360     		str	r3, [r0]
 296:Core/Src/main.c ****     huart2.Init.WordLength   = UART_WORDLENGTH_8B;
 500              		.loc 1 296 5 is_stmt 1 view .LVU137
 296:Core/Src/main.c ****     huart2.Init.WordLength   = UART_WORDLENGTH_8B;
 501              		.loc 1 296 30 is_stmt 0 view .LVU138
 502 0008 4FF4E133 		mov	r3, #115200
 503 000c 4360     		str	r3, [r0, #4]
 297:Core/Src/main.c ****     huart2.Init.StopBits     = UART_STOPBITS_1;
 504              		.loc 1 297 5 is_stmt 1 view .LVU139
 297:Core/Src/main.c ****     huart2.Init.StopBits     = UART_STOPBITS_1;
 505              		.loc 1 297 30 is_stmt 0 view .LVU140
 506 000e 0023     		movs	r3, #0
 507 0010 8360     		str	r3, [r0, #8]
 298:Core/Src/main.c ****     huart2.Init.Parity       = UART_PARITY_NONE;
 508              		.loc 1 298 5 is_stmt 1 view .LVU141
 298:Core/Src/main.c ****     huart2.Init.Parity       = UART_PARITY_NONE;
 509              		.loc 1 298 30 is_stmt 0 view .LVU142
ARM GAS  /tmp/cc3ZTMoH.s 			page 20


 510 0012 C360     		str	r3, [r0, #12]
 299:Core/Src/main.c ****     huart2.Init.Mode         = UART_MODE_TX_RX;
 511              		.loc 1 299 5 is_stmt 1 view .LVU143
 299:Core/Src/main.c ****     huart2.Init.Mode         = UART_MODE_TX_RX;
 512              		.loc 1 299 30 is_stmt 0 view .LVU144
 513 0014 0361     		str	r3, [r0, #16]
 300:Core/Src/main.c ****     huart2.Init.HwFlowCtl    = UART_HWCONTROL_NONE;
 514              		.loc 1 300 5 is_stmt 1 view .LVU145
 300:Core/Src/main.c ****     huart2.Init.HwFlowCtl    = UART_HWCONTROL_NONE;
 515              		.loc 1 300 30 is_stmt 0 view .LVU146
 516 0016 0C22     		movs	r2, #12
 517 0018 4261     		str	r2, [r0, #20]
 301:Core/Src/main.c ****     huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 518              		.loc 1 301 5 is_stmt 1 view .LVU147
 301:Core/Src/main.c ****     huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 519              		.loc 1 301 30 is_stmt 0 view .LVU148
 520 001a 8361     		str	r3, [r0, #24]
 302:Core/Src/main.c ****     if (HAL_UART_Init(&huart2) != HAL_OK) {
 521              		.loc 1 302 5 is_stmt 1 view .LVU149
 302:Core/Src/main.c ****     if (HAL_UART_Init(&huart2) != HAL_OK) {
 522              		.loc 1 302 30 is_stmt 0 view .LVU150
 523 001c C361     		str	r3, [r0, #28]
 303:Core/Src/main.c ****         Error_Handler();
 524              		.loc 1 303 5 is_stmt 1 view .LVU151
 303:Core/Src/main.c ****         Error_Handler();
 525              		.loc 1 303 9 is_stmt 0 view .LVU152
 526 001e FFF7FEFF 		bl	HAL_UART_Init
 527              	.LVL17:
 303:Core/Src/main.c ****         Error_Handler();
 528              		.loc 1 303 8 view .LVU153
 529 0022 00B9     		cbnz	r0, .L25
 306:Core/Src/main.c **** 
 530              		.loc 1 306 1 view .LVU154
 531 0024 08BD     		pop	{r3, pc}
 532              	.L25:
 304:Core/Src/main.c ****     }
 533              		.loc 1 304 9 is_stmt 1 view .LVU155
 534 0026 FFF7FEFF 		bl	Error_Handler
 535              	.LVL18:
 536              	.L27:
 537 002a 00BF     		.align	2
 538              	.L26:
 539 002c 00000000 		.word	.LANCHOR1
 540 0030 00440040 		.word	1073759232
 541              		.cfi_endproc
 542              	.LFE244:
 544              		.section	.text.MX_DAC_Init,"ax",%progbits
 545              		.align	1
 546              		.syntax unified
 547              		.thumb
 548              		.thumb_func
 549              		.fpu fpv4-sp-d16
 551              	MX_DAC_Init:
 552              	.LFB242:
 230:Core/Src/main.c ****     DAC_ChannelConfTypeDef sConfig = {0};
 553              		.loc 1 230 19 view -0
 554              		.cfi_startproc
ARM GAS  /tmp/cc3ZTMoH.s 			page 21


 555              		@ args = 0, pretend = 0, frame = 8
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 557 0000 00B5     		push	{lr}
 558              		.cfi_def_cfa_offset 4
 559              		.cfi_offset 14, -4
 560 0002 83B0     		sub	sp, sp, #12
 561              		.cfi_def_cfa_offset 16
 231:Core/Src/main.c ****     hdac.Instance = DAC;
 562              		.loc 1 231 5 view .LVU157
 231:Core/Src/main.c ****     hdac.Instance = DAC;
 563              		.loc 1 231 28 is_stmt 0 view .LVU158
 564 0004 0023     		movs	r3, #0
 565 0006 0093     		str	r3, [sp]
 566 0008 0193     		str	r3, [sp, #4]
 232:Core/Src/main.c ****     if (HAL_DAC_Init(&hdac) != HAL_OK) {
 567              		.loc 1 232 5 is_stmt 1 view .LVU159
 232:Core/Src/main.c ****     if (HAL_DAC_Init(&hdac) != HAL_OK) {
 568              		.loc 1 232 19 is_stmt 0 view .LVU160
 569 000a 0B48     		ldr	r0, .L34
 570 000c 0B4B     		ldr	r3, .L34+4
 571 000e 0360     		str	r3, [r0]
 233:Core/Src/main.c ****         Error_Handler();
 572              		.loc 1 233 5 is_stmt 1 view .LVU161
 233:Core/Src/main.c ****         Error_Handler();
 573              		.loc 1 233 9 is_stmt 0 view .LVU162
 574 0010 FFF7FEFF 		bl	HAL_DAC_Init
 575              	.LVL19:
 233:Core/Src/main.c ****         Error_Handler();
 576              		.loc 1 233 8 view .LVU163
 577 0014 58B9     		cbnz	r0, .L32
 236:Core/Src/main.c ****     #ifdef DAC_BUFFERED
 578              		.loc 1 236 5 is_stmt 1 view .LVU164
 236:Core/Src/main.c ****     #ifdef DAC_BUFFERED
 579              		.loc 1 236 34 is_stmt 0 view .LVU165
 580 0016 2423     		movs	r3, #36
 581 0018 0093     		str	r3, [sp]
 238:Core/Src/main.c ****     #else
 582              		.loc 1 238 9 is_stmt 1 view .LVU166
 238:Core/Src/main.c ****     #else
 583              		.loc 1 238 34 is_stmt 0 view .LVU167
 584 001a 0022     		movs	r2, #0
 585 001c 0192     		str	r2, [sp, #4]
 242:Core/Src/main.c ****         Error_Handler();
 586              		.loc 1 242 5 is_stmt 1 view .LVU168
 242:Core/Src/main.c ****         Error_Handler();
 587              		.loc 1 242 9 is_stmt 0 view .LVU169
 588 001e 6946     		mov	r1, sp
 589 0020 0548     		ldr	r0, .L34
 590 0022 FFF7FEFF 		bl	HAL_DAC_ConfigChannel
 591              	.LVL20:
 242:Core/Src/main.c ****         Error_Handler();
 592              		.loc 1 242 8 view .LVU170
 593 0026 20B9     		cbnz	r0, .L33
 245:Core/Src/main.c **** 
 594              		.loc 1 245 1 view .LVU171
 595 0028 03B0     		add	sp, sp, #12
 596              		.cfi_remember_state
ARM GAS  /tmp/cc3ZTMoH.s 			page 22


 597              		.cfi_def_cfa_offset 4
 598              		@ sp needed
 599 002a 5DF804FB 		ldr	pc, [sp], #4
 600              	.L32:
 601              		.cfi_restore_state
 234:Core/Src/main.c ****     }
 602              		.loc 1 234 9 is_stmt 1 view .LVU172
 603 002e FFF7FEFF 		bl	Error_Handler
 604              	.LVL21:
 605              	.L33:
 243:Core/Src/main.c ****     }
 606              		.loc 1 243 9 view .LVU173
 607 0032 FFF7FEFF 		bl	Error_Handler
 608              	.LVL22:
 609              	.L35:
 610 0036 00BF     		.align	2
 611              	.L34:
 612 0038 00000000 		.word	.LANCHOR2
 613 003c 00740040 		.word	1073771520
 614              		.cfi_endproc
 615              	.LFE242:
 617              		.section	.text.MX_TIM2_Init,"ax",%progbits
 618              		.align	1
 619              		.syntax unified
 620              		.thumb
 621              		.thumb_func
 622              		.fpu fpv4-sp-d16
 624              	MX_TIM2_Init:
 625              	.LFB243:
 249:Core/Src/main.c ****     uint32_t periodValue = (uint32_t)((SystemCoreClock)/(RAMP_FREQUENCY*NS));
 626              		.loc 1 249 20 view -0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 56
 629              		@ frame_needed = 0, uses_anonymous_args = 0
 630 0000 00B5     		push	{lr}
 631              		.cfi_def_cfa_offset 4
 632              		.cfi_offset 14, -4
 633 0002 8FB0     		sub	sp, sp, #60
 634              		.cfi_def_cfa_offset 64
 250:Core/Src/main.c ****     if(periodValue < 2) {
 635              		.loc 1 250 5 view .LVU175
 250:Core/Src/main.c ****     if(periodValue < 2) {
 636              		.loc 1 250 28 is_stmt 0 view .LVU176
 637 0004 264B     		ldr	r3, .L48
 638 0006 1A68     		ldr	r2, [r3]
 250:Core/Src/main.c ****     if(periodValue < 2) {
 639              		.loc 1 250 14 view .LVU177
 640 0008 264B     		ldr	r3, .L48+4
 641 000a A3FB0213 		umull	r1, r3, r3, r2
 642              	.LVL23:
 251:Core/Src/main.c ****         Error_Handler();
 643              		.loc 1 251 5 is_stmt 1 view .LVU178
 251:Core/Src/main.c ****         Error_Handler();
 644              		.loc 1 251 7 is_stmt 0 view .LVU179
 645 000e B2F5203F 		cmp	r2, #163840
 646 0012 3AD3     		bcc	.L43
 647 0014 1B0C     		lsrs	r3, r3, #16
ARM GAS  /tmp/cc3ZTMoH.s 			page 23


 648              	.LVL24:
 254:Core/Src/main.c ****     uint32_t prescalerValue = 0;
 649              		.loc 1 254 5 is_stmt 1 view .LVU180
 254:Core/Src/main.c ****     uint32_t prescalerValue = 0;
 650              		.loc 1 254 17 is_stmt 0 view .LVU181
 651 0016 5A1E     		subs	r2, r3, #1
 652              	.LVL25:
 255:Core/Src/main.c **** 
 653              		.loc 1 255 5 is_stmt 1 view .LVU182
 257:Core/Src/main.c ****     TIM_MasterConfigTypeDef sMasterConfig = {0};
 654              		.loc 1 257 5 view .LVU183
 257:Core/Src/main.c ****     TIM_MasterConfigTypeDef sMasterConfig = {0};
 655              		.loc 1 257 28 is_stmt 0 view .LVU184
 656 0018 0023     		movs	r3, #0
 657 001a 0A93     		str	r3, [sp, #40]
 658 001c 0B93     		str	r3, [sp, #44]
 659 001e 0C93     		str	r3, [sp, #48]
 660 0020 0D93     		str	r3, [sp, #52]
 258:Core/Src/main.c ****     TIM_OC_InitTypeDef sConfigOC = {0};
 661              		.loc 1 258 5 is_stmt 1 view .LVU185
 258:Core/Src/main.c ****     TIM_OC_InitTypeDef sConfigOC = {0};
 662              		.loc 1 258 29 is_stmt 0 view .LVU186
 663 0022 0893     		str	r3, [sp, #32]
 664 0024 0993     		str	r3, [sp, #36]
 259:Core/Src/main.c **** 
 665              		.loc 1 259 5 is_stmt 1 view .LVU187
 259:Core/Src/main.c **** 
 666              		.loc 1 259 24 is_stmt 0 view .LVU188
 667 0026 0193     		str	r3, [sp, #4]
 668 0028 0293     		str	r3, [sp, #8]
 669 002a 0393     		str	r3, [sp, #12]
 670 002c 0493     		str	r3, [sp, #16]
 671 002e 0593     		str	r3, [sp, #20]
 672 0030 0693     		str	r3, [sp, #24]
 673 0032 0793     		str	r3, [sp, #28]
 261:Core/Src/main.c ****     htim2.Init.Prescaler         = prescalerValue;
 674              		.loc 1 261 5 is_stmt 1 view .LVU189
 261:Core/Src/main.c ****     htim2.Init.Prescaler         = prescalerValue;
 675              		.loc 1 261 20 is_stmt 0 view .LVU190
 676 0034 1C48     		ldr	r0, .L48+8
 677 0036 4FF08041 		mov	r1, #1073741824
 678 003a 0160     		str	r1, [r0]
 262:Core/Src/main.c ****     htim2.Init.CounterMode       = TIM_COUNTERMODE_UP;
 679              		.loc 1 262 5 is_stmt 1 view .LVU191
 262:Core/Src/main.c ****     htim2.Init.CounterMode       = TIM_COUNTERMODE_UP;
 680              		.loc 1 262 34 is_stmt 0 view .LVU192
 681 003c 4360     		str	r3, [r0, #4]
 263:Core/Src/main.c ****     htim2.Init.Period            = periodValue;
 682              		.loc 1 263 5 is_stmt 1 view .LVU193
 263:Core/Src/main.c ****     htim2.Init.Period            = periodValue;
 683              		.loc 1 263 34 is_stmt 0 view .LVU194
 684 003e 8360     		str	r3, [r0, #8]
 264:Core/Src/main.c ****     htim2.Init.ClockDivision     = TIM_CLOCKDIVISION_DIV1;
 685              		.loc 1 264 5 is_stmt 1 view .LVU195
 264:Core/Src/main.c ****     htim2.Init.ClockDivision     = TIM_CLOCKDIVISION_DIV1;
 686              		.loc 1 264 34 is_stmt 0 view .LVU196
 687 0040 C260     		str	r2, [r0, #12]
ARM GAS  /tmp/cc3ZTMoH.s 			page 24


 265:Core/Src/main.c ****     htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 688              		.loc 1 265 5 is_stmt 1 view .LVU197
 265:Core/Src/main.c ****     htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 689              		.loc 1 265 34 is_stmt 0 view .LVU198
 690 0042 0361     		str	r3, [r0, #16]
 266:Core/Src/main.c ****     if (HAL_TIM_Base_Init(&htim2) != HAL_OK) {
 691              		.loc 1 266 5 is_stmt 1 view .LVU199
 266:Core/Src/main.c ****     if (HAL_TIM_Base_Init(&htim2) != HAL_OK) {
 692              		.loc 1 266 34 is_stmt 0 view .LVU200
 693 0044 8361     		str	r3, [r0, #24]
 267:Core/Src/main.c ****         Error_Handler();
 694              		.loc 1 267 5 is_stmt 1 view .LVU201
 267:Core/Src/main.c ****         Error_Handler();
 695              		.loc 1 267 9 is_stmt 0 view .LVU202
 696 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 697              	.LVL26:
 267:Core/Src/main.c ****         Error_Handler();
 698              		.loc 1 267 8 view .LVU203
 699 004a 00BB     		cbnz	r0, .L44
 270:Core/Src/main.c ****     if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK) {
 700              		.loc 1 270 5 is_stmt 1 view .LVU204
 270:Core/Src/main.c ****     if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK) {
 701              		.loc 1 270 36 is_stmt 0 view .LVU205
 702 004c 4FF48053 		mov	r3, #4096
 703 0050 0A93     		str	r3, [sp, #40]
 271:Core/Src/main.c ****         Error_Handler();
 704              		.loc 1 271 5 is_stmt 1 view .LVU206
 271:Core/Src/main.c ****         Error_Handler();
 705              		.loc 1 271 9 is_stmt 0 view .LVU207
 706 0052 0AA9     		add	r1, sp, #40
 707 0054 1448     		ldr	r0, .L48+8
 708 0056 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 709              	.LVL27:
 271:Core/Src/main.c ****         Error_Handler();
 710              		.loc 1 271 8 view .LVU208
 711 005a D0B9     		cbnz	r0, .L45
 278:Core/Src/main.c ****     sMasterConfig.MasterSlaveMode     = TIM_MASTERSLAVEMODE_DISABLE;
 712              		.loc 1 278 5 is_stmt 1 view .LVU209
 278:Core/Src/main.c ****     sMasterConfig.MasterSlaveMode     = TIM_MASTERSLAVEMODE_DISABLE;
 713              		.loc 1 278 39 is_stmt 0 view .LVU210
 714 005c 2023     		movs	r3, #32
 715 005e 0893     		str	r3, [sp, #32]
 279:Core/Src/main.c ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK) {
 716              		.loc 1 279 5 is_stmt 1 view .LVU211
 279:Core/Src/main.c ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK) {
 717              		.loc 1 279 39 is_stmt 0 view .LVU212
 718 0060 0023     		movs	r3, #0
 719 0062 0993     		str	r3, [sp, #36]
 280:Core/Src/main.c ****         Error_Handler();
 720              		.loc 1 280 5 is_stmt 1 view .LVU213
 280:Core/Src/main.c ****         Error_Handler();
 721              		.loc 1 280 9 is_stmt 0 view .LVU214
 722 0064 08A9     		add	r1, sp, #32
 723 0066 1048     		ldr	r0, .L48+8
 724 0068 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 725              	.LVL28:
 280:Core/Src/main.c ****         Error_Handler();
ARM GAS  /tmp/cc3ZTMoH.s 			page 25


 726              		.loc 1 280 8 view .LVU215
 727 006c 98B9     		cbnz	r0, .L46
 283:Core/Src/main.c ****     sConfigOC.Pulse      = 0;
 728              		.loc 1 283 5 is_stmt 1 view .LVU216
 283:Core/Src/main.c ****     sConfigOC.Pulse      = 0;
 729              		.loc 1 283 26 is_stmt 0 view .LVU217
 730 006e 6023     		movs	r3, #96
 731 0070 0193     		str	r3, [sp, #4]
 284:Core/Src/main.c ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 732              		.loc 1 284 5 is_stmt 1 view .LVU218
 284:Core/Src/main.c ****     sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 733              		.loc 1 284 26 is_stmt 0 view .LVU219
 734 0072 0022     		movs	r2, #0
 735 0074 0292     		str	r2, [sp, #8]
 285:Core/Src/main.c ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 736              		.loc 1 285 5 is_stmt 1 view .LVU220
 285:Core/Src/main.c ****     sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 737              		.loc 1 285 26 is_stmt 0 view .LVU221
 738 0076 0392     		str	r2, [sp, #12]
 286:Core/Src/main.c ****     if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
 739              		.loc 1 286 5 is_stmt 1 view .LVU222
 286:Core/Src/main.c ****     if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
 740              		.loc 1 286 26 is_stmt 0 view .LVU223
 741 0078 0592     		str	r2, [sp, #20]
 287:Core/Src/main.c ****         Error_Handler();
 742              		.loc 1 287 5 is_stmt 1 view .LVU224
 287:Core/Src/main.c ****         Error_Handler();
 743              		.loc 1 287 9 is_stmt 0 view .LVU225
 744 007a 01A9     		add	r1, sp, #4
 745 007c 0A48     		ldr	r0, .L48+8
 746 007e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 747              	.LVL29:
 287:Core/Src/main.c ****         Error_Handler();
 748              		.loc 1 287 8 view .LVU226
 749 0082 50B9     		cbnz	r0, .L47
 290:Core/Src/main.c **** 
 750              		.loc 1 290 1 view .LVU227
 751 0084 0FB0     		add	sp, sp, #60
 752              		.cfi_remember_state
 753              		.cfi_def_cfa_offset 4
 754              		@ sp needed
 755 0086 5DF804FB 		ldr	pc, [sp], #4
 756              	.LVL30:
 757              	.L43:
 758              		.cfi_restore_state
 252:Core/Src/main.c ****     }
 759              		.loc 1 252 9 is_stmt 1 view .LVU228
 760 008a FFF7FEFF 		bl	Error_Handler
 761              	.LVL31:
 762              	.L44:
 268:Core/Src/main.c ****     }
 763              		.loc 1 268 9 view .LVU229
 764 008e FFF7FEFF 		bl	Error_Handler
 765              	.LVL32:
 766              	.L45:
 272:Core/Src/main.c ****     }
 767              		.loc 1 272 9 view .LVU230
ARM GAS  /tmp/cc3ZTMoH.s 			page 26


 768 0092 FFF7FEFF 		bl	Error_Handler
 769              	.LVL33:
 770              	.L46:
 281:Core/Src/main.c ****     }
 771              		.loc 1 281 9 view .LVU231
 772 0096 FFF7FEFF 		bl	Error_Handler
 773              	.LVL34:
 774              	.L47:
 288:Core/Src/main.c ****     }
 775              		.loc 1 288 9 view .LVU232
 776 009a FFF7FEFF 		bl	Error_Handler
 777              	.LVL35:
 778              	.L49:
 779 009e 00BF     		.align	2
 780              	.L48:
 781 00a0 00000000 		.word	SystemCoreClock
 782 00a4 CDCCCCCC 		.word	-858993459
 783 00a8 00000000 		.word	.LANCHOR3
 784              		.cfi_endproc
 785              	.LFE243:
 787              		.section	.text.SystemClock_Config,"ax",%progbits
 788              		.align	1
 789              		.global	SystemClock_Config
 790              		.syntax unified
 791              		.thumb
 792              		.thumb_func
 793              		.fpu fpv4-sp-d16
 795              	SystemClock_Config:
 796              	.LFB240:
 165:Core/Src/main.c ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 797              		.loc 1 165 26 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 80
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801 0000 00B5     		push	{lr}
 802              		.cfi_def_cfa_offset 4
 803              		.cfi_offset 14, -4
 804 0002 95B0     		sub	sp, sp, #84
 805              		.cfi_def_cfa_offset 88
 166:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 806              		.loc 1 166 5 view .LVU234
 166:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 807              		.loc 1 166 24 is_stmt 0 view .LVU235
 808 0004 3422     		movs	r2, #52
 809 0006 0021     		movs	r1, #0
 810 0008 07A8     		add	r0, sp, #28
 811 000a FFF7FEFF 		bl	memset
 812              	.LVL36:
 167:Core/Src/main.c **** 
 813              		.loc 1 167 5 is_stmt 1 view .LVU236
 167:Core/Src/main.c **** 
 814              		.loc 1 167 24 is_stmt 0 view .LVU237
 815 000e 0023     		movs	r3, #0
 816 0010 0293     		str	r3, [sp, #8]
 817 0012 0393     		str	r3, [sp, #12]
 818 0014 0493     		str	r3, [sp, #16]
 819 0016 0593     		str	r3, [sp, #20]
ARM GAS  /tmp/cc3ZTMoH.s 			page 27


 820 0018 0693     		str	r3, [sp, #24]
 169:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 821              		.loc 1 169 5 is_stmt 1 view .LVU238
 822              	.LBB13:
 169:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 823              		.loc 1 169 5 view .LVU239
 824 001a 0093     		str	r3, [sp]
 169:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 825              		.loc 1 169 5 view .LVU240
 826 001c 1F4A     		ldr	r2, .L56
 827 001e 116C     		ldr	r1, [r2, #64]
 828 0020 41F08051 		orr	r1, r1, #268435456
 829 0024 1164     		str	r1, [r2, #64]
 169:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 830              		.loc 1 169 5 view .LVU241
 831 0026 126C     		ldr	r2, [r2, #64]
 832 0028 02F08052 		and	r2, r2, #268435456
 833 002c 0092     		str	r2, [sp]
 169:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 834              		.loc 1 169 5 view .LVU242
 835 002e 009A     		ldr	r2, [sp]
 836              	.LBE13:
 169:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 837              		.loc 1 169 5 view .LVU243
 170:Core/Src/main.c **** 
 838              		.loc 1 170 5 view .LVU244
 839              	.LBB14:
 170:Core/Src/main.c **** 
 840              		.loc 1 170 5 view .LVU245
 841 0030 0193     		str	r3, [sp, #4]
 170:Core/Src/main.c **** 
 842              		.loc 1 170 5 view .LVU246
 843 0032 1B49     		ldr	r1, .L56+4
 844 0034 0A68     		ldr	r2, [r1]
 845 0036 22F44042 		bic	r2, r2, #49152
 846 003a 42F48042 		orr	r2, r2, #16384
 847 003e 0A60     		str	r2, [r1]
 170:Core/Src/main.c **** 
 848              		.loc 1 170 5 view .LVU247
 849 0040 0A68     		ldr	r2, [r1]
 850 0042 02F44042 		and	r2, r2, #49152
 851 0046 0192     		str	r2, [sp, #4]
 170:Core/Src/main.c **** 
 852              		.loc 1 170 5 view .LVU248
 853 0048 019A     		ldr	r2, [sp, #4]
 854              	.LBE14:
 170:Core/Src/main.c **** 
 855              		.loc 1 170 5 view .LVU249
 172:Core/Src/main.c ****     RCC_OscInitStruct.HSIState            = RCC_HSI_ON;
 856              		.loc 1 172 5 view .LVU250
 172:Core/Src/main.c ****     RCC_OscInitStruct.HSIState            = RCC_HSI_ON;
 857              		.loc 1 172 43 is_stmt 0 view .LVU251
 858 004a 0222     		movs	r2, #2
 859 004c 0792     		str	r2, [sp, #28]
 173:Core/Src/main.c ****     RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 860              		.loc 1 173 5 is_stmt 1 view .LVU252
 173:Core/Src/main.c ****     RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
ARM GAS  /tmp/cc3ZTMoH.s 			page 28


 861              		.loc 1 173 43 is_stmt 0 view .LVU253
 862 004e 0121     		movs	r1, #1
 863 0050 0A91     		str	r1, [sp, #40]
 174:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState        = RCC_PLL_ON;
 864              		.loc 1 174 5 is_stmt 1 view .LVU254
 174:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState        = RCC_PLL_ON;
 865              		.loc 1 174 43 is_stmt 0 view .LVU255
 866 0052 1021     		movs	r1, #16
 867 0054 0B91     		str	r1, [sp, #44]
 175:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource       = RCC_PLLSOURCE_HSI;
 868              		.loc 1 175 5 is_stmt 1 view .LVU256
 175:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource       = RCC_PLLSOURCE_HSI;
 869              		.loc 1 175 43 is_stmt 0 view .LVU257
 870 0056 0D92     		str	r2, [sp, #52]
 176:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM            = 16;
 871              		.loc 1 176 5 is_stmt 1 view .LVU258
 176:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM            = 16;
 872              		.loc 1 176 43 is_stmt 0 view .LVU259
 873 0058 0E93     		str	r3, [sp, #56]
 177:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN            = 336;
 874              		.loc 1 177 5 is_stmt 1 view .LVU260
 177:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN            = 336;
 875              		.loc 1 177 43 is_stmt 0 view .LVU261
 876 005a 0F91     		str	r1, [sp, #60]
 178:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP            = RCC_PLLP_DIV4;
 877              		.loc 1 178 5 is_stmt 1 view .LVU262
 178:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP            = RCC_PLLP_DIV4;
 878              		.loc 1 178 43 is_stmt 0 view .LVU263
 879 005c 4FF4A873 		mov	r3, #336
 880 0060 1093     		str	r3, [sp, #64]
 179:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ            = 2;
 881              		.loc 1 179 5 is_stmt 1 view .LVU264
 179:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ            = 2;
 882              		.loc 1 179 43 is_stmt 0 view .LVU265
 883 0062 0423     		movs	r3, #4
 884 0064 1193     		str	r3, [sp, #68]
 180:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLR            = 2;
 885              		.loc 1 180 5 is_stmt 1 view .LVU266
 180:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLR            = 2;
 886              		.loc 1 180 43 is_stmt 0 view .LVU267
 887 0066 1292     		str	r2, [sp, #72]
 181:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 888              		.loc 1 181 5 is_stmt 1 view .LVU268
 181:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 889              		.loc 1 181 43 is_stmt 0 view .LVU269
 890 0068 1392     		str	r2, [sp, #76]
 182:Core/Src/main.c ****         Error_Handler();
 891              		.loc 1 182 5 is_stmt 1 view .LVU270
 182:Core/Src/main.c ****         Error_Handler();
 892              		.loc 1 182 9 is_stmt 0 view .LVU271
 893 006a 07A8     		add	r0, sp, #28
 894 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 895              	.LVL37:
 182:Core/Src/main.c ****         Error_Handler();
 896              		.loc 1 182 8 view .LVU272
 897 0070 80B9     		cbnz	r0, .L54
 186:Core/Src/main.c ****                                        RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/cc3ZTMoH.s 			page 29


 898              		.loc 1 186 5 is_stmt 1 view .LVU273
 186:Core/Src/main.c ****                                        RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 899              		.loc 1 186 38 is_stmt 0 view .LVU274
 900 0072 0F23     		movs	r3, #15
 901 0074 0293     		str	r3, [sp, #8]
 188:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider  = RCC_SYSCLK_DIV1;
 902              		.loc 1 188 5 is_stmt 1 view .LVU275
 188:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider  = RCC_SYSCLK_DIV1;
 903              		.loc 1 188 38 is_stmt 0 view .LVU276
 904 0076 0221     		movs	r1, #2
 905 0078 0391     		str	r1, [sp, #12]
 189:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 906              		.loc 1 189 5 is_stmt 1 view .LVU277
 189:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 907              		.loc 1 189 38 is_stmt 0 view .LVU278
 908 007a 0023     		movs	r3, #0
 909 007c 0493     		str	r3, [sp, #16]
 190:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 910              		.loc 1 190 5 is_stmt 1 view .LVU279
 190:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 911              		.loc 1 190 38 is_stmt 0 view .LVU280
 912 007e 4FF48052 		mov	r2, #4096
 913 0082 0592     		str	r2, [sp, #20]
 191:Core/Src/main.c **** 
 914              		.loc 1 191 5 is_stmt 1 view .LVU281
 191:Core/Src/main.c **** 
 915              		.loc 1 191 38 is_stmt 0 view .LVU282
 916 0084 0693     		str	r3, [sp, #24]
 193:Core/Src/main.c ****         Error_Handler();
 917              		.loc 1 193 5 is_stmt 1 view .LVU283
 193:Core/Src/main.c ****         Error_Handler();
 918              		.loc 1 193 9 is_stmt 0 view .LVU284
 919 0086 02A8     		add	r0, sp, #8
 920 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 921              	.LVL38:
 193:Core/Src/main.c ****         Error_Handler();
 922              		.loc 1 193 8 view .LVU285
 923 008c 20B9     		cbnz	r0, .L55
 196:Core/Src/main.c **** 
 924              		.loc 1 196 1 view .LVU286
 925 008e 15B0     		add	sp, sp, #84
 926              		.cfi_remember_state
 927              		.cfi_def_cfa_offset 4
 928              		@ sp needed
 929 0090 5DF804FB 		ldr	pc, [sp], #4
 930              	.L54:
 931              		.cfi_restore_state
 183:Core/Src/main.c ****     }
 932              		.loc 1 183 9 is_stmt 1 view .LVU287
 933 0094 FFF7FEFF 		bl	Error_Handler
 934              	.LVL39:
 935              	.L55:
 194:Core/Src/main.c ****     }
 936              		.loc 1 194 9 view .LVU288
 937 0098 FFF7FEFF 		bl	Error_Handler
 938              	.LVL40:
 939              	.L57:
ARM GAS  /tmp/cc3ZTMoH.s 			page 30


 940              		.align	2
 941              	.L56:
 942 009c 00380240 		.word	1073887232
 943 00a0 00700040 		.word	1073770496
 944              		.cfi_endproc
 945              	.LFE240:
 947              		.section	.text.main,"ax",%progbits
 948              		.align	1
 949              		.global	main
 950              		.syntax unified
 951              		.thumb
 952              		.thumb_func
 953              		.fpu fpv4-sp-d16
 955              	main:
 956              	.LFB239:
  58:Core/Src/main.c ****     #ifdef DEBUG
 957              		.loc 1 58 12 view -0
 958              		.cfi_startproc
 959              		@ Volatile: function does not return.
 960              		@ args = 0, pretend = 0, frame = 0
 961              		@ frame_needed = 0, uses_anonymous_args = 0
 962 0000 00B5     		push	{lr}
 963              		.cfi_def_cfa_offset 4
 964              		.cfi_offset 14, -4
 965 0002 83B0     		sub	sp, sp, #12
 966              		.cfi_def_cfa_offset 16
  62:Core/Src/main.c ****     #endif
 967              		.loc 1 62 9 view .LVU290
 968 0004 314D     		ldr	r5, .L68
 969 0006 2B46     		mov	r3, r5
 970 0008 314A     		ldr	r2, .L68+4
 971 000a 1288     		ldrh	r2, [r2]
 972 000c 3149     		ldr	r1, .L68+8
 973 000e 0988     		ldrh	r1, [r1]
 974 0010 4FF48050 		mov	r0, #4096
 975 0014 FFF7FEFF 		bl	buildRamp
 976              	.LVL41:
  64:Core/Src/main.c ****     ready_2_half = false;
 977              		.loc 1 64 5 view .LVU291
  64:Core/Src/main.c ****     ready_2_half = false;
 978              		.loc 1 64 18 is_stmt 0 view .LVU292
 979 0018 0024     		movs	r4, #0
 980 001a 2F4B     		ldr	r3, .L68+12
 981 001c 1C70     		strb	r4, [r3]
  65:Core/Src/main.c **** 
 982              		.loc 1 65 5 is_stmt 1 view .LVU293
  65:Core/Src/main.c **** 
 983              		.loc 1 65 18 is_stmt 0 view .LVU294
 984 001e 2F4B     		ldr	r3, .L68+16
 985 0020 1C70     		strb	r4, [r3]
  67:Core/Src/main.c ****     SystemClock_Config();
 986              		.loc 1 67 5 is_stmt 1 view .LVU295
 987 0022 FFF7FEFF 		bl	HAL_Init
 988              	.LVL42:
  68:Core/Src/main.c **** 
 989              		.loc 1 68 5 view .LVU296
 990 0026 FFF7FEFF 		bl	SystemClock_Config
ARM GAS  /tmp/cc3ZTMoH.s 			page 31


 991              	.LVL43:
  70:Core/Src/main.c ****     MX_DMA_Init();
 992              		.loc 1 70 5 view .LVU297
 993 002a FFF7FEFF 		bl	MX_GPIO_Init
 994              	.LVL44:
  71:Core/Src/main.c ****     MX_ADC1_Init();
 995              		.loc 1 71 5 view .LVU298
 996 002e FFF7FEFF 		bl	MX_DMA_Init
 997              	.LVL45:
  72:Core/Src/main.c ****     MX_USART2_UART_Init();
 998              		.loc 1 72 5 view .LVU299
 999 0032 FFF7FEFF 		bl	MX_ADC1_Init
 1000              	.LVL46:
  73:Core/Src/main.c ****     MX_DAC_Init();
 1001              		.loc 1 73 5 view .LVU300
 1002 0036 FFF7FEFF 		bl	MX_USART2_UART_Init
 1003              	.LVL47:
  74:Core/Src/main.c ****     MX_TIM2_Init();
 1004              		.loc 1 74 5 view .LVU301
 1005 003a FFF7FEFF 		bl	MX_DAC_Init
 1006              	.LVL48:
  75:Core/Src/main.c **** 
 1007              		.loc 1 75 5 view .LVU302
 1008 003e FFF7FEFF 		bl	MX_TIM2_Init
 1009              	.LVL49:
  80:Core/Src/main.c ****                          DAC_CHANNEL_1, 
 1010              		.loc 1 80 5 view .LVU303
  80:Core/Src/main.c ****                          DAC_CHANNEL_1, 
 1011              		.loc 1 80 8 is_stmt 0 view .LVU304
 1012 0042 0094     		str	r4, [sp]
 1013 0044 4FF48053 		mov	r3, #4096
 1014 0048 2A46     		mov	r2, r5
 1015 004a 2146     		mov	r1, r4
 1016 004c 2448     		ldr	r0, .L68+20
 1017 004e FFF7FEFF 		bl	HAL_DAC_Start_DMA
 1018              	.LVL50:
  80:Core/Src/main.c ****                          DAC_CHANNEL_1, 
 1019              		.loc 1 80 7 view .LVU305
 1020 0052 08B1     		cbz	r0, .L59
  85:Core/Src/main.c **** 
 1021              		.loc 1 85 9 is_stmt 1 view .LVU306
 1022 0054 FFF7FEFF 		bl	Error_Handler
 1023              	.LVL51:
 1024              	.L59:
  87:Core/Src/main.c ****                          (uint32_t*)&adc_val,
 1025              		.loc 1 87 5 view .LVU307
  87:Core/Src/main.c ****                          (uint32_t*)&adc_val,
 1026              		.loc 1 87 8 is_stmt 0 view .LVU308
 1027 0058 4FF40052 		mov	r2, #8192
 1028 005c 2149     		ldr	r1, .L68+24
 1029 005e 2248     		ldr	r0, .L68+28
 1030 0060 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1031              	.LVL52:
  87:Core/Src/main.c ****                          (uint32_t*)&adc_val,
 1032              		.loc 1 87 7 view .LVU309
 1033 0064 08B1     		cbz	r0, .L60
  90:Core/Src/main.c **** 
ARM GAS  /tmp/cc3ZTMoH.s 			page 32


 1034              		.loc 1 90 9 is_stmt 1 view .LVU310
 1035 0066 FFF7FEFF 		bl	Error_Handler
 1036              	.LVL53:
 1037              	.L60:
  92:Core/Src/main.c ****         Error_Handler();
 1038              		.loc 1 92 5 view .LVU311
  92:Core/Src/main.c ****         Error_Handler();
 1039              		.loc 1 92 8 is_stmt 0 view .LVU312
 1040 006a 2048     		ldr	r0, .L68+32
 1041 006c FFF7FEFF 		bl	HAL_TIM_Base_Start
 1042              	.LVL54:
  92:Core/Src/main.c ****         Error_Handler();
 1043              		.loc 1 92 7 view .LVU313
 1044 0070 08B1     		cbz	r0, .L61
  93:Core/Src/main.c ****     
 1045              		.loc 1 93 9 is_stmt 1 view .LVU314
 1046 0072 FFF7FEFF 		bl	Error_Handler
 1047              	.LVL55:
 1048              	.L61:
  96:Core/Src/main.c ****         Error_Handler();
 1049              		.loc 1 96 5 view .LVU315
  96:Core/Src/main.c ****         Error_Handler();
 1050              		.loc 1 96 8 is_stmt 0 view .LVU316
 1051 0076 0021     		movs	r1, #0
 1052 0078 1C48     		ldr	r0, .L68+32
 1053 007a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1054              	.LVL56:
  96:Core/Src/main.c ****         Error_Handler();
 1055              		.loc 1 96 7 view .LVU317
 1056 007e A0B9     		cbnz	r0, .L66
 1057              	.L64:
  99:Core/Src/main.c ****         if(ready_1_half) {
 1058              		.loc 1 99 5 is_stmt 1 view .LVU318
 100:Core/Src/main.c ****             ready_1_half = false;
 1059              		.loc 1 100 9 view .LVU319
 100:Core/Src/main.c ****             ready_1_half = false;
 1060              		.loc 1 100 12 is_stmt 0 view .LVU320
 1061 0080 154B     		ldr	r3, .L68+12
 1062 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 100:Core/Src/main.c ****             ready_1_half = false;
 1063              		.loc 1 100 11 view .LVU321
 1064 0084 9BB9     		cbnz	r3, .L67
 1065              	.L63:
 105:Core/Src/main.c ****             ready_2_half = false;
 1066              		.loc 1 105 9 is_stmt 1 view .LVU322
 105:Core/Src/main.c ****             ready_2_half = false;
 1067              		.loc 1 105 12 is_stmt 0 view .LVU323
 1068 0086 154B     		ldr	r3, .L68+16
 1069 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 105:Core/Src/main.c ****             ready_2_half = false;
 1070              		.loc 1 105 11 view .LVU324
 1071 008a 002B     		cmp	r3, #0
 1072 008c F8D0     		beq	.L64
 106:Core/Src/main.c ****             HAL_GPIO_TogglePin (LD2_GPIO_Port, LD2_Pin);
 1073              		.loc 1 106 13 is_stmt 1 view .LVU325
 106:Core/Src/main.c ****             HAL_GPIO_TogglePin (LD2_GPIO_Port, LD2_Pin);
 1074              		.loc 1 106 26 is_stmt 0 view .LVU326
ARM GAS  /tmp/cc3ZTMoH.s 			page 33


 1075 008e 134B     		ldr	r3, .L68+16
 1076 0090 0022     		movs	r2, #0
 1077 0092 1A70     		strb	r2, [r3]
 107:Core/Src/main.c ****             memcpy(txBuff, &adc_val[NS], NS*sizeof(*adc_val));
 1078              		.loc 1 107 13 is_stmt 1 view .LVU327
 1079 0094 2021     		movs	r1, #32
 1080 0096 1648     		ldr	r0, .L68+36
 1081 0098 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1082              	.LVL57:
 108:Core/Src/main.c ****             // for(int i=0; i<NS; i++) {
 1083              		.loc 1 108 13 view .LVU328
 1084 009c 4FF40052 		mov	r2, #8192
 1085 00a0 1449     		ldr	r1, .L68+40
 1086 00a2 1548     		ldr	r0, .L68+44
 1087 00a4 FFF7FEFF 		bl	memcpy
 1088              	.LVL58:
 1089 00a8 EAE7     		b	.L64
 1090              	.L66:
  97:Core/Src/main.c **** 
 1091              		.loc 1 97 9 view .LVU329
 1092 00aa FFF7FEFF 		bl	Error_Handler
 1093              	.LVL59:
 1094              	.L67:
 101:Core/Src/main.c ****             HAL_GPIO_TogglePin (LD2_GPIO_Port, LD2_Pin);
 1095              		.loc 1 101 13 view .LVU330
 101:Core/Src/main.c ****             HAL_GPIO_TogglePin (LD2_GPIO_Port, LD2_Pin);
 1096              		.loc 1 101 26 is_stmt 0 view .LVU331
 1097 00ae 0A4B     		ldr	r3, .L68+12
 1098 00b0 0022     		movs	r2, #0
 1099 00b2 1A70     		strb	r2, [r3]
 102:Core/Src/main.c ****             memcpy(txBuff, adc_val, NS*sizeof(*adc_val));
 1100              		.loc 1 102 13 is_stmt 1 view .LVU332
 1101 00b4 2021     		movs	r1, #32
 1102 00b6 0E48     		ldr	r0, .L68+36
 1103 00b8 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1104              	.LVL60:
 103:Core/Src/main.c ****         }
 1105              		.loc 1 103 13 view .LVU333
 1106 00bc 4FF40052 		mov	r2, #8192
 1107 00c0 0849     		ldr	r1, .L68+24
 1108 00c2 0D48     		ldr	r0, .L68+44
 1109 00c4 FFF7FEFF 		bl	memcpy
 1110              	.LVL61:
 1111 00c8 DDE7     		b	.L63
 1112              	.L69:
 1113 00ca 00BF     		.align	2
 1114              	.L68:
 1115 00cc 00000000 		.word	Wave_LUT
 1116 00d0 00000000 		.word	.LANCHOR4
 1117 00d4 00000000 		.word	.LANCHOR5
 1118 00d8 00000000 		.word	.LANCHOR6
 1119 00dc 00000000 		.word	.LANCHOR7
 1120 00e0 00000000 		.word	.LANCHOR2
 1121 00e4 00000000 		.word	adc_val
 1122 00e8 00000000 		.word	.LANCHOR0
 1123 00ec 00000000 		.word	.LANCHOR3
 1124 00f0 00000240 		.word	1073872896
ARM GAS  /tmp/cc3ZTMoH.s 			page 34


 1125 00f4 00200000 		.word	adc_val+8192
 1126 00f8 00000000 		.word	txBuff
 1127              		.cfi_endproc
 1128              	.LFE239:
 1130              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1131              		.align	1
 1132              		.global	HAL_ADC_ConvHalfCpltCallback
 1133              		.syntax unified
 1134              		.thumb
 1135              		.thumb_func
 1136              		.fpu fpv4-sp-d16
 1138              	HAL_ADC_ConvHalfCpltCallback:
 1139              	.LVL62:
 1140              	.LFB248:
 352:Core/Src/main.c **** }
 353:Core/Src/main.c **** 
 354:Core/Src/main.c **** 
 355:Core/Src/main.c **** #ifdef  USE_FULL_ASSERT
 356:Core/Src/main.c **** void
 357:Core/Src/main.c **** assert_failed(uint8_t *file, uint32_t line) {
 358:Core/Src/main.c **** }
 359:Core/Src/main.c **** #endif /* USE_FULL_ASSERT */
 360:Core/Src/main.c **** 
 361:Core/Src/main.c **** 
 362:Core/Src/main.c **** 
 363:Core/Src/main.c **** /// ADC Conversion_Half_Complete callback
 364:Core/Src/main.c **** void
 365:Core/Src/main.c **** HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hAdc) {
 1141              		.loc 1 365 55 view -0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 0
 1144              		@ frame_needed = 0, uses_anonymous_args = 0
 1145              		@ link register save eliminated.
 366:Core/Src/main.c ****     UNUSED(hAdc);
 1146              		.loc 1 366 5 view .LVU335
 367:Core/Src/main.c ****     ready_1_half = true;
 1147              		.loc 1 367 5 view .LVU336
 1148              		.loc 1 367 18 is_stmt 0 view .LVU337
 1149 0000 014B     		ldr	r3, .L71
 1150 0002 0122     		movs	r2, #1
 1151 0004 1A70     		strb	r2, [r3]
 368:Core/Src/main.c **** }
 1152              		.loc 1 368 1 view .LVU338
 1153 0006 7047     		bx	lr
 1154              	.L72:
 1155              		.align	2
 1156              	.L71:
 1157 0008 00000000 		.word	.LANCHOR6
 1158              		.cfi_endproc
 1159              	.LFE248:
 1161              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 1162              		.align	1
 1163              		.global	HAL_ADC_ConvCpltCallback
 1164              		.syntax unified
 1165              		.thumb
 1166              		.thumb_func
 1167              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc3ZTMoH.s 			page 35


 1169              	HAL_ADC_ConvCpltCallback:
 1170              	.LVL63:
 1171              	.LFB249:
 369:Core/Src/main.c **** 
 370:Core/Src/main.c **** 
 371:Core/Src/main.c **** /// ADC Conversion_Complete callback
 372:Core/Src/main.c **** void
 373:Core/Src/main.c **** HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hAdc) {
 1172              		.loc 1 373 51 is_stmt 1 view -0
 1173              		.cfi_startproc
 1174              		@ args = 0, pretend = 0, frame = 0
 1175              		@ frame_needed = 0, uses_anonymous_args = 0
 1176              		@ link register save eliminated.
 374:Core/Src/main.c ****     UNUSED(hAdc);
 1177              		.loc 1 374 5 view .LVU340
 375:Core/Src/main.c ****     ready_2_half = true;
 1178              		.loc 1 375 5 view .LVU341
 1179              		.loc 1 375 18 is_stmt 0 view .LVU342
 1180 0000 014B     		ldr	r3, .L74
 1181 0002 0122     		movs	r2, #1
 1182 0004 1A70     		strb	r2, [r3]
 376:Core/Src/main.c **** }
 1183              		.loc 1 376 1 view .LVU343
 1184 0006 7047     		bx	lr
 1185              	.L75:
 1186              		.align	2
 1187              	.L74:
 1188 0008 00000000 		.word	.LANCHOR7
 1189              		.cfi_endproc
 1190              	.LFE249:
 1192              		.global	buf
 1193              		.global	ready_2_half
 1194              		.global	ready_1_half
 1195              		.global	rampMax
 1196              		.global	rampMin
 1197              		.global	txBuff
 1198              		.global	adc_val
 1199              		.global	Wave_LUT
 1200              		.global	huart2
 1201              		.global	htim2
 1202              		.global	hdma_dac1
 1203              		.global	hdac
 1204              		.global	hdma_adc1
 1205              		.global	hadc1
 1206              		.section	.bss.Wave_LUT,"aw",%nobits
 1207              		.align	2
 1210              	Wave_LUT:
 1211 0000 00000000 		.space	8192
 1211      00000000 
 1211      00000000 
 1211      00000000 
 1211      00000000 
 1212              		.section	.bss.adc_val,"aw",%nobits
 1213              		.align	2
 1216              	adc_val:
 1217 0000 00000000 		.space	16384
 1217      00000000 
ARM GAS  /tmp/cc3ZTMoH.s 			page 36


 1217      00000000 
 1217      00000000 
 1217      00000000 
 1218              		.section	.bss.buf,"aw",%nobits
 1219              		.align	2
 1222              	buf:
 1223 0000 00000000 		.space	80
 1223      00000000 
 1223      00000000 
 1223      00000000 
 1223      00000000 
 1224              		.section	.bss.hadc1,"aw",%nobits
 1225              		.align	2
 1226              		.set	.LANCHOR0,. + 0
 1229              	hadc1:
 1230 0000 00000000 		.space	72
 1230      00000000 
 1230      00000000 
 1230      00000000 
 1230      00000000 
 1231              		.section	.bss.hdac,"aw",%nobits
 1232              		.align	2
 1233              		.set	.LANCHOR2,. + 0
 1236              	hdac:
 1237 0000 00000000 		.space	20
 1237      00000000 
 1237      00000000 
 1237      00000000 
 1237      00000000 
 1238              		.section	.bss.hdma_adc1,"aw",%nobits
 1239              		.align	2
 1242              	hdma_adc1:
 1243 0000 00000000 		.space	96
 1243      00000000 
 1243      00000000 
 1243      00000000 
 1243      00000000 
 1244              		.section	.bss.hdma_dac1,"aw",%nobits
 1245              		.align	2
 1248              	hdma_dac1:
 1249 0000 00000000 		.space	96
 1249      00000000 
 1249      00000000 
 1249      00000000 
 1249      00000000 
 1250              		.section	.bss.htim2,"aw",%nobits
 1251              		.align	2
 1252              		.set	.LANCHOR3,. + 0
 1255              	htim2:
 1256 0000 00000000 		.space	72
 1256      00000000 
 1256      00000000 
 1256      00000000 
 1256      00000000 
 1257              		.section	.bss.huart2,"aw",%nobits
 1258              		.align	2
 1259              		.set	.LANCHOR1,. + 0
ARM GAS  /tmp/cc3ZTMoH.s 			page 37


 1262              	huart2:
 1263 0000 00000000 		.space	68
 1263      00000000 
 1263      00000000 
 1263      00000000 
 1263      00000000 
 1264              		.section	.bss.rampMin,"aw",%nobits
 1265              		.align	1
 1266              		.set	.LANCHOR5,. + 0
 1269              	rampMin:
 1270 0000 0000     		.space	2
 1271              		.section	.bss.ready_1_half,"aw",%nobits
 1272              		.set	.LANCHOR6,. + 0
 1275              	ready_1_half:
 1276 0000 00       		.space	1
 1277              		.section	.bss.ready_2_half,"aw",%nobits
 1278              		.set	.LANCHOR7,. + 0
 1281              	ready_2_half:
 1282 0000 00       		.space	1
 1283              		.section	.bss.txBuff,"aw",%nobits
 1284              		.align	2
 1287              	txBuff:
 1288 0000 00000000 		.space	8192
 1288      00000000 
 1288      00000000 
 1288      00000000 
 1288      00000000 
 1289              		.section	.data.rampMax,"aw"
 1290              		.align	1
 1291              		.set	.LANCHOR4,. + 0
 1294              	rampMax:
 1295 0000 FF0F     		.short	4095
 1296              		.text
 1297              	.Letext0:
 1298              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 1299              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1300              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1301              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1302              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1303              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1304              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1305              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1306              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1307              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dac.h"
 1308              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1309              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1310              		.file 15 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1311              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1312              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1313              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1314              		.file 19 "<built-in>"
ARM GAS  /tmp/cc3ZTMoH.s 			page 38


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc3ZTMoH.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc3ZTMoH.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc3ZTMoH.s:162    .text.MX_GPIO_Init:000000000000009c $d
     /tmp/cc3ZTMoH.s:169    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/cc3ZTMoH.s:175    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/cc3ZTMoH.s:249    .text.MX_DMA_Init:0000000000000054 $d
     /tmp/cc3ZTMoH.s:254    .text.buildRamp:0000000000000000 $t
     /tmp/cc3ZTMoH.s:261    .text.buildRamp:0000000000000000 buildRamp
     /tmp/cc3ZTMoH.s:325    .text.Error_Handler:0000000000000000 $t
     /tmp/cc3ZTMoH.s:332    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc3ZTMoH.s:364    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/cc3ZTMoH.s:370    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/cc3ZTMoH.s:473    .text.MX_ADC1_Init:0000000000000064 $d
     /tmp/cc3ZTMoH.s:479    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/cc3ZTMoH.s:485    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/cc3ZTMoH.s:539    .text.MX_USART2_UART_Init:000000000000002c $d
     /tmp/cc3ZTMoH.s:545    .text.MX_DAC_Init:0000000000000000 $t
     /tmp/cc3ZTMoH.s:551    .text.MX_DAC_Init:0000000000000000 MX_DAC_Init
     /tmp/cc3ZTMoH.s:612    .text.MX_DAC_Init:0000000000000038 $d
     /tmp/cc3ZTMoH.s:618    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/cc3ZTMoH.s:624    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/cc3ZTMoH.s:781    .text.MX_TIM2_Init:00000000000000a0 $d
     /tmp/cc3ZTMoH.s:788    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc3ZTMoH.s:795    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc3ZTMoH.s:942    .text.SystemClock_Config:000000000000009c $d
     /tmp/cc3ZTMoH.s:948    .text.main:0000000000000000 $t
     /tmp/cc3ZTMoH.s:955    .text.main:0000000000000000 main
     /tmp/cc3ZTMoH.s:1115   .text.main:00000000000000cc $d
     /tmp/cc3ZTMoH.s:1210   .bss.Wave_LUT:0000000000000000 Wave_LUT
     /tmp/cc3ZTMoH.s:1216   .bss.adc_val:0000000000000000 adc_val
     /tmp/cc3ZTMoH.s:1287   .bss.txBuff:0000000000000000 txBuff
     /tmp/cc3ZTMoH.s:1131   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/cc3ZTMoH.s:1138   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/cc3ZTMoH.s:1157   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000008 $d
     /tmp/cc3ZTMoH.s:1162   .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/cc3ZTMoH.s:1169   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/cc3ZTMoH.s:1188   .text.HAL_ADC_ConvCpltCallback:0000000000000008 $d
     /tmp/cc3ZTMoH.s:1222   .bss.buf:0000000000000000 buf
     /tmp/cc3ZTMoH.s:1281   .bss.ready_2_half:0000000000000000 ready_2_half
     /tmp/cc3ZTMoH.s:1275   .bss.ready_1_half:0000000000000000 ready_1_half
     /tmp/cc3ZTMoH.s:1294   .data.rampMax:0000000000000000 rampMax
     /tmp/cc3ZTMoH.s:1269   .bss.rampMin:0000000000000000 rampMin
     /tmp/cc3ZTMoH.s:1262   .bss.huart2:0000000000000000 huart2
     /tmp/cc3ZTMoH.s:1255   .bss.htim2:0000000000000000 htim2
     /tmp/cc3ZTMoH.s:1248   .bss.hdma_dac1:0000000000000000 hdma_dac1
     /tmp/cc3ZTMoH.s:1236   .bss.hdac:0000000000000000 hdac
     /tmp/cc3ZTMoH.s:1242   .bss.hdma_adc1:0000000000000000 hdma_adc1
     /tmp/cc3ZTMoH.s:1229   .bss.hadc1:0000000000000000 hadc1
     /tmp/cc3ZTMoH.s:1207   .bss.Wave_LUT:0000000000000000 $d
     /tmp/cc3ZTMoH.s:1213   .bss.adc_val:0000000000000000 $d
     /tmp/cc3ZTMoH.s:1219   .bss.buf:0000000000000000 $d
     /tmp/cc3ZTMoH.s:1225   .bss.hadc1:0000000000000000 $d
     /tmp/cc3ZTMoH.s:1232   .bss.hdac:0000000000000000 $d
     /tmp/cc3ZTMoH.s:1239   .bss.hdma_adc1:0000000000000000 $d
     /tmp/cc3ZTMoH.s:1245   .bss.hdma_dac1:0000000000000000 $d
ARM GAS  /tmp/cc3ZTMoH.s 			page 39


     /tmp/cc3ZTMoH.s:1251   .bss.htim2:0000000000000000 $d
     /tmp/cc3ZTMoH.s:1258   .bss.huart2:0000000000000000 $d
     /tmp/cc3ZTMoH.s:1265   .bss.rampMin:0000000000000000 $d
     /tmp/cc3ZTMoH.s:1276   .bss.ready_1_half:0000000000000000 $d
     /tmp/cc3ZTMoH.s:1282   .bss.ready_2_half:0000000000000000 $d
     /tmp/cc3ZTMoH.s:1284   .bss.txBuff:0000000000000000 $d
     /tmp/cc3ZTMoH.s:1290   .data.rampMax:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_UART_Init
HAL_DAC_Init
HAL_DAC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
SystemCoreClock
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_DAC_Start_DMA
HAL_ADC_Start_DMA
HAL_TIM_Base_Start
HAL_TIM_PWM_Start
HAL_GPIO_TogglePin
memcpy
